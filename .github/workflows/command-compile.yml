name: Compile Command
on:
  issue_comment:
    types: [created]

jobs:
  init:
    runs-on: ubuntu-latest

    # On pull requests and if the comment starts with `/compile`
    if: github.event.issue.pull_request != '' && startsWith(github.event.comment.body, '/compile')

    outputs:
      git_path: ${{ steps.git-path.outputs.path }}
      arg1: ${{ steps.command.outputs.arg1 }}
      arg2: ${{ steps.command.outputs.arg2 }}
      head_ref: ${{ steps.comment-branch.outputs.head_ref }}

    steps:
      - name: Check actor permission
        uses: skjnldsv/check-actor-permission@e591dbfe838300c007028e1219ca82cc26e8d7c5 # v2
        with:
          require: write

      - name: Add reaction on start
        uses: peter-evans/create-or-update-comment@ca08ebd5dc95aa0cd97021e9708fcd6b87138c9b # v3.0.1
        with:
          token: ${{ secrets.COMMAND_BOT_PAT }}
          repository: ${{ github.event.repository.full_name }}
          comment-id: ${{ github.event.comment.id }}
          reactions: "+1"

      - name: Parse command
        uses: skjnldsv/parse-command-comment@7cef1df370a99dfd5bf896d50121390c96785db8 # v2
        id: command

      # Init path depending on which command is run
      - name: Init path
        id: git-path
        run: |
          if ${{ startsWith(steps.command.outputs.arg1, '/') }}; then
            echo "path=${{ github.workspace }}${{steps.command.outputs.arg1}}" >> $GITHUB_OUTPUT
          else
            echo "path=${{ github.workspace }}${{steps.command.outputs.arg2}}" >> $GITHUB_OUTPUT
          fi

      - name: Init branch
        uses: xt0rted/pull-request-comment-branch@d97294d304604fa98a2600a6e2f916a84b596dc7 # v1
        id: comment-branch

  process:
    runs-on: ubuntu-latest
    needs: init

    steps:
      - name: Checkout ${{ needs.init.outputs.head_ref }}
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
        with:
          token: ${{ secrets.COMMAND_BOT_PAT }}
          fetch-depth: 0
          ref: ${{ needs.init.outputs.head_ref }}

      - name: Setup git
        run: |
          git config --local user.email "nextcloud-command@users.noreply.github.com"
          git config --local user.name "nextcloud-command"

      - name: Read package.json node and npm engines version
        uses: skjnldsv/read-package-engines-version-actions@0ce2ed60f6df073a62a77c0a4958dd0fc68e32e7 # v2.1
        id: package-engines-versions
        with:
          fallbackNode: '^16'
          fallbackNpm: '^7'

      - name: Set up node ${{ steps.package-engines-versions.outputs.nodeVersion }}
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3
        with:
          node-version: ${{ steps.package-engines-versions.outputs.nodeVersion }}
          cache: npm

      - name: Set up npm ${{ steps.package-engines-versions.outputs.npmVersion }}
        run: npm i -g npm@"${{ steps.package-engines-versions.outputs.npmVersion }}"

      - name: Install dependencies & build
        run: |
          npm ci
          npm run build --if-present

      - name: Commit and push default
        if: ${{ needs.init.outputs.arg1 != 'fixup' && needs.init.outputs.arg1 != 'amend' }}
        run: |
          git add ${{ needs.init.outputs.git_path }}
          git commit --signoff -m 'chore(assets): Recompile assets'
          git push origin ${{ needs.init.outputs.head_ref }}

      - name: Commit and push fixup
        if: ${{ needs.init.outputs.arg1 == 'fixup' }}
        run: |
          git add ${{ needs.init.outputs.git_path }}
          git commit --fixup=HEAD --signoff
          git push origin ${{ needs.init.outputs.head_ref }}

      - name: Commit and push amend
        if: ${{ needs.init.outputs.arg1 == 'amend' }}
        run: |
          git add ${{ needs.init.outputs.git_path }}
          git commit --amend --no-edit --signoff
          git push --force origin ${{ needs.init.outputs.head_ref }}

      - name: Add reaction on failure
        uses: peter-evans/create-or-update-comment@ca08ebd5dc95aa0cd97021e9708fcd6b87138c9b # v3.0.1
        if: failure()
        with:
          token: ${{ secrets.COMMAND_BOT_PAT }}
          repository: ${{ github.event.repository.full_name }}
          comment-id: ${{ github.event.comment.id }}
          reactions: "-1"
