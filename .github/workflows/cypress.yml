name: Cypress

on:
  pull_request:
  push:
    branches:
      - main
      - master
      - stable*

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: ${{ !github.head_ref }}

env:
  APP_NAME: text
  CYPRESS_baseUrl: http://localhost:8081/index.php

jobs:
  init:
    runs-on: ubuntu-latest
    outputs:
      nodeVersion: ${{ steps.versions.outputs.nodeVersion }}
      npmVersion: ${{ steps.versions.outputs.npmVersion }}
    strategy:
      matrix:
        server-versions: [ 'stable28' ]

    steps:
      - name: Checkout server
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        with:
          repository: nextcloud/server
          ref: ${{ matrix.server-versions }}
          submodules: true

      - name: Checkout viewer
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        with:
          repository: nextcloud/viewer
          ref: ${{ matrix.server-versions }}
          path: apps/viewer

      - name: Checkout assistant
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        with:
          repository: nextcloud/assistant
          ref: 'stable29'
          path: apps/assistant

      - name: Checkout app
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        with:
          path: apps/${{ env.APP_NAME }}

      - name: Read package.json node and npm engines version
        uses: skjnldsv/read-package-engines-version-actions@8205673bab74a63eb9b8093402fd9e0e018663a1 # v2.2
        id: versions
        with:
          fallbackNode: "^20"
          fallbackNpm: "^9"
          path: apps/${{ env.APP_NAME }}

      - name: Set up node ${{ steps.versions.outputs.nodeVersion }}
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          cache: 'npm'
          node-version: ${{ steps.versions.outputs.nodeVersion }}

      - name: Set up npm ${{ steps.versions.outputs.npmVersion }}
        run: npm i -g npm@"${{ steps.versions.outputs.npmVersion }}"

      - name: Install dependencies & build app
        working-directory: apps/${{ env.APP_NAME }}
        run: |
          npm ci
          TESTING=true npm run build --if-present

      - name: Install dependencies & build assistant
        working-directory: apps/assistant
        run: |
          composer install --no-dev
          npm ci
          npm run build

      - name: Save context
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          key: cypress-context-${{ github.run_id }}
          path: ./

  cypress:
    runs-on: ubuntu-22.04
    needs: init

    strategy:
      fail-fast: false
      matrix:
        node-version: [16]
        containers: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
        php-versions: [ '8.1' ]
        run-in-parallel:
          - false # only for PRs: ${{ !!github.head_ref }}

    name: runner ${{ matrix.containers }}

    services:
      postgres:
        image: ghcr.io/nextcloud/continuous-integration-postgres-14:latest
        ports:
          - 4444:5432/tcp
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: rootpassword
          POSTGRES_DB: nextcloud
        options: --health-cmd pg_isready --health-interval 5s --health-timeout 2s --health-retries 5

    steps:
      - name: Restore context
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          fail-on-cache-miss: true
          key: cypress-context-${{ github.run_id }}
          path: ./

      - name: Set up node ${{ needs.init.outputs.nodeVersion }}
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          cache: 'npm'
          node-version: ${{ needs.init.outputs.nodeVersion }}

      - name: Set up npm ${{ needs.init.outputs.npmVersion }}
        run: npm i -g npm@"${{ needs.init.outputs.npmVersion }}"

      - name: Set up php ${{ matrix.php-versions }}
        uses: shivammathur/setup-php@4bd44f22a98a19e0950cbad5f31095157cc9621b # v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: bz2, ctype, curl, dom, fileinfo, gd, iconv, intl, json, libxml, mbstring, openssl, pcntl, posix, session, simplexml, xmlreader, xmlwriter, zip, zlib, pgsql, pdo_pgsql
          ini-values:
            apc.enable_cli=on
          coverage: none

      - name: Set up Nextcloud
        env:
          DB_PORT: 4444
          PHP_CLI_SERVER_WORKERS: 10
        run: |
          mkdir data
          echo '<?php $CONFIG=["memcache.local"=>"\OC\Memcache\APCu","hashing_default_password"=>true];' > config/config.php
          php occ maintenance:install --verbose --database=pgsql --database-name=nextcloud --database-host=127.0.0.1 --database-port=$DB_PORT --database-user=root --database-pass=rootpassword --admin-user admin --admin-pass admin
          php -f index.php
          php -S 0.0.0.0:8081 &
          export OC_PASS=1234561
          php occ user:add --password-from-env user1
          php occ user:add --password-from-env user2
          php occ app:enable viewer
          php occ app:enable text
          php occ app:enable assistant
          php occ app:enable testing
          php occ app:list
          php occ background:cron
          php occ config:system:set session_keepalive --value=false --type=boolean
          curl -v http://localhost:8081/index.php/login
          cat data/nextcloud.log

      - name: Cypress run
        uses: cypress-io/github-action@v4
        with:
          record: '${{ !!matrix.run-in-parallel }}' # only on pull requests
          parallel: '${{ !!matrix.run-in-parallel }}' # only on pull requests
          wait-on: '${{ env.CYPRESS_baseUrl }}'
          working-directory: 'apps/${{ env.APP_NAME }}'
          config: defaultCommandTimeout=10000,video=false
          tag: ${{ matrix.run-in-parallel && github.event_name }}
        env:
          # https://github.com/cypress-io/github-action/issues/124
          COMMIT_INFO_MESSAGE: ${{ github.event.pull_request.title }}
          COMMIT_INFO_SHA: ${{ github.event.pull_request.head.sha }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          npm_package_name: ${{ env.APP_NAME }}
          SPLIT: ${{ strategy.job-total }}
          SPLIT_INDEX: ${{ strategy.job-index }}


      - name: Upload test failure screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: snapshots_${{ matrix.containers }}
          path: |
            apps/${{ env.APP_NAME }}/cypress/screenshots/
            apps/${{ env.APP_NAME }}/cypress/snapshots/
          retention-days: 5

      - name: Upload nextcloud logs
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-${{ matrix.containers }}.log
          path: data/nextcloud.log
          retention-days: 5

  summary:
    runs-on: ubuntu-latest
    needs: [init, cypress]

    if: always()

    name: cypress-summary

    steps:
      - name: Summary status
        run: if ${{ needs.init.result != 'success' || ( needs.cypress.result != 'success' && needs.cypress.result != 'skipped' ) }}; then exit 1; fi
