{"version":3,"file":"lisp-BeppWmGO.chunk.mjs","sources":["../node_modules/highlight.js/lib/languages/lisp.js"],"sourcesContent":["/*\nLanguage: Lisp\nDescription: Generic lisp syntax\nAuthor: Vasily Polovnyov <vast@whiteants.net>\nCategory: lisp\n*/\n\nfunction lisp(hljs) {\n  const LISP_IDENT_RE = '[a-zA-Z_\\\\-+\\\\*\\\\/<=>&#][a-zA-Z0-9_\\\\-+*\\\\/<=>&#!]*';\n  const MEC_RE = '\\\\|[^]*?\\\\|';\n  const LISP_SIMPLE_NUMBER_RE = '(-|\\\\+)?\\\\d+(\\\\.\\\\d+|\\\\/\\\\d+)?((d|e|f|l|s|D|E|F|L|S)(\\\\+|-)?\\\\d+)?';\n  const LITERAL = {\n    className: 'literal',\n    begin: '\\\\b(t{1}|nil)\\\\b'\n  };\n  const NUMBER = {\n    className: 'number',\n    variants: [\n      {\n        begin: LISP_SIMPLE_NUMBER_RE,\n        relevance: 0\n      },\n      { begin: '#(b|B)[0-1]+(/[0-1]+)?' },\n      { begin: '#(o|O)[0-7]+(/[0-7]+)?' },\n      { begin: '#(x|X)[0-9a-fA-F]+(/[0-9a-fA-F]+)?' },\n      {\n        begin: '#(c|C)\\\\(' + LISP_SIMPLE_NUMBER_RE + ' +' + LISP_SIMPLE_NUMBER_RE,\n        end: '\\\\)'\n      }\n    ]\n  };\n  const STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null });\n  const COMMENT = hljs.COMMENT(\n    ';', '$',\n    { relevance: 0 }\n  );\n  const VARIABLE = {\n    begin: '\\\\*',\n    end: '\\\\*'\n  };\n  const KEYWORD = {\n    className: 'symbol',\n    begin: '[:&]' + LISP_IDENT_RE\n  };\n  const IDENT = {\n    begin: LISP_IDENT_RE,\n    relevance: 0\n  };\n  const MEC = { begin: MEC_RE };\n  const QUOTED_LIST = {\n    begin: '\\\\(',\n    end: '\\\\)',\n    contains: [\n      'self',\n      LITERAL,\n      STRING,\n      NUMBER,\n      IDENT\n    ]\n  };\n  const QUOTED = {\n    contains: [\n      NUMBER,\n      STRING,\n      VARIABLE,\n      KEYWORD,\n      QUOTED_LIST,\n      IDENT\n    ],\n    variants: [\n      {\n        begin: '[\\'`]\\\\(',\n        end: '\\\\)'\n      },\n      {\n        begin: '\\\\(quote ',\n        end: '\\\\)',\n        keywords: { name: 'quote' }\n      },\n      { begin: '\\'' + MEC_RE }\n    ]\n  };\n  const QUOTED_ATOM = { variants: [\n    { begin: '\\'' + LISP_IDENT_RE },\n    { begin: '#\\'' + LISP_IDENT_RE + '(::' + LISP_IDENT_RE + ')*' }\n  ] };\n  const LIST = {\n    begin: '\\\\(\\\\s*',\n    end: '\\\\)'\n  };\n  const BODY = {\n    endsWithParent: true,\n    relevance: 0\n  };\n  LIST.contains = [\n    {\n      className: 'name',\n      variants: [\n        {\n          begin: LISP_IDENT_RE,\n          relevance: 0,\n        },\n        { begin: MEC_RE }\n      ]\n    },\n    BODY\n  ];\n  BODY.contains = [\n    QUOTED,\n    QUOTED_ATOM,\n    LIST,\n    LITERAL,\n    NUMBER,\n    STRING,\n    COMMENT,\n    VARIABLE,\n    KEYWORD,\n    MEC,\n    IDENT\n  ];\n\n  return {\n    name: 'Lisp',\n    illegal: /\\S/,\n    contains: [\n      NUMBER,\n      hljs.SHEBANG(),\n      LITERAL,\n      STRING,\n      COMMENT,\n      QUOTED,\n      QUOTED_ATOM,\n      LIST,\n      IDENT\n    ]\n  };\n}\n\nmodule.exports = lisp;\n"],"names":["lisp","hljs","LISP_IDENT_RE","MEC_RE","LISP_SIMPLE_NUMBER_RE","LITERAL","NUMBER","STRING","COMMENT","VARIABLE","KEYWORD","IDENT","MEC","QUOTED","QUOTED_ATOM","LIST","BODY","lisp_1"],"mappings":"4YAOA,SAASA,EAAKC,EAAM,CAClB,MAAMC,EAAgB,sDAChBC,EAAS,cACTC,EAAwB,qEACxBC,EAAU,CACd,UAAW,UACX,MAAO,kBACX,EACQC,EAAS,CACb,UAAW,SACX,SAAU,CACR,CACE,MAAOF,EACP,UAAW,CACZ,EACD,CAAE,MAAO,wBAA0B,EACnC,CAAE,MAAO,wBAA0B,EACnC,CAAE,MAAO,oCAAsC,EAC/C,CACE,MAAO,YAAcA,EAAwB,KAAOA,EACpD,IAAK,KACN,CACF,CACL,EACQG,EAASN,EAAK,QAAQA,EAAK,kBAAmB,CAAE,QAAS,IAAI,CAAE,EAC/DO,EAAUP,EAAK,QACnB,IAAK,IACL,CAAE,UAAW,CAAG,CACpB,EACQQ,EAAW,CACf,MAAO,MACP,IAAK,KACT,EACQC,EAAU,CACd,UAAW,SACX,MAAO,OAASR,CACpB,EACQS,EAAQ,CACZ,MAAOT,EACP,UAAW,CACf,EACQU,EAAM,CAAE,MAAOT,GAYfU,EAAS,CACb,SAAU,CACRP,EACAC,EACAE,EACAC,EAhBgB,CAClB,MAAO,MACP,IAAK,MACL,SAAU,CACR,OACAL,EACAE,EACAD,EACAK,CACD,CACL,EAQMA,CACD,EACD,SAAU,CACR,CACE,MAAO,UACP,IAAK,KACN,EACD,CACE,MAAO,YACP,IAAK,MACL,SAAU,CAAE,KAAM,OAAS,CAC5B,EACD,CAAE,MAAO,IAAOR,CAAQ,CACzB,CACL,EACQW,EAAc,CAAE,SAAU,CAC9B,CAAE,MAAO,IAAOZ,CAAe,EAC/B,CAAE,MAAO,KAAQA,EAAgB,MAAQA,EAAgB,IAAM,CACnE,GACQa,EAAO,CACX,MAAO,UACP,IAAK,KACT,EACQC,EAAO,CACX,eAAgB,GAChB,UAAW,CACf,EACE,OAAAD,EAAK,SAAW,CACd,CACE,UAAW,OACX,SAAU,CACR,CACE,MAAOb,EACP,UAAW,CACZ,EACD,CAAE,MAAOC,CAAQ,CAClB,CACF,EACDa,CACJ,EACEA,EAAK,SAAW,CACdH,EACAC,EACAC,EACAV,EACAC,EACAC,EACAC,EACAC,EACAC,EACAE,EACAD,CACJ,EAES,CACL,KAAM,OACN,QAAS,KACT,SAAU,CACRL,EACAL,EAAK,QAAS,EACdI,EACAE,EACAC,EACAK,EACAC,EACAC,EACAJ,CACD,CACL,CACA,CAEA,IAAAM,EAAiBjB","x_google_ignoreList":[0]}