{"version":3,"file":"layout-CSM-pooY.chunk.mjs","sources":["../node_modules/lodash-es/_trimmedEndIndex.js","../node_modules/lodash-es/_baseTrim.js","../node_modules/lodash-es/toNumber.js","../node_modules/lodash-es/toFinite.js","../node_modules/lodash-es/toInteger.js","../node_modules/lodash-es/flatten.js","../node_modules/lodash-es/_flatRest.js","../node_modules/lodash-es/cloneDeep.js","../node_modules/lodash-es/defaults.js","../node_modules/lodash-es/last.js","../node_modules/lodash-es/_createFind.js","../node_modules/lodash-es/findIndex.js","../node_modules/lodash-es/find.js","../node_modules/lodash-es/_baseMap.js","../node_modules/lodash-es/map.js","../node_modules/lodash-es/forIn.js","../node_modules/lodash-es/forOwn.js","../node_modules/lodash-es/_baseGt.js","../node_modules/lodash-es/_baseLt.js","../node_modules/lodash-es/mapValues.js","../node_modules/lodash-es/_baseExtremum.js","../node_modules/lodash-es/max.js","../node_modules/lodash-es/min.js","../node_modules/lodash-es/minBy.js","../node_modules/lodash-es/_baseSet.js","../node_modules/lodash-es/_basePickBy.js","../node_modules/lodash-es/_baseSortBy.js","../node_modules/lodash-es/_compareAscending.js","../node_modules/lodash-es/_compareMultiple.js","../node_modules/lodash-es/_baseOrderBy.js","../node_modules/lodash-es/_basePick.js","../node_modules/lodash-es/pick.js","../node_modules/lodash-es/_baseRange.js","../node_modules/lodash-es/_createRange.js","../node_modules/lodash-es/range.js","../node_modules/lodash-es/sortBy.js","../node_modules/lodash-es/uniqueId.js","../node_modules/lodash-es/_baseZipObject.js","../node_modules/lodash-es/zipObject.js","../node_modules/dagre-d3-es/src/dagre/data/list.js","../node_modules/dagre-d3-es/src/dagre/greedy-fas.js","../node_modules/dagre-d3-es/src/dagre/acyclic.js","../node_modules/dagre-d3-es/src/dagre/util.js","../node_modules/dagre-d3-es/src/dagre/add-border-segments.js","../node_modules/dagre-d3-es/src/dagre/coordinate-system.js","../node_modules/dagre-d3-es/src/dagre/normalize.js","../node_modules/dagre-d3-es/src/dagre/rank/util.js","../node_modules/dagre-d3-es/src/dagre/rank/feasible-tree.js","../node_modules/dagre-d3-es/src/graphlib/alg/topsort.js","../node_modules/dagre-d3-es/src/graphlib/alg/dfs.js","../node_modules/dagre-d3-es/src/graphlib/alg/postorder.js","../node_modules/dagre-d3-es/src/graphlib/alg/preorder.js","../node_modules/dagre-d3-es/src/dagre/rank/network-simplex.js","../node_modules/dagre-d3-es/src/dagre/rank/index.js","../node_modules/dagre-d3-es/src/dagre/nesting-graph.js","../node_modules/dagre-d3-es/src/dagre/order/add-subgraph-constraints.js","../node_modules/dagre-d3-es/src/dagre/order/build-layer-graph.js","../node_modules/dagre-d3-es/src/dagre/order/cross-count.js","../node_modules/dagre-d3-es/src/dagre/order/init-order.js","../node_modules/dagre-d3-es/src/dagre/order/barycenter.js","../node_modules/dagre-d3-es/src/dagre/order/resolve-conflicts.js","../node_modules/dagre-d3-es/src/dagre/order/sort.js","../node_modules/dagre-d3-es/src/dagre/order/sort-subgraph.js","../node_modules/dagre-d3-es/src/dagre/order/index.js","../node_modules/dagre-d3-es/src/dagre/parent-dummy-chains.js","../node_modules/dagre-d3-es/src/dagre/position/bk.js","../node_modules/dagre-d3-es/src/dagre/position/index.js","../node_modules/dagre-d3-es/src/dagre/layout.js"],"sourcesContent":["/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import toNumber from './toNumber.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nexport default toFinite;\n","import toFinite from './toFinite.js';\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nexport default toInteger;\n","import baseFlatten from './_baseFlatten.js';\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nexport default flatten;\n","import flatten from './flatten.js';\nimport overRest from './_overRest.js';\nimport setToString from './_setToString.js';\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nexport default flatRest;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nexport default cloneDeep;\n","import baseRest from './_baseRest.js';\nimport eq from './eq.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport keysIn from './keysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own and inherited enumerable string keyed properties of source\n * objects to the destination object for all destination properties that\n * resolve to `undefined`. Source objects are applied from left to right.\n * Once a property is set, additional values of the same property are ignored.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaultsDeep\n * @example\n *\n * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar defaults = baseRest(function(object, sources) {\n  object = Object(object);\n\n  var index = -1;\n  var length = sources.length;\n  var guard = length > 2 ? sources[2] : undefined;\n\n  if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n    length = 1;\n  }\n\n  while (++index < length) {\n    var source = sources[index];\n    var props = keysIn(source);\n    var propsIndex = -1;\n    var propsLength = props.length;\n\n    while (++propsIndex < propsLength) {\n      var key = props[propsIndex];\n      var value = object[key];\n\n      if (value === undefined ||\n          (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        object[key] = source[key];\n      }\n    }\n  }\n\n  return object;\n});\n\nexport default defaults;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nexport default last;\n","import baseIteratee from './_baseIteratee.js';\nimport isArrayLike from './isArrayLike.js';\nimport keys from './keys.js';\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nexport default createFind;\n","import baseFindIndex from './_baseFindIndex.js';\nimport baseIteratee from './_baseIteratee.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nexport default findIndex;\n","import createFind from './_createFind.js';\nimport findIndex from './findIndex.js';\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nexport default find;\n","import baseEach from './_baseEach.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nexport default baseMap;\n","import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseMap from './_baseMap.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nexport default map;\n","import baseFor from './_baseFor.js';\nimport castFunction from './_castFunction.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Iterates over own and inherited enumerable string keyed properties of an\n * object and invokes `iteratee` for each property. The iteratee is invoked\n * with three arguments: (value, key, object). Iteratee functions may exit\n * iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 0.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns `object`.\n * @see _.forInRight\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forIn(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n */\nfunction forIn(object, iteratee) {\n  return object == null\n    ? object\n    : baseFor(object, castFunction(iteratee), keysIn);\n}\n\nexport default forIn;\n","import baseForOwn from './_baseForOwn.js';\nimport castFunction from './_castFunction.js';\n\n/**\n * Iterates over own enumerable string keyed properties of an object and\n * invokes `iteratee` for each property. The iteratee is invoked with three\n * arguments: (value, key, object). Iteratee functions may exit iteration\n * early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 0.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns `object`.\n * @see _.forOwnRight\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forOwn(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\nfunction forOwn(object, iteratee) {\n  return object && baseForOwn(object, castFunction(iteratee));\n}\n\nexport default forOwn;\n","/**\n * The base implementation of `_.gt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is greater than `other`,\n *  else `false`.\n */\nfunction baseGt(value, other) {\n  return value > other;\n}\n\nexport default baseGt;\n","/**\n * The base implementation of `_.lt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is less than `other`,\n *  else `false`.\n */\nfunction baseLt(value, other) {\n  return value < other;\n}\n\nexport default baseLt;\n","import baseAssignValue from './_baseAssignValue.js';\nimport baseForOwn from './_baseForOwn.js';\nimport baseIteratee from './_baseIteratee.js';\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nexport default mapValues;\n","import isSymbol from './isSymbol.js';\n\n/**\n * The base implementation of methods like `_.max` and `_.min` which accepts a\n * `comparator` to determine the extremum value.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per iteration.\n * @param {Function} comparator The comparator used to compare values.\n * @returns {*} Returns the extremum value.\n */\nfunction baseExtremum(array, iteratee, comparator) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index],\n        current = iteratee(value);\n\n    if (current != null && (computed === undefined\n          ? (current === current && !isSymbol(current))\n          : comparator(current, computed)\n        )) {\n      var computed = current,\n          result = value;\n    }\n  }\n  return result;\n}\n\nexport default baseExtremum;\n","import baseExtremum from './_baseExtremum.js';\nimport baseGt from './_baseGt.js';\nimport identity from './identity.js';\n\n/**\n * Computes the maximum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the maximum value.\n * @example\n *\n * _.max([4, 2, 8, 6]);\n * // => 8\n *\n * _.max([]);\n * // => undefined\n */\nfunction max(array) {\n  return (array && array.length)\n    ? baseExtremum(array, identity, baseGt)\n    : undefined;\n}\n\nexport default max;\n","import baseExtremum from './_baseExtremum.js';\nimport baseLt from './_baseLt.js';\nimport identity from './identity.js';\n\n/**\n * Computes the minimum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * _.min([4, 2, 8, 6]);\n * // => 2\n *\n * _.min([]);\n * // => undefined\n */\nfunction min(array) {\n  return (array && array.length)\n    ? baseExtremum(array, identity, baseLt)\n    : undefined;\n}\n\nexport default min;\n","import baseExtremum from './_baseExtremum.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseLt from './_baseLt.js';\n\n/**\n * This method is like `_.min` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * the value is ranked. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * _.minBy(objects, function(o) { return o.n; });\n * // => { 'n': 1 }\n *\n * // The `_.property` iteratee shorthand.\n * _.minBy(objects, 'n');\n * // => { 'n': 1 }\n */\nfunction minBy(array, iteratee) {\n  return (array && array.length)\n    ? baseExtremum(array, baseIteratee(iteratee, 2), baseLt)\n    : undefined;\n}\n\nexport default minBy;\n","import assignValue from './_assignValue.js';\nimport castPath from './_castPath.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nexport default baseSet;\n","import baseGet from './_baseGet.js';\nimport baseSet from './_baseSet.js';\nimport castPath from './_castPath.js';\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nexport default basePickBy;\n","/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nexport default baseSortBy;\n","import isSymbol from './isSymbol.js';\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nexport default compareAscending;\n","import compareAscending from './_compareAscending.js';\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nexport default compareMultiple;\n","import arrayMap from './_arrayMap.js';\nimport baseGet from './_baseGet.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseMap from './_baseMap.js';\nimport baseSortBy from './_baseSortBy.js';\nimport baseUnary from './_baseUnary.js';\nimport compareMultiple from './_compareMultiple.js';\nimport identity from './identity.js';\nimport isArray from './isArray.js';\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nexport default baseOrderBy;\n","import basePickBy from './_basePickBy.js';\nimport hasIn from './hasIn.js';\n\n/**\n * The base implementation of `_.pick` without support for individual\n * property identifiers.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @returns {Object} Returns the new object.\n */\nfunction basePick(object, paths) {\n  return basePickBy(object, paths, function(value, path) {\n    return hasIn(object, path);\n  });\n}\n\nexport default basePick;\n","import basePick from './_basePick.js';\nimport flatRest from './_flatRest.js';\n\n/**\n * Creates an object composed of the picked `object` properties.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pick(object, ['a', 'c']);\n * // => { 'a': 1, 'c': 3 }\n */\nvar pick = flatRest(function(object, paths) {\n  return object == null ? {} : basePick(object, paths);\n});\n\nexport default pick;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\nexport default baseRange;\n","import baseRange from './_baseRange.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport toFinite from './toFinite.js';\n\n/**\n * Creates a `_.range` or `_.rangeRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new range function.\n */\nfunction createRange(fromRight) {\n  return function(start, end, step) {\n    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n      end = step = undefined;\n    }\n    // Ensure the sign of `-0` is preserved.\n    start = toFinite(start);\n    if (end === undefined) {\n      end = start;\n      start = 0;\n    } else {\n      end = toFinite(end);\n    }\n    step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n    return baseRange(start, end, step, fromRight);\n  };\n}\n\nexport default createRange;\n","import createRange from './_createRange.js';\n\n/**\n * Creates an array of numbers (positive and/or negative) progressing from\n * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n * `start` is specified without an `end` or `step`. If `end` is not specified,\n * it's set to `start` with `start` then set to `0`.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @param {number} [step=1] The value to increment or decrement by.\n * @returns {Array} Returns the range of numbers.\n * @see _.inRange, _.rangeRight\n * @example\n *\n * _.range(4);\n * // => [0, 1, 2, 3]\n *\n * _.range(-4);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 5);\n * // => [1, 2, 3, 4]\n *\n * _.range(0, 20, 5);\n * // => [0, 5, 10, 15]\n *\n * _.range(0, -4, -1);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 4, 0);\n * // => [1, 1, 1]\n *\n * _.range(0);\n * // => []\n */\nvar range = createRange();\n\nexport default range;\n","import baseFlatten from './_baseFlatten.js';\nimport baseOrderBy from './_baseOrderBy.js';\nimport baseRest from './_baseRest.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 30 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\nexport default sortBy;\n","import toString from './toString.js';\n\n/** Used to generate unique IDs. */\nvar idCounter = 0;\n\n/**\n * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {string} [prefix=''] The value to prefix the ID with.\n * @returns {string} Returns the unique ID.\n * @example\n *\n * _.uniqueId('contact_');\n * // => 'contact_104'\n *\n * _.uniqueId();\n * // => '105'\n */\nfunction uniqueId(prefix) {\n  var id = ++idCounter;\n  return toString(prefix) + id;\n}\n\nexport default uniqueId;\n","/**\n * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n *\n * @private\n * @param {Array} props The property identifiers.\n * @param {Array} values The property values.\n * @param {Function} assignFunc The function to assign values.\n * @returns {Object} Returns the new object.\n */\nfunction baseZipObject(props, values, assignFunc) {\n  var index = -1,\n      length = props.length,\n      valsLength = values.length,\n      result = {};\n\n  while (++index < length) {\n    var value = index < valsLength ? values[index] : undefined;\n    assignFunc(result, props[index], value);\n  }\n  return result;\n}\n\nexport default baseZipObject;\n","import assignValue from './_assignValue.js';\nimport baseZipObject from './_baseZipObject.js';\n\n/**\n * This method is like `_.fromPairs` except that it accepts two arrays,\n * one of property identifiers and one of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 0.4.0\n * @category Array\n * @param {Array} [props=[]] The property identifiers.\n * @param {Array} [values=[]] The property values.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.zipObject(['a', 'b'], [1, 2]);\n * // => { 'a': 1, 'b': 2 }\n */\nfunction zipObject(props, values) {\n  return baseZipObject(props || [], values || [], assignValue);\n}\n\nexport default zipObject;\n","/*\n * Simple doubly linked list implementation derived from Cormen, et al.,\n * \"Introduction to Algorithms\".\n */\n\nexport { List };\n\nclass List {\n  constructor() {\n    var sentinel = {};\n    sentinel._next = sentinel._prev = sentinel;\n    this._sentinel = sentinel;\n  }\n  dequeue() {\n    var sentinel = this._sentinel;\n    var entry = sentinel._prev;\n    if (entry !== sentinel) {\n      unlink(entry);\n      return entry;\n    }\n  }\n  enqueue(entry) {\n    var sentinel = this._sentinel;\n    if (entry._prev && entry._next) {\n      unlink(entry);\n    }\n    entry._next = sentinel._next;\n    sentinel._next._prev = entry;\n    sentinel._next = entry;\n    entry._prev = sentinel;\n  }\n  toString() {\n    var strs = [];\n    var sentinel = this._sentinel;\n    var curr = sentinel._prev;\n    while (curr !== sentinel) {\n      strs.push(JSON.stringify(curr, filterOutLinks));\n      curr = curr._prev;\n    }\n    return '[' + strs.join(', ') + ']';\n  }\n}\n\nfunction unlink(entry) {\n  entry._prev._next = entry._next;\n  entry._next._prev = entry._prev;\n  delete entry._next;\n  delete entry._prev;\n}\n\nfunction filterOutLinks(k, v) {\n  if (k !== '_next' && k !== '_prev') {\n    return v;\n  }\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../graphlib/index.js';\nimport { List } from './data/list.js';\n\n/*\n * A greedy heuristic for finding a feedback arc set for a graph. A feedback\n * arc set is a set of edges that can be removed to make a graph acyclic.\n * The algorithm comes from: P. Eades, X. Lin, and W. F. Smyth, \"A fast and\n * effective heuristic for the feedback arc set problem.\" This implementation\n * adjusts that from the paper to allow for weighted edges.\n */\nexport { greedyFAS };\n\nvar DEFAULT_WEIGHT_FN = _.constant(1);\n\nfunction greedyFAS(g, weightFn) {\n  if (g.nodeCount() <= 1) {\n    return [];\n  }\n  var state = buildState(g, weightFn || DEFAULT_WEIGHT_FN);\n  var results = doGreedyFAS(state.graph, state.buckets, state.zeroIdx);\n\n  // Expand multi-edges\n  return _.flatten(\n    _.map(results, function (e) {\n      return g.outEdges(e.v, e.w);\n    })\n  );\n}\n\nfunction doGreedyFAS(g, buckets, zeroIdx) {\n  var results = [];\n  var sources = buckets[buckets.length - 1];\n  var sinks = buckets[0];\n\n  var entry;\n  while (g.nodeCount()) {\n    while ((entry = sinks.dequeue())) {\n      removeNode(g, buckets, zeroIdx, entry);\n    }\n    while ((entry = sources.dequeue())) {\n      removeNode(g, buckets, zeroIdx, entry);\n    }\n    if (g.nodeCount()) {\n      for (var i = buckets.length - 2; i > 0; --i) {\n        entry = buckets[i].dequeue();\n        if (entry) {\n          results = results.concat(removeNode(g, buckets, zeroIdx, entry, true));\n          break;\n        }\n      }\n    }\n  }\n\n  return results;\n}\n\nfunction removeNode(g, buckets, zeroIdx, entry, collectPredecessors) {\n  var results = collectPredecessors ? [] : undefined;\n\n  _.forEach(g.inEdges(entry.v), function (edge) {\n    var weight = g.edge(edge);\n    var uEntry = g.node(edge.v);\n\n    if (collectPredecessors) {\n      results.push({ v: edge.v, w: edge.w });\n    }\n\n    uEntry.out -= weight;\n    assignBucket(buckets, zeroIdx, uEntry);\n  });\n\n  _.forEach(g.outEdges(entry.v), function (edge) {\n    var weight = g.edge(edge);\n    var w = edge.w;\n    var wEntry = g.node(w);\n    wEntry['in'] -= weight;\n    assignBucket(buckets, zeroIdx, wEntry);\n  });\n\n  g.removeNode(entry.v);\n\n  return results;\n}\n\nfunction buildState(g, weightFn) {\n  var fasGraph = new Graph();\n  var maxIn = 0;\n  var maxOut = 0;\n\n  _.forEach(g.nodes(), function (v) {\n    fasGraph.setNode(v, { v: v, in: 0, out: 0 });\n  });\n\n  // Aggregate weights on nodes, but also sum the weights across multi-edges\n  // into a single edge for the fasGraph.\n  _.forEach(g.edges(), function (e) {\n    var prevWeight = fasGraph.edge(e.v, e.w) || 0;\n    var weight = weightFn(e);\n    var edgeWeight = prevWeight + weight;\n    fasGraph.setEdge(e.v, e.w, edgeWeight);\n    maxOut = Math.max(maxOut, (fasGraph.node(e.v).out += weight));\n    maxIn = Math.max(maxIn, (fasGraph.node(e.w)['in'] += weight));\n  });\n\n  var buckets = _.range(maxOut + maxIn + 3).map(function () {\n    return new List();\n  });\n  var zeroIdx = maxIn + 1;\n\n  _.forEach(fasGraph.nodes(), function (v) {\n    assignBucket(buckets, zeroIdx, fasGraph.node(v));\n  });\n\n  return { graph: fasGraph, buckets: buckets, zeroIdx: zeroIdx };\n}\n\nfunction assignBucket(buckets, zeroIdx, entry) {\n  if (!entry.out) {\n    buckets[0].enqueue(entry);\n  } else if (!entry['in']) {\n    buckets[buckets.length - 1].enqueue(entry);\n  } else {\n    buckets[entry.out - entry['in'] + zeroIdx].enqueue(entry);\n  }\n}\n","import * as _ from 'lodash-es';\nimport { greedyFAS } from './greedy-fas.js';\n\nexport { run, undo };\n\nfunction run(g) {\n  var fas = g.graph().acyclicer === 'greedy' ? greedyFAS(g, weightFn(g)) : dfsFAS(g);\n  _.forEach(fas, function (e) {\n    var label = g.edge(e);\n    g.removeEdge(e);\n    label.forwardName = e.name;\n    label.reversed = true;\n    g.setEdge(e.w, e.v, label, _.uniqueId('rev'));\n  });\n\n  function weightFn(g) {\n    return function (e) {\n      return g.edge(e).weight;\n    };\n  }\n}\n\nfunction dfsFAS(g) {\n  var fas = [];\n  var stack = {};\n  var visited = {};\n\n  function dfs(v) {\n    if (_.has(visited, v)) {\n      return;\n    }\n    visited[v] = true;\n    stack[v] = true;\n    _.forEach(g.outEdges(v), function (e) {\n      if (_.has(stack, e.w)) {\n        fas.push(e);\n      } else {\n        dfs(e.w);\n      }\n    });\n    delete stack[v];\n  }\n\n  _.forEach(g.nodes(), dfs);\n  return fas;\n}\n\nfunction undo(g) {\n  _.forEach(g.edges(), function (e) {\n    var label = g.edge(e);\n    if (label.reversed) {\n      g.removeEdge(e);\n\n      var forwardName = label.forwardName;\n      delete label.reversed;\n      delete label.forwardName;\n      g.setEdge(e.w, e.v, label, forwardName);\n    }\n  });\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../graphlib/index.js';\n\nexport {\n  addDummyNode,\n  simplify,\n  asNonCompoundGraph,\n  successorWeights,\n  predecessorWeights,\n  intersectRect,\n  buildLayerMatrix,\n  normalizeRanks,\n  removeEmptyRanks,\n  addBorderNode,\n  maxRank,\n  partition,\n  time,\n  notime,\n};\n\n/*\n * Adds a dummy node to the graph and return v.\n */\nfunction addDummyNode(g, type, attrs, name) {\n  var v;\n  do {\n    v = _.uniqueId(name);\n  } while (g.hasNode(v));\n\n  attrs.dummy = type;\n  g.setNode(v, attrs);\n  return v;\n}\n\n/*\n * Returns a new graph with only simple edges. Handles aggregation of data\n * associated with multi-edges.\n */\nfunction simplify(g) {\n  var simplified = new Graph().setGraph(g.graph());\n  _.forEach(g.nodes(), function (v) {\n    simplified.setNode(v, g.node(v));\n  });\n  _.forEach(g.edges(), function (e) {\n    var simpleLabel = simplified.edge(e.v, e.w) || { weight: 0, minlen: 1 };\n    var label = g.edge(e);\n    simplified.setEdge(e.v, e.w, {\n      weight: simpleLabel.weight + label.weight,\n      minlen: Math.max(simpleLabel.minlen, label.minlen),\n    });\n  });\n  return simplified;\n}\n\nfunction asNonCompoundGraph(g) {\n  var simplified = new Graph({ multigraph: g.isMultigraph() }).setGraph(g.graph());\n  _.forEach(g.nodes(), function (v) {\n    if (!g.children(v).length) {\n      simplified.setNode(v, g.node(v));\n    }\n  });\n  _.forEach(g.edges(), function (e) {\n    simplified.setEdge(e, g.edge(e));\n  });\n  return simplified;\n}\n\nfunction successorWeights(g) {\n  var weightMap = _.map(g.nodes(), function (v) {\n    var sucs = {};\n    _.forEach(g.outEdges(v), function (e) {\n      sucs[e.w] = (sucs[e.w] || 0) + g.edge(e).weight;\n    });\n    return sucs;\n  });\n  return _.zipObject(g.nodes(), weightMap);\n}\n\nfunction predecessorWeights(g) {\n  var weightMap = _.map(g.nodes(), function (v) {\n    var preds = {};\n    _.forEach(g.inEdges(v), function (e) {\n      preds[e.v] = (preds[e.v] || 0) + g.edge(e).weight;\n    });\n    return preds;\n  });\n  return _.zipObject(g.nodes(), weightMap);\n}\n\n/*\n * Finds where a line starting at point ({x, y}) would intersect a rectangle\n * ({x, y, width, height}) if it were pointing at the rectangle's center.\n */\nfunction intersectRect(rect, point) {\n  var x = rect.x;\n  var y = rect.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = rect.width / 2;\n  var h = rect.height / 2;\n\n  if (!dx && !dy) {\n    throw new Error('Not possible to find intersection inside of the rectangle');\n  }\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = (h * dx) / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = (w * dy) / dx;\n  }\n\n  return { x: x + sx, y: y + sy };\n}\n\n/*\n * Given a DAG with each node assigned \"rank\" and \"order\" properties, this\n * function will produce a matrix with the ids of each node.\n */\nfunction buildLayerMatrix(g) {\n  var layering = _.map(_.range(maxRank(g) + 1), function () {\n    return [];\n  });\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    var rank = node.rank;\n    if (!_.isUndefined(rank)) {\n      layering[rank][node.order] = v;\n    }\n  });\n  return layering;\n}\n\n/*\n * Adjusts the ranks for all nodes in the graph such that all nodes v have\n * rank(v) >= 0 and at least one node w has rank(w) = 0.\n */\nfunction normalizeRanks(g) {\n  var min = _.min(\n    _.map(g.nodes(), function (v) {\n      return g.node(v).rank;\n    })\n  );\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (_.has(node, 'rank')) {\n      node.rank -= min;\n    }\n  });\n}\n\nfunction removeEmptyRanks(g) {\n  // Ranks may not start at 0, so we need to offset them\n  var offset = _.min(\n    _.map(g.nodes(), function (v) {\n      return g.node(v).rank;\n    })\n  );\n\n  var layers = [];\n  _.forEach(g.nodes(), function (v) {\n    var rank = g.node(v).rank - offset;\n    if (!layers[rank]) {\n      layers[rank] = [];\n    }\n    layers[rank].push(v);\n  });\n\n  var delta = 0;\n  var nodeRankFactor = g.graph().nodeRankFactor;\n  _.forEach(layers, function (vs, i) {\n    if (_.isUndefined(vs) && i % nodeRankFactor !== 0) {\n      --delta;\n    } else if (delta) {\n      _.forEach(vs, function (v) {\n        g.node(v).rank += delta;\n      });\n    }\n  });\n}\n\nfunction addBorderNode(g, prefix, rank, order) {\n  var node = {\n    width: 0,\n    height: 0,\n  };\n  if (arguments.length >= 4) {\n    node.rank = rank;\n    node.order = order;\n  }\n  return addDummyNode(g, 'border', node, prefix);\n}\n\nfunction maxRank(g) {\n  return _.max(\n    _.map(g.nodes(), function (v) {\n      var rank = g.node(v).rank;\n      if (!_.isUndefined(rank)) {\n        return rank;\n      }\n    })\n  );\n}\n\n/*\n * Partition a collection into two groups: `lhs` and `rhs`. If the supplied\n * function returns true for an entry it goes into `lhs`. Otherwise it goes\n * into `rhs.\n */\nfunction partition(collection, fn) {\n  var result = { lhs: [], rhs: [] };\n  _.forEach(collection, function (value) {\n    if (fn(value)) {\n      result.lhs.push(value);\n    } else {\n      result.rhs.push(value);\n    }\n  });\n  return result;\n}\n\n/*\n * Returns a new function that wraps `fn` with a timer. The wrapper logs the\n * time it takes to execute the function.\n */\nfunction time(name, fn) {\n  var start = _.now();\n  try {\n    return fn();\n  } finally {\n    console.log(name + ' time: ' + (_.now() - start) + 'ms');\n  }\n}\n\nfunction notime(name, fn) {\n  return fn();\n}\n","import * as _ from 'lodash-es';\nimport * as util from './util.js';\n\nexport { addBorderSegments };\n\nfunction addBorderSegments(g) {\n  function dfs(v) {\n    var children = g.children(v);\n    var node = g.node(v);\n    if (children.length) {\n      _.forEach(children, dfs);\n    }\n\n    if (_.has(node, 'minRank')) {\n      node.borderLeft = [];\n      node.borderRight = [];\n      for (var rank = node.minRank, maxRank = node.maxRank + 1; rank < maxRank; ++rank) {\n        addBorderNode(g, 'borderLeft', '_bl', v, node, rank);\n        addBorderNode(g, 'borderRight', '_br', v, node, rank);\n      }\n    }\n  }\n\n  _.forEach(g.children(), dfs);\n}\n\nfunction addBorderNode(g, prop, prefix, sg, sgNode, rank) {\n  var label = { width: 0, height: 0, rank: rank, borderType: prop };\n  var prev = sgNode[prop][rank - 1];\n  var curr = util.addDummyNode(g, 'border', label, prefix);\n  sgNode[prop][rank] = curr;\n  g.setParent(curr, sg);\n  if (prev) {\n    g.setEdge(prev, curr, { weight: 1 });\n  }\n}\n","import * as _ from 'lodash-es';\n\nexport { adjust, undo };\n\nfunction adjust(g) {\n  var rankDir = g.graph().rankdir.toLowerCase();\n  if (rankDir === 'lr' || rankDir === 'rl') {\n    swapWidthHeight(g);\n  }\n}\n\nfunction undo(g) {\n  var rankDir = g.graph().rankdir.toLowerCase();\n  if (rankDir === 'bt' || rankDir === 'rl') {\n    reverseY(g);\n  }\n\n  if (rankDir === 'lr' || rankDir === 'rl') {\n    swapXY(g);\n    swapWidthHeight(g);\n  }\n}\n\nfunction swapWidthHeight(g) {\n  _.forEach(g.nodes(), function (v) {\n    swapWidthHeightOne(g.node(v));\n  });\n  _.forEach(g.edges(), function (e) {\n    swapWidthHeightOne(g.edge(e));\n  });\n}\n\nfunction swapWidthHeightOne(attrs) {\n  var w = attrs.width;\n  attrs.width = attrs.height;\n  attrs.height = w;\n}\n\nfunction reverseY(g) {\n  _.forEach(g.nodes(), function (v) {\n    reverseYOne(g.node(v));\n  });\n\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, reverseYOne);\n    if (_.has(edge, 'y')) {\n      reverseYOne(edge);\n    }\n  });\n}\n\nfunction reverseYOne(attrs) {\n  attrs.y = -attrs.y;\n}\n\nfunction swapXY(g) {\n  _.forEach(g.nodes(), function (v) {\n    swapXYOne(g.node(v));\n  });\n\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, swapXYOne);\n    if (_.has(edge, 'x')) {\n      swapXYOne(edge);\n    }\n  });\n}\n\nfunction swapXYOne(attrs) {\n  var x = attrs.x;\n  attrs.x = attrs.y;\n  attrs.y = x;\n}\n","import * as _ from 'lodash-es';\nimport * as util from './util.js';\n\nexport { run, undo };\n\n/*\n * Breaks any long edges in the graph into short segments that span 1 layer\n * each. This operation is undoable with the denormalize function.\n *\n * Pre-conditions:\n *\n *    1. The input graph is a DAG.\n *    2. Each node in the graph has a \"rank\" property.\n *\n * Post-condition:\n *\n *    1. All edges in the graph have a length of 1.\n *    2. Dummy nodes are added where edges have been split into segments.\n *    3. The graph is augmented with a \"dummyChains\" attribute which contains\n *       the first dummy in each chain of dummy nodes produced.\n */\nfunction run(g) {\n  g.graph().dummyChains = [];\n  _.forEach(g.edges(), function (edge) {\n    normalizeEdge(g, edge);\n  });\n}\n\nfunction normalizeEdge(g, e) {\n  var v = e.v;\n  var vRank = g.node(v).rank;\n  var w = e.w;\n  var wRank = g.node(w).rank;\n  var name = e.name;\n  var edgeLabel = g.edge(e);\n  var labelRank = edgeLabel.labelRank;\n\n  if (wRank === vRank + 1) return;\n\n  g.removeEdge(e);\n\n  var dummy, attrs, i;\n  for (i = 0, ++vRank; vRank < wRank; ++i, ++vRank) {\n    edgeLabel.points = [];\n    attrs = {\n      width: 0,\n      height: 0,\n      edgeLabel: edgeLabel,\n      edgeObj: e,\n      rank: vRank,\n    };\n    dummy = util.addDummyNode(g, 'edge', attrs, '_d');\n    if (vRank === labelRank) {\n      attrs.width = edgeLabel.width;\n      attrs.height = edgeLabel.height;\n      // @ts-expect-error\n      attrs.dummy = 'edge-label';\n      // @ts-expect-error\n      attrs.labelpos = edgeLabel.labelpos;\n    }\n    g.setEdge(v, dummy, { weight: edgeLabel.weight }, name);\n    if (i === 0) {\n      g.graph().dummyChains.push(dummy);\n    }\n    v = dummy;\n  }\n\n  g.setEdge(v, w, { weight: edgeLabel.weight }, name);\n}\n\nfunction undo(g) {\n  _.forEach(g.graph().dummyChains, function (v) {\n    var node = g.node(v);\n    var origLabel = node.edgeLabel;\n    var w;\n    g.setEdge(node.edgeObj, origLabel);\n    while (node.dummy) {\n      w = g.successors(v)[0];\n      g.removeNode(v);\n      origLabel.points.push({ x: node.x, y: node.y });\n      if (node.dummy === 'edge-label') {\n        origLabel.x = node.x;\n        origLabel.y = node.y;\n        origLabel.width = node.width;\n        origLabel.height = node.height;\n      }\n      v = w;\n      node = g.node(v);\n    }\n  });\n}\n","import * as _ from 'lodash-es';\n\nexport { longestPath, slack };\n\n/*\n * Initializes ranks for the input graph using the longest path algorithm. This\n * algorithm scales well and is fast in practice, it yields rather poor\n * solutions. Nodes are pushed to the lowest layer possible, leaving the bottom\n * ranks wide and leaving edges longer than necessary. However, due to its\n * speed, this algorithm is good for getting an initial ranking that can be fed\n * into other algorithms.\n *\n * This algorithm does not normalize layers because it will be used by other\n * algorithms in most cases. If using this algorithm directly, be sure to\n * run normalize at the end.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG.\n *    2. Input graph node labels can be assigned properties.\n *\n * Post-conditions:\n *\n *    1. Each node will be assign an (unnormalized) \"rank\" property.\n */\nfunction longestPath(g) {\n  var visited = {};\n\n  function dfs(v) {\n    var label = g.node(v);\n    if (_.has(visited, v)) {\n      return label.rank;\n    }\n    visited[v] = true;\n\n    var rank = _.min(\n      _.map(g.outEdges(v), function (e) {\n        return dfs(e.w) - g.edge(e).minlen;\n      })\n    );\n\n    if (\n      rank === Number.POSITIVE_INFINITY || // return value of _.map([]) for Lodash 3\n      rank === undefined || // return value of _.map([]) for Lodash 4\n      rank === null\n    ) {\n      // return value of _.map([null])\n      rank = 0;\n    }\n\n    return (label.rank = rank);\n  }\n\n  _.forEach(g.sources(), dfs);\n}\n\n/*\n * Returns the amount of slack for the given edge. The slack is defined as the\n * difference between the length of the edge and its minimum length.\n */\nfunction slack(g, e) {\n  return g.node(e.w).rank - g.node(e.v).rank - g.edge(e).minlen;\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../../graphlib/index.js';\nimport { slack } from './util.js';\n\nexport { feasibleTree };\n\n/*\n * Constructs a spanning tree with tight edges and adjusted the input node's\n * ranks to achieve this. A tight edge is one that is has a length that matches\n * its \"minlen\" attribute.\n *\n * The basic structure for this function is derived from Gansner, et al., \"A\n * Technique for Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a DAG.\n *    2. Graph must be connected.\n *    3. Graph must have at least one node.\n *    5. Graph nodes must have been previously assigned a \"rank\" property that\n *       respects the \"minlen\" property of incident edges.\n *    6. Graph edges must have a \"minlen\" property.\n *\n * Post-conditions:\n *\n *    - Graph nodes will have their rank adjusted to ensure that all edges are\n *      tight.\n *\n * Returns a tree (undirected graph) that is constructed using only \"tight\"\n * edges.\n */\nfunction feasibleTree(g) {\n  var t = new Graph({ directed: false });\n\n  // Choose arbitrary node from which to start our tree\n  var start = g.nodes()[0];\n  var size = g.nodeCount();\n  t.setNode(start, {});\n\n  var edge, delta;\n  while (tightTree(t, g) < size) {\n    edge = findMinSlackEdge(t, g);\n    delta = t.hasNode(edge.v) ? slack(g, edge) : -slack(g, edge);\n    shiftRanks(t, g, delta);\n  }\n\n  return t;\n}\n\n/*\n * Finds a maximal tree of tight edges and returns the number of nodes in the\n * tree.\n */\nfunction tightTree(t, g) {\n  function dfs(v) {\n    _.forEach(g.nodeEdges(v), function (e) {\n      var edgeV = e.v,\n        w = v === edgeV ? e.w : edgeV;\n      if (!t.hasNode(w) && !slack(g, e)) {\n        t.setNode(w, {});\n        t.setEdge(v, w, {});\n        dfs(w);\n      }\n    });\n  }\n\n  _.forEach(t.nodes(), dfs);\n  return t.nodeCount();\n}\n\n/*\n * Finds the edge with the smallest slack that is incident on tree and returns\n * it.\n */\nfunction findMinSlackEdge(t, g) {\n  return _.minBy(g.edges(), function (e) {\n    if (t.hasNode(e.v) !== t.hasNode(e.w)) {\n      return slack(g, e);\n    }\n  });\n}\n\nfunction shiftRanks(t, g, delta) {\n  _.forEach(t.nodes(), function (v) {\n    g.node(v).rank += delta;\n  });\n}\n","import * as _ from 'lodash-es';\n\nexport { topsort, CycleException };\n\ntopsort.CycleException = CycleException;\n\nfunction topsort(g) {\n  var visited = {};\n  var stack = {};\n  var results = [];\n\n  function visit(node) {\n    if (_.has(stack, node)) {\n      throw new CycleException();\n    }\n\n    if (!_.has(visited, node)) {\n      stack[node] = true;\n      visited[node] = true;\n      _.each(g.predecessors(node), visit);\n      delete stack[node];\n      results.push(node);\n    }\n  }\n\n  _.each(g.sinks(), visit);\n\n  if (_.size(visited) !== g.nodeCount()) {\n    throw new CycleException();\n  }\n\n  return results;\n}\n\nfunction CycleException() {}\nCycleException.prototype = new Error(); // must be an instance of Error to pass testing\n","import * as _ from 'lodash-es';\n\nexport { dfs };\n\n/*\n * A helper that preforms a pre- or post-order traversal on the input graph\n * and returns the nodes in the order they were visited. If the graph is\n * undirected then this algorithm will navigate using neighbors. If the graph\n * is directed then this algorithm will navigate using successors.\n *\n * Order must be one of \"pre\" or \"post\".\n */\nfunction dfs(g, vs, order) {\n  if (!_.isArray(vs)) {\n    vs = [vs];\n  }\n\n  var navigation = (g.isDirected() ? g.successors : g.neighbors).bind(g);\n\n  var acc = [];\n  var visited = {};\n  _.each(vs, function (v) {\n    if (!g.hasNode(v)) {\n      throw new Error('Graph does not have node: ' + v);\n    }\n\n    doDfs(g, v, order === 'post', visited, navigation, acc);\n  });\n  return acc;\n}\n\nfunction doDfs(g, v, postorder, visited, navigation, acc) {\n  if (!_.has(visited, v)) {\n    visited[v] = true;\n\n    if (!postorder) {\n      acc.push(v);\n    }\n    _.each(navigation(v), function (w) {\n      doDfs(g, w, postorder, visited, navigation, acc);\n    });\n    if (postorder) {\n      acc.push(v);\n    }\n  }\n}\n","import { dfs } from './dfs.js';\n\nexport { postorder };\n\nfunction postorder(g, vs) {\n  return dfs(g, vs, 'post');\n}\n","import { dfs } from './dfs.js';\n\nexport { preorder };\n\nfunction preorder(g, vs) {\n  return dfs(g, vs, 'pre');\n}\n","import * as _ from 'lodash-es';\nimport * as alg from '../../graphlib/alg/index.js';\nimport { simplify } from '../util.js';\nimport { feasibleTree } from './feasible-tree.js';\nimport { longestPath, slack } from './util.js';\n\nexport { networkSimplex };\n\n// Expose some internals for testing purposes\nnetworkSimplex.initLowLimValues = initLowLimValues;\nnetworkSimplex.initCutValues = initCutValues;\nnetworkSimplex.calcCutValue = calcCutValue;\nnetworkSimplex.leaveEdge = leaveEdge;\nnetworkSimplex.enterEdge = enterEdge;\nnetworkSimplex.exchangeEdges = exchangeEdges;\n\n/*\n * The network simplex algorithm assigns ranks to each node in the input graph\n * and iteratively improves the ranking to reduce the length of edges.\n *\n * Preconditions:\n *\n *    1. The input graph must be a DAG.\n *    2. All nodes in the graph must have an object value.\n *    3. All edges in the graph must have \"minlen\" and \"weight\" attributes.\n *\n * Postconditions:\n *\n *    1. All nodes in the graph will have an assigned \"rank\" attribute that has\n *       been optimized by the network simplex algorithm. Ranks start at 0.\n *\n *\n * A rough sketch of the algorithm is as follows:\n *\n *    1. Assign initial ranks to each node. We use the longest path algorithm,\n *       which assigns ranks to the lowest position possible. In general this\n *       leads to very wide bottom ranks and unnecessarily long edges.\n *    2. Construct a feasible tight tree. A tight tree is one such that all\n *       edges in the tree have no slack (difference between length of edge\n *       and minlen for the edge). This by itself greatly improves the assigned\n *       rankings by shorting edges.\n *    3. Iteratively find edges that have negative cut values. Generally a\n *       negative cut value indicates that the edge could be removed and a new\n *       tree edge could be added to produce a more compact graph.\n *\n * Much of the algorithms here are derived from Gansner, et al., \"A Technique\n * for Drawing Directed Graphs.\" The structure of the file roughly follows the\n * structure of the overall algorithm.\n */\nfunction networkSimplex(g) {\n  g = simplify(g);\n  longestPath(g);\n  var t = feasibleTree(g);\n  initLowLimValues(t);\n  initCutValues(t, g);\n\n  var e, f;\n  while ((e = leaveEdge(t))) {\n    f = enterEdge(t, g, e);\n    exchangeEdges(t, g, e, f);\n  }\n}\n\n/*\n * Initializes cut values for all edges in the tree.\n */\nfunction initCutValues(t, g) {\n  var vs = alg.postorder(t, t.nodes());\n  vs = vs.slice(0, vs.length - 1);\n  _.forEach(vs, function (v) {\n    assignCutValue(t, g, v);\n  });\n}\n\nfunction assignCutValue(t, g, child) {\n  var childLab = t.node(child);\n  var parent = childLab.parent;\n  t.edge(child, parent).cutvalue = calcCutValue(t, g, child);\n}\n\n/*\n * Given the tight tree, its graph, and a child in the graph calculate and\n * return the cut value for the edge between the child and its parent.\n */\nfunction calcCutValue(t, g, child) {\n  var childLab = t.node(child);\n  var parent = childLab.parent;\n  // True if the child is on the tail end of the edge in the directed graph\n  var childIsTail = true;\n  // The graph's view of the tree edge we're inspecting\n  var graphEdge = g.edge(child, parent);\n  // The accumulated cut value for the edge between this node and its parent\n  var cutValue = 0;\n\n  if (!graphEdge) {\n    childIsTail = false;\n    graphEdge = g.edge(parent, child);\n  }\n\n  cutValue = graphEdge.weight;\n\n  _.forEach(g.nodeEdges(child), function (e) {\n    var isOutEdge = e.v === child,\n      other = isOutEdge ? e.w : e.v;\n\n    if (other !== parent) {\n      var pointsToHead = isOutEdge === childIsTail,\n        otherWeight = g.edge(e).weight;\n\n      cutValue += pointsToHead ? otherWeight : -otherWeight;\n      if (isTreeEdge(t, child, other)) {\n        var otherCutValue = t.edge(child, other).cutvalue;\n        cutValue += pointsToHead ? -otherCutValue : otherCutValue;\n      }\n    }\n  });\n\n  return cutValue;\n}\n\nfunction initLowLimValues(tree, root) {\n  if (arguments.length < 2) {\n    root = tree.nodes()[0];\n  }\n  dfsAssignLowLim(tree, {}, 1, root);\n}\n\nfunction dfsAssignLowLim(tree, visited, nextLim, v, parent) {\n  var low = nextLim;\n  var label = tree.node(v);\n\n  visited[v] = true;\n  _.forEach(tree.neighbors(v), function (w) {\n    if (!_.has(visited, w)) {\n      nextLim = dfsAssignLowLim(tree, visited, nextLim, w, v);\n    }\n  });\n\n  label.low = low;\n  label.lim = nextLim++;\n  if (parent) {\n    label.parent = parent;\n  } else {\n    // TODO should be able to remove this when we incrementally update low lim\n    delete label.parent;\n  }\n\n  return nextLim;\n}\n\nfunction leaveEdge(tree) {\n  return _.find(tree.edges(), function (e) {\n    return tree.edge(e).cutvalue < 0;\n  });\n}\n\nfunction enterEdge(t, g, edge) {\n  var v = edge.v;\n  var w = edge.w;\n\n  // For the rest of this function we assume that v is the tail and w is the\n  // head, so if we don't have this edge in the graph we should flip it to\n  // match the correct orientation.\n  if (!g.hasEdge(v, w)) {\n    v = edge.w;\n    w = edge.v;\n  }\n\n  var vLabel = t.node(v);\n  var wLabel = t.node(w);\n  var tailLabel = vLabel;\n  var flip = false;\n\n  // If the root is in the tail of the edge then we need to flip the logic that\n  // checks for the head and tail nodes in the candidates function below.\n  if (vLabel.lim > wLabel.lim) {\n    tailLabel = wLabel;\n    flip = true;\n  }\n\n  var candidates = _.filter(g.edges(), function (edge) {\n    return (\n      flip === isDescendant(t, t.node(edge.v), tailLabel) &&\n      flip !== isDescendant(t, t.node(edge.w), tailLabel)\n    );\n  });\n\n  return _.minBy(candidates, function (edge) {\n    return slack(g, edge);\n  });\n}\n\nfunction exchangeEdges(t, g, e, f) {\n  var v = e.v;\n  var w = e.w;\n  t.removeEdge(v, w);\n  t.setEdge(f.v, f.w, {});\n  initLowLimValues(t);\n  initCutValues(t, g);\n  updateRanks(t, g);\n}\n\nfunction updateRanks(t, g) {\n  var root = _.find(t.nodes(), function (v) {\n    return !g.node(v).parent;\n  });\n  var vs = alg.preorder(t, root);\n  vs = vs.slice(1);\n  _.forEach(vs, function (v) {\n    var parent = t.node(v).parent,\n      edge = g.edge(v, parent),\n      flipped = false;\n\n    if (!edge) {\n      edge = g.edge(parent, v);\n      flipped = true;\n    }\n\n    g.node(v).rank = g.node(parent).rank + (flipped ? edge.minlen : -edge.minlen);\n  });\n}\n\n/*\n * Returns true if the edge is in the tree.\n */\nfunction isTreeEdge(tree, u, v) {\n  return tree.hasEdge(u, v);\n}\n\n/*\n * Returns true if the specified node is descendant of the root node per the\n * assigned low and lim attributes in the tree.\n */\nfunction isDescendant(tree, vLabel, rootLabel) {\n  return rootLabel.low <= vLabel.lim && vLabel.lim <= rootLabel.lim;\n}\n","import { feasibleTree } from './feasible-tree.js';\nimport { networkSimplex } from './network-simplex.js';\nimport { longestPath } from './util.js';\n\nexport { rank };\n\n/*\n * Assigns a rank to each node in the input graph that respects the \"minlen\"\n * constraint specified on edges between nodes.\n *\n * This basic structure is derived from Gansner, et al., \"A Technique for\n * Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a connected DAG\n *    2. Graph nodes must be objects\n *    3. Graph edges must have \"weight\" and \"minlen\" attributes\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have a \"rank\" attribute based on the results of the\n *       algorithm. Ranks can start at any index (including negative), we'll\n *       fix them up later.\n */\nfunction rank(g) {\n  switch (g.graph().ranker) {\n    case 'network-simplex':\n      networkSimplexRanker(g);\n      break;\n    case 'tight-tree':\n      tightTreeRanker(g);\n      break;\n    case 'longest-path':\n      longestPathRanker(g);\n      break;\n    default:\n      networkSimplexRanker(g);\n  }\n}\n\n// A fast and simple ranker, but results are far from optimal.\nvar longestPathRanker = longestPath;\n\nfunction tightTreeRanker(g) {\n  longestPath(g);\n  feasibleTree(g);\n}\n\nfunction networkSimplexRanker(g) {\n  networkSimplex(g);\n}\n","import * as _ from 'lodash-es';\nimport * as util from './util.js';\n\nexport { run, cleanup };\n\n/*\n * A nesting graph creates dummy nodes for the tops and bottoms of subgraphs,\n * adds appropriate edges to ensure that all cluster nodes are placed between\n * these boundries, and ensures that the graph is connected.\n *\n * In addition we ensure, through the use of the minlen property, that nodes\n * and subgraph border nodes to not end up on the same rank.\n *\n * Preconditions:\n *\n *    1. Input graph is a DAG\n *    2. Nodes in the input graph has a minlen attribute\n *\n * Postconditions:\n *\n *    1. Input graph is connected.\n *    2. Dummy nodes are added for the tops and bottoms of subgraphs.\n *    3. The minlen attribute for nodes is adjusted to ensure nodes do not\n *       get placed on the same rank as subgraph border nodes.\n *\n * The nesting graph idea comes from Sander, \"Layout of Compound Directed\n * Graphs.\"\n */\nfunction run(g) {\n  var root = util.addDummyNode(g, 'root', {}, '_root');\n  var depths = treeDepths(g);\n  var height = _.max(_.values(depths)) - 1; // Note: depths is an Object not an array\n  var nodeSep = 2 * height + 1;\n\n  g.graph().nestingRoot = root;\n\n  // Multiply minlen by nodeSep to align nodes on non-border ranks.\n  _.forEach(g.edges(), function (e) {\n    g.edge(e).minlen *= nodeSep;\n  });\n\n  // Calculate a weight that is sufficient to keep subgraphs vertically compact\n  var weight = sumWeights(g) + 1;\n\n  // Create border nodes and link them up\n  _.forEach(g.children(), function (child) {\n    dfs(g, root, nodeSep, weight, height, depths, child);\n  });\n\n  // Save the multiplier for node layers for later removal of empty border\n  // layers.\n  g.graph().nodeRankFactor = nodeSep;\n}\n\nfunction dfs(g, root, nodeSep, weight, height, depths, v) {\n  var children = g.children(v);\n  if (!children.length) {\n    if (v !== root) {\n      g.setEdge(root, v, { weight: 0, minlen: nodeSep });\n    }\n    return;\n  }\n\n  var top = util.addBorderNode(g, '_bt');\n  var bottom = util.addBorderNode(g, '_bb');\n  var label = g.node(v);\n\n  g.setParent(top, v);\n  label.borderTop = top;\n  g.setParent(bottom, v);\n  label.borderBottom = bottom;\n\n  _.forEach(children, function (child) {\n    dfs(g, root, nodeSep, weight, height, depths, child);\n\n    var childNode = g.node(child);\n    var childTop = childNode.borderTop ? childNode.borderTop : child;\n    var childBottom = childNode.borderBottom ? childNode.borderBottom : child;\n    var thisWeight = childNode.borderTop ? weight : 2 * weight;\n    var minlen = childTop !== childBottom ? 1 : height - depths[v] + 1;\n\n    g.setEdge(top, childTop, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true,\n    });\n\n    g.setEdge(childBottom, bottom, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true,\n    });\n  });\n\n  if (!g.parent(v)) {\n    g.setEdge(root, top, { weight: 0, minlen: height + depths[v] });\n  }\n}\n\nfunction treeDepths(g) {\n  var depths = {};\n  function dfs(v, depth) {\n    var children = g.children(v);\n    if (children && children.length) {\n      _.forEach(children, function (child) {\n        dfs(child, depth + 1);\n      });\n    }\n    depths[v] = depth;\n  }\n  _.forEach(g.children(), function (v) {\n    dfs(v, 1);\n  });\n  return depths;\n}\n\nfunction sumWeights(g) {\n  return _.reduce(\n    g.edges(),\n    function (acc, e) {\n      return acc + g.edge(e).weight;\n    },\n    0\n  );\n}\n\nfunction cleanup(g) {\n  var graphLabel = g.graph();\n  g.removeNode(graphLabel.nestingRoot);\n  delete graphLabel.nestingRoot;\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.nestingEdge) {\n      g.removeEdge(e);\n    }\n  });\n}\n","import * as _ from 'lodash-es';\n\nexport { addSubgraphConstraints };\n\nfunction addSubgraphConstraints(g, cg, vs) {\n  var prev = {},\n    rootPrev;\n\n  _.forEach(vs, function (v) {\n    var child = g.parent(v),\n      parent,\n      prevChild;\n    while (child) {\n      parent = g.parent(child);\n      if (parent) {\n        prevChild = prev[parent];\n        prev[parent] = child;\n      } else {\n        prevChild = rootPrev;\n        rootPrev = child;\n      }\n      if (prevChild && prevChild !== child) {\n        cg.setEdge(prevChild, child);\n        return;\n      }\n      child = parent;\n    }\n  });\n\n  /*\n  function dfs(v) {\n    var children = v ? g.children(v) : g.children();\n    if (children.length) {\n      var min = Number.POSITIVE_INFINITY,\n          subgraphs = [];\n      _.each(children, function(child) {\n        var childMin = dfs(child);\n        if (g.children(child).length) {\n          subgraphs.push({ v: child, order: childMin });\n        }\n        min = Math.min(min, childMin);\n      });\n      _.reduce(_.sortBy(subgraphs, \"order\"), function(prev, curr) {\n        cg.setEdge(prev.v, curr.v);\n        return curr;\n      });\n      return min;\n    }\n    return g.node(v).order;\n  }\n  dfs(undefined);\n  */\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../../graphlib/index.js';\n\nexport { buildLayerGraph };\n\n/*\n * Constructs a graph that can be used to sort a layer of nodes. The graph will\n * contain all base and subgraph nodes from the request layer in their original\n * hierarchy and any edges that are incident on these nodes and are of the type\n * requested by the \"relationship\" parameter.\n *\n * Nodes from the requested rank that do not have parents are assigned a root\n * node in the output graph, which is set in the root graph attribute. This\n * makes it easy to walk the hierarchy of movable nodes during ordering.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG\n *    2. Base nodes in the input graph have a rank attribute\n *    3. Subgraph nodes in the input graph has minRank and maxRank attributes\n *    4. Edges have an assigned weight\n *\n * Post-conditions:\n *\n *    1. Output graph has all nodes in the movable rank with preserved\n *       hierarchy.\n *    2. Root nodes in the movable layer are made children of the node\n *       indicated by the root attribute of the graph.\n *    3. Non-movable nodes incident on movable nodes, selected by the\n *       relationship parameter, are included in the graph (without hierarchy).\n *    4. Edges incident on movable nodes, selected by the relationship\n *       parameter, are added to the output graph.\n *    5. The weights for copied edges are aggregated as need, since the output\n *       graph is not a multi-graph.\n */\nfunction buildLayerGraph(g, rank, relationship) {\n  var root = createRootNode(g),\n    result = new Graph({ compound: true })\n      .setGraph({ root: root })\n      .setDefaultNodeLabel(function (v) {\n        return g.node(v);\n      });\n\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v),\n      parent = g.parent(v);\n\n    if (node.rank === rank || (node.minRank <= rank && rank <= node.maxRank)) {\n      result.setNode(v);\n      result.setParent(v, parent || root);\n\n      // This assumes we have only short edges!\n      _.forEach(g[relationship](v), function (e) {\n        var u = e.v === v ? e.w : e.v,\n          edge = result.edge(u, v),\n          weight = !_.isUndefined(edge) ? edge.weight : 0;\n        result.setEdge(u, v, { weight: g.edge(e).weight + weight });\n      });\n\n      if (_.has(node, 'minRank')) {\n        result.setNode(v, {\n          borderLeft: node.borderLeft[rank],\n          borderRight: node.borderRight[rank],\n        });\n      }\n    }\n  });\n\n  return result;\n}\n\nfunction createRootNode(g) {\n  var v;\n  while (g.hasNode((v = _.uniqueId('_root'))));\n  return v;\n}\n","import * as _ from 'lodash-es';\n\nexport { crossCount };\n\n/*\n * A function that takes a layering (an array of layers, each with an array of\n * ordererd nodes) and a graph and returns a weighted crossing count.\n *\n * Pre-conditions:\n *\n *    1. Input graph must be simple (not a multigraph), directed, and include\n *       only simple edges.\n *    2. Edges in the input graph must have assigned weights.\n *\n * Post-conditions:\n *\n *    1. The graph and layering matrix are left unchanged.\n *\n * This algorithm is derived from Barth, et al., \"Bilayer Cross Counting.\"\n */\nfunction crossCount(g, layering) {\n  var cc = 0;\n  for (var i = 1; i < layering.length; ++i) {\n    cc += twoLayerCrossCount(g, layering[i - 1], layering[i]);\n  }\n  return cc;\n}\n\nfunction twoLayerCrossCount(g, northLayer, southLayer) {\n  // Sort all of the edges between the north and south layers by their position\n  // in the north layer and then the south. Map these edges to the position of\n  // their head in the south layer.\n  var southPos = _.zipObject(\n    southLayer,\n    _.map(southLayer, function (v, i) {\n      return i;\n    })\n  );\n  var southEntries = _.flatten(\n    _.map(northLayer, function (v) {\n      return _.sortBy(\n        _.map(g.outEdges(v), function (e) {\n          return { pos: southPos[e.w], weight: g.edge(e).weight };\n        }),\n        'pos'\n      );\n    })\n  );\n\n  // Build the accumulator tree\n  var firstIndex = 1;\n  while (firstIndex < southLayer.length) firstIndex <<= 1;\n  var treeSize = 2 * firstIndex - 1;\n  firstIndex -= 1;\n  var tree = _.map(new Array(treeSize), function () {\n    return 0;\n  });\n\n  // Calculate the weighted crossings\n  var cc = 0;\n  _.forEach(\n    // @ts-expect-error\n    southEntries.forEach(function (entry) {\n      var index = entry.pos + firstIndex;\n      tree[index] += entry.weight;\n      var weightSum = 0;\n      // @ts-expect-error\n      while (index > 0) {\n        // @ts-expect-error\n        if (index % 2) {\n          weightSum += tree[index + 1];\n        }\n        // @ts-expect-error\n        index = (index - 1) >> 1;\n        tree[index] += entry.weight;\n      }\n      cc += entry.weight * weightSum;\n    })\n  );\n\n  return cc;\n}\n","import * as _ from 'lodash-es';\n\nexport { initOrder };\n\n/*\n * Assigns an initial order value for each node by performing a DFS search\n * starting from nodes in the first rank. Nodes are assigned an order in their\n * rank as they are first visited.\n *\n * This approach comes from Gansner, et al., \"A Technique for Drawing Directed\n * Graphs.\"\n *\n * Returns a layering matrix with an array per layer and each layer sorted by\n * the order of its nodes.\n */\nfunction initOrder(g) {\n  var visited = {};\n  var simpleNodes = _.filter(g.nodes(), function (v) {\n    return !g.children(v).length;\n  });\n  var maxRank = _.max(\n    _.map(simpleNodes, function (v) {\n      return g.node(v).rank;\n    })\n  );\n  var layers = _.map(_.range(maxRank + 1), function () {\n    return [];\n  });\n\n  function dfs(v) {\n    if (_.has(visited, v)) return;\n    visited[v] = true;\n    var node = g.node(v);\n    layers[node.rank].push(v);\n    _.forEach(g.successors(v), dfs);\n  }\n\n  var orderedVs = _.sortBy(simpleNodes, function (v) {\n    return g.node(v).rank;\n  });\n  _.forEach(orderedVs, dfs);\n\n  return layers;\n}\n","import * as _ from 'lodash-es';\n\nexport { barycenter };\n\nfunction barycenter(g, movable) {\n  return _.map(movable, function (v) {\n    var inV = g.inEdges(v);\n    if (!inV.length) {\n      return { v: v };\n    } else {\n      var result = _.reduce(\n        inV,\n        function (acc, e) {\n          var edge = g.edge(e),\n            nodeU = g.node(e.v);\n          return {\n            sum: acc.sum + edge.weight * nodeU.order,\n            weight: acc.weight + edge.weight,\n          };\n        },\n        { sum: 0, weight: 0 }\n      );\n\n      return {\n        v: v,\n        barycenter: result.sum / result.weight,\n        weight: result.weight,\n      };\n    }\n  });\n}\n","import * as _ from 'lodash-es';\n\nexport { resolveConflicts };\n\n/*\n * Given a list of entries of the form {v, barycenter, weight} and a\n * constraint graph this function will resolve any conflicts between the\n * constraint graph and the barycenters for the entries. If the barycenters for\n * an entry would violate a constraint in the constraint graph then we coalesce\n * the nodes in the conflict into a new node that respects the contraint and\n * aggregates barycenter and weight information.\n *\n * This implementation is based on the description in Forster, \"A Fast and\n * Simple Hueristic for Constrained Two-Level Crossing Reduction,\" thought it\n * differs in some specific details.\n *\n * Pre-conditions:\n *\n *    1. Each entry has the form {v, barycenter, weight}, or if the node has\n *       no barycenter, then {v}.\n *\n * Returns:\n *\n *    A new list of entries of the form {vs, i, barycenter, weight}. The list\n *    `vs` may either be a singleton or it may be an aggregation of nodes\n *    ordered such that they do not violate constraints from the constraint\n *    graph. The property `i` is the lowest original index of any of the\n *    elements in `vs`.\n */\nfunction resolveConflicts(entries, cg) {\n  var mappedEntries = {};\n  _.forEach(entries, function (entry, i) {\n    var tmp = (mappedEntries[entry.v] = {\n      indegree: 0,\n      in: [],\n      out: [],\n      vs: [entry.v],\n      i: i,\n    });\n    if (!_.isUndefined(entry.barycenter)) {\n      // @ts-expect-error\n      tmp.barycenter = entry.barycenter;\n      // @ts-expect-error\n      tmp.weight = entry.weight;\n    }\n  });\n\n  _.forEach(cg.edges(), function (e) {\n    var entryV = mappedEntries[e.v];\n    var entryW = mappedEntries[e.w];\n    if (!_.isUndefined(entryV) && !_.isUndefined(entryW)) {\n      entryW.indegree++;\n      entryV.out.push(mappedEntries[e.w]);\n    }\n  });\n\n  var sourceSet = _.filter(mappedEntries, function (entry) {\n    // @ts-expect-error\n    return !entry.indegree;\n  });\n\n  return doResolveConflicts(sourceSet);\n}\n\nfunction doResolveConflicts(sourceSet) {\n  var entries = [];\n\n  function handleIn(vEntry) {\n    return function (uEntry) {\n      if (uEntry.merged) {\n        return;\n      }\n      if (\n        _.isUndefined(uEntry.barycenter) ||\n        _.isUndefined(vEntry.barycenter) ||\n        uEntry.barycenter >= vEntry.barycenter\n      ) {\n        mergeEntries(vEntry, uEntry);\n      }\n    };\n  }\n\n  function handleOut(vEntry) {\n    return function (wEntry) {\n      wEntry['in'].push(vEntry);\n      if (--wEntry.indegree === 0) {\n        sourceSet.push(wEntry);\n      }\n    };\n  }\n\n  while (sourceSet.length) {\n    var entry = sourceSet.pop();\n    entries.push(entry);\n    _.forEach(entry['in'].reverse(), handleIn(entry));\n    _.forEach(entry.out, handleOut(entry));\n  }\n\n  return _.map(\n    _.filter(entries, function (entry) {\n      return !entry.merged;\n    }),\n    function (entry) {\n      return _.pick(entry, ['vs', 'i', 'barycenter', 'weight']);\n    }\n  );\n}\n\nfunction mergeEntries(target, source) {\n  var sum = 0;\n  var weight = 0;\n\n  if (target.weight) {\n    sum += target.barycenter * target.weight;\n    weight += target.weight;\n  }\n\n  if (source.weight) {\n    sum += source.barycenter * source.weight;\n    weight += source.weight;\n  }\n\n  target.vs = source.vs.concat(target.vs);\n  target.barycenter = sum / weight;\n  target.weight = weight;\n  target.i = Math.min(source.i, target.i);\n  source.merged = true;\n}\n","import * as _ from 'lodash-es';\nimport * as util from '../util.js';\n\nexport { sort };\n\nfunction sort(entries, biasRight) {\n  var parts = util.partition(entries, function (entry) {\n    return _.has(entry, 'barycenter');\n  });\n  var sortable = parts.lhs,\n    unsortable = _.sortBy(parts.rhs, function (entry) {\n      return -entry.i;\n    }),\n    vs = [],\n    sum = 0,\n    weight = 0,\n    vsIndex = 0;\n\n  sortable.sort(compareWithBias(!!biasRight));\n\n  vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n\n  _.forEach(sortable, function (entry) {\n    vsIndex += entry.vs.length;\n    vs.push(entry.vs);\n    sum += entry.barycenter * entry.weight;\n    weight += entry.weight;\n    vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n  });\n\n  var result = { vs: _.flatten(vs) };\n  if (weight) {\n    result.barycenter = sum / weight;\n    result.weight = weight;\n  }\n  return result;\n}\n\nfunction consumeUnsortable(vs, unsortable, index) {\n  var last;\n  while (unsortable.length && (last = _.last(unsortable)).i <= index) {\n    unsortable.pop();\n    vs.push(last.vs);\n    index++;\n  }\n  return index;\n}\n\nfunction compareWithBias(bias) {\n  return function (entryV, entryW) {\n    if (entryV.barycenter < entryW.barycenter) {\n      return -1;\n    } else if (entryV.barycenter > entryW.barycenter) {\n      return 1;\n    }\n\n    return !bias ? entryV.i - entryW.i : entryW.i - entryV.i;\n  };\n}\n","import * as _ from 'lodash-es';\nimport { barycenter } from './barycenter.js';\nimport { resolveConflicts } from './resolve-conflicts.js';\nimport { sort } from './sort.js';\n\nexport { sortSubgraph };\n\nfunction sortSubgraph(g, v, cg, biasRight) {\n  var movable = g.children(v);\n  var node = g.node(v);\n  var bl = node ? node.borderLeft : undefined;\n  var br = node ? node.borderRight : undefined;\n  var subgraphs = {};\n\n  if (bl) {\n    movable = _.filter(movable, function (w) {\n      return w !== bl && w !== br;\n    });\n  }\n\n  var barycenters = barycenter(g, movable);\n  _.forEach(barycenters, function (entry) {\n    if (g.children(entry.v).length) {\n      var subgraphResult = sortSubgraph(g, entry.v, cg, biasRight);\n      subgraphs[entry.v] = subgraphResult;\n      if (_.has(subgraphResult, 'barycenter')) {\n        mergeBarycenters(entry, subgraphResult);\n      }\n    }\n  });\n\n  var entries = resolveConflicts(barycenters, cg);\n  expandSubgraphs(entries, subgraphs);\n\n  var result = sort(entries, biasRight);\n\n  if (bl) {\n    result.vs = _.flatten([bl, result.vs, br]);\n    if (g.predecessors(bl).length) {\n      var blPred = g.node(g.predecessors(bl)[0]),\n        brPred = g.node(g.predecessors(br)[0]);\n      if (!_.has(result, 'barycenter')) {\n        result.barycenter = 0;\n        result.weight = 0;\n      }\n      result.barycenter =\n        (result.barycenter * result.weight + blPred.order + brPred.order) / (result.weight + 2);\n      result.weight += 2;\n    }\n  }\n\n  return result;\n}\n\nfunction expandSubgraphs(entries, subgraphs) {\n  _.forEach(entries, function (entry) {\n    entry.vs = _.flatten(\n      entry.vs.map(function (v) {\n        if (subgraphs[v]) {\n          return subgraphs[v].vs;\n        }\n        return v;\n      })\n    );\n  });\n}\n\nfunction mergeBarycenters(target, other) {\n  if (!_.isUndefined(target.barycenter)) {\n    target.barycenter =\n      (target.barycenter * target.weight + other.barycenter * other.weight) /\n      (target.weight + other.weight);\n    target.weight += other.weight;\n  } else {\n    target.barycenter = other.barycenter;\n    target.weight = other.weight;\n  }\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../../graphlib/index.js';\nimport * as util from '../util.js';\nimport { addSubgraphConstraints } from './add-subgraph-constraints.js';\nimport { buildLayerGraph } from './build-layer-graph.js';\nimport { crossCount } from './cross-count.js';\nimport { initOrder } from './init-order.js';\nimport { sortSubgraph } from './sort-subgraph.js';\n\nexport { order };\n\n/*\n * Applies heuristics to minimize edge crossings in the graph and sets the best\n * order solution as an order attribute on each node.\n *\n * Pre-conditions:\n *\n *    1. Graph must be DAG\n *    2. Graph nodes must be objects with a \"rank\" attribute\n *    3. Graph edges must have the \"weight\" attribute\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have an \"order\" attribute based on the results of the\n *       algorithm.\n */\nfunction order(g) {\n  var maxRank = util.maxRank(g),\n    downLayerGraphs = buildLayerGraphs(g, _.range(1, maxRank + 1), 'inEdges'),\n    upLayerGraphs = buildLayerGraphs(g, _.range(maxRank - 1, -1, -1), 'outEdges');\n\n  var layering = initOrder(g);\n  assignOrder(g, layering);\n\n  var bestCC = Number.POSITIVE_INFINITY,\n    best;\n\n  for (var i = 0, lastBest = 0; lastBest < 4; ++i, ++lastBest) {\n    sweepLayerGraphs(i % 2 ? downLayerGraphs : upLayerGraphs, i % 4 >= 2);\n\n    layering = util.buildLayerMatrix(g);\n    var cc = crossCount(g, layering);\n    if (cc < bestCC) {\n      lastBest = 0;\n      best = _.cloneDeep(layering);\n      bestCC = cc;\n    }\n  }\n\n  assignOrder(g, best);\n}\n\nfunction buildLayerGraphs(g, ranks, relationship) {\n  return _.map(ranks, function (rank) {\n    return buildLayerGraph(g, rank, relationship);\n  });\n}\n\nfunction sweepLayerGraphs(layerGraphs, biasRight) {\n  var cg = new Graph();\n  _.forEach(layerGraphs, function (lg) {\n    var root = lg.graph().root;\n    var sorted = sortSubgraph(lg, root, cg, biasRight);\n    _.forEach(sorted.vs, function (v, i) {\n      lg.node(v).order = i;\n    });\n    addSubgraphConstraints(lg, cg, sorted.vs);\n  });\n}\n\nfunction assignOrder(g, layering) {\n  _.forEach(layering, function (layer) {\n    _.forEach(layer, function (v, i) {\n      g.node(v).order = i;\n    });\n  });\n}\n","import * as _ from 'lodash-es';\n\nexport { parentDummyChains };\n\nfunction parentDummyChains(g) {\n  var postorderNums = postorder(g);\n\n  _.forEach(g.graph().dummyChains, function (v) {\n    var node = g.node(v);\n    var edgeObj = node.edgeObj;\n    var pathData = findPath(g, postorderNums, edgeObj.v, edgeObj.w);\n    var path = pathData.path;\n    var lca = pathData.lca;\n    var pathIdx = 0;\n    var pathV = path[pathIdx];\n    var ascending = true;\n\n    while (v !== edgeObj.w) {\n      node = g.node(v);\n\n      if (ascending) {\n        while ((pathV = path[pathIdx]) !== lca && g.node(pathV).maxRank < node.rank) {\n          pathIdx++;\n        }\n\n        if (pathV === lca) {\n          ascending = false;\n        }\n      }\n\n      if (!ascending) {\n        while (\n          pathIdx < path.length - 1 &&\n          g.node((pathV = path[pathIdx + 1])).minRank <= node.rank\n        ) {\n          pathIdx++;\n        }\n        pathV = path[pathIdx];\n      }\n\n      g.setParent(v, pathV);\n      v = g.successors(v)[0];\n    }\n  });\n}\n\n// Find a path from v to w through the lowest common ancestor (LCA). Return the\n// full path and the LCA.\nfunction findPath(g, postorderNums, v, w) {\n  var vPath = [];\n  var wPath = [];\n  var low = Math.min(postorderNums[v].low, postorderNums[w].low);\n  var lim = Math.max(postorderNums[v].lim, postorderNums[w].lim);\n  var parent;\n  var lca;\n\n  // Traverse up from v to find the LCA\n  parent = v;\n  do {\n    parent = g.parent(parent);\n    vPath.push(parent);\n  } while (parent && (postorderNums[parent].low > low || lim > postorderNums[parent].lim));\n  lca = parent;\n\n  // Traverse from w to LCA\n  parent = w;\n  while ((parent = g.parent(parent)) !== lca) {\n    wPath.push(parent);\n  }\n\n  return { path: vPath.concat(wPath.reverse()), lca: lca };\n}\n\nfunction postorder(g) {\n  var result = {};\n  var lim = 0;\n\n  function dfs(v) {\n    var low = lim;\n    _.forEach(g.children(v), dfs);\n    result[v] = { low: low, lim: lim++ };\n  }\n  _.forEach(g.children(), dfs);\n\n  return result;\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../../graphlib/index.js';\nimport * as util from '../util.js';\n\n/*\n * This module provides coordinate assignment based on Brandes and Köpf, \"Fast\n * and Simple Horizontal Coordinate Assignment.\"\n */\n\nexport {\n  positionX,\n  findType1Conflicts,\n  findType2Conflicts,\n  addConflict,\n  hasConflict,\n  verticalAlignment,\n  horizontalCompaction,\n  alignCoordinates,\n  findSmallestWidthAlignment,\n  balance,\n};\n\n/*\n * Marks all edges in the graph with a type-1 conflict with the \"type1Conflict\"\n * property. A type-1 conflict is one where a non-inner segment crosses an\n * inner segment. An inner segment is an edge with both incident nodes marked\n * with the \"dummy\" property.\n *\n * This algorithm scans layer by layer, starting with the second, for type-1\n * conflicts between the current layer and the previous layer. For each layer\n * it scans the nodes from left to right until it reaches one that is incident\n * on an inner segment. It then scans predecessors to determine if they have\n * edges that cross that inner segment. At the end a final scan is done for all\n * nodes on the current rank to see if they cross the last visited inner\n * segment.\n *\n * This algorithm (safely) assumes that a dummy node will only be incident on a\n * single node in the layers being scanned.\n */\nfunction findType1Conflicts(g, layering) {\n  var conflicts = {};\n\n  function visitLayer(prevLayer, layer) {\n    var // last visited node in the previous layer that is incident on an inner\n      // segment.\n      k0 = 0,\n      // Tracks the last node in this layer scanned for crossings with a type-1\n      // segment.\n      scanPos = 0,\n      prevLayerLength = prevLayer.length,\n      lastNode = _.last(layer);\n\n    _.forEach(layer, function (v, i) {\n      var w = findOtherInnerSegmentNode(g, v),\n        k1 = w ? g.node(w).order : prevLayerLength;\n\n      if (w || v === lastNode) {\n        _.forEach(layer.slice(scanPos, i + 1), function (scanNode) {\n          _.forEach(g.predecessors(scanNode), function (u) {\n            var uLabel = g.node(u),\n              uPos = uLabel.order;\n            if ((uPos < k0 || k1 < uPos) && !(uLabel.dummy && g.node(scanNode).dummy)) {\n              addConflict(conflicts, u, scanNode);\n            }\n          });\n        });\n        // @ts-expect-error\n        scanPos = i + 1;\n        k0 = k1;\n      }\n    });\n\n    return layer;\n  }\n\n  _.reduce(layering, visitLayer);\n  return conflicts;\n}\n\nfunction findType2Conflicts(g, layering) {\n  var conflicts = {};\n\n  function scan(south, southPos, southEnd, prevNorthBorder, nextNorthBorder) {\n    var v;\n    _.forEach(_.range(southPos, southEnd), function (i) {\n      v = south[i];\n      if (g.node(v).dummy) {\n        _.forEach(g.predecessors(v), function (u) {\n          var uNode = g.node(u);\n          if (uNode.dummy && (uNode.order < prevNorthBorder || uNode.order > nextNorthBorder)) {\n            addConflict(conflicts, u, v);\n          }\n        });\n      }\n    });\n  }\n\n  function visitLayer(north, south) {\n    var prevNorthPos = -1,\n      nextNorthPos,\n      southPos = 0;\n\n    _.forEach(south, function (v, southLookahead) {\n      if (g.node(v).dummy === 'border') {\n        var predecessors = g.predecessors(v);\n        if (predecessors.length) {\n          nextNorthPos = g.node(predecessors[0]).order;\n          scan(south, southPos, southLookahead, prevNorthPos, nextNorthPos);\n          // @ts-expect-error\n          southPos = southLookahead;\n          prevNorthPos = nextNorthPos;\n        }\n      }\n      scan(south, southPos, south.length, nextNorthPos, north.length);\n    });\n\n    return south;\n  }\n\n  _.reduce(layering, visitLayer);\n  return conflicts;\n}\n\nfunction findOtherInnerSegmentNode(g, v) {\n  if (g.node(v).dummy) {\n    return _.find(g.predecessors(v), function (u) {\n      return g.node(u).dummy;\n    });\n  }\n}\n\nfunction addConflict(conflicts, v, w) {\n  if (v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n\n  var conflictsV = conflicts[v];\n  if (!conflictsV) {\n    conflicts[v] = conflictsV = {};\n  }\n  conflictsV[w] = true;\n}\n\nfunction hasConflict(conflicts, v, w) {\n  if (v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  return _.has(conflicts[v], w);\n}\n\n/*\n * Try to align nodes into vertical \"blocks\" where possible. This algorithm\n * attempts to align a node with one of its median neighbors. If the edge\n * connecting a neighbor is a type-1 conflict then we ignore that possibility.\n * If a previous node has already formed a block with a node after the node\n * we're trying to form a block with, we also ignore that possibility - our\n * blocks would be split in that scenario.\n */\nfunction verticalAlignment(g, layering, conflicts, neighborFn) {\n  var root = {},\n    align = {},\n    pos = {};\n\n  // We cache the position here based on the layering because the graph and\n  // layering may be out of sync. The layering matrix is manipulated to\n  // generate different extreme alignments.\n  _.forEach(layering, function (layer) {\n    _.forEach(layer, function (v, order) {\n      root[v] = v;\n      align[v] = v;\n      pos[v] = order;\n    });\n  });\n\n  _.forEach(layering, function (layer) {\n    var prevIdx = -1;\n    _.forEach(layer, function (v) {\n      var ws = neighborFn(v);\n      if (ws.length) {\n        ws = _.sortBy(ws, function (w) {\n          return pos[w];\n        });\n        var mp = (ws.length - 1) / 2;\n        for (var i = Math.floor(mp), il = Math.ceil(mp); i <= il; ++i) {\n          var w = ws[i];\n          if (align[v] === v && prevIdx < pos[w] && !hasConflict(conflicts, v, w)) {\n            align[w] = v;\n            align[v] = root[v] = root[w];\n            prevIdx = pos[w];\n          }\n        }\n      }\n    });\n  });\n\n  return { root: root, align: align };\n}\n\nfunction horizontalCompaction(g, layering, root, align, reverseSep) {\n  // This portion of the algorithm differs from BK due to a number of problems.\n  // Instead of their algorithm we construct a new block graph and do two\n  // sweeps. The first sweep places blocks with the smallest possible\n  // coordinates. The second sweep removes unused space by moving blocks to the\n  // greatest coordinates without violating separation.\n  var xs = {},\n    blockG = buildBlockGraph(g, layering, root, reverseSep),\n    borderType = reverseSep ? 'borderLeft' : 'borderRight';\n\n  function iterate(setXsFunc, nextNodesFunc) {\n    var stack = blockG.nodes();\n    var elem = stack.pop();\n    var visited = {};\n    while (elem) {\n      if (visited[elem]) {\n        setXsFunc(elem);\n      } else {\n        visited[elem] = true;\n        stack.push(elem);\n        stack = stack.concat(nextNodesFunc(elem));\n      }\n\n      elem = stack.pop();\n    }\n  }\n\n  // First pass, assign smallest coordinates\n  function pass1(elem) {\n    xs[elem] = blockG.inEdges(elem).reduce(function (acc, e) {\n      return Math.max(acc, xs[e.v] + blockG.edge(e));\n    }, 0);\n  }\n\n  // Second pass, assign greatest coordinates\n  function pass2(elem) {\n    var min = blockG.outEdges(elem).reduce(function (acc, e) {\n      return Math.min(acc, xs[e.w] - blockG.edge(e));\n    }, Number.POSITIVE_INFINITY);\n\n    var node = g.node(elem);\n    if (min !== Number.POSITIVE_INFINITY && node.borderType !== borderType) {\n      xs[elem] = Math.max(xs[elem], min);\n    }\n  }\n\n  iterate(pass1, blockG.predecessors.bind(blockG));\n  iterate(pass2, blockG.successors.bind(blockG));\n\n  // Assign x coordinates to all nodes\n  _.forEach(align, function (v) {\n    xs[v] = xs[root[v]];\n  });\n\n  return xs;\n}\n\nfunction buildBlockGraph(g, layering, root, reverseSep) {\n  var blockGraph = new Graph(),\n    graphLabel = g.graph(),\n    sepFn = sep(graphLabel.nodesep, graphLabel.edgesep, reverseSep);\n\n  _.forEach(layering, function (layer) {\n    var u;\n    _.forEach(layer, function (v) {\n      var vRoot = root[v];\n      blockGraph.setNode(vRoot);\n      if (u) {\n        var uRoot = root[u],\n          prevMax = blockGraph.edge(uRoot, vRoot);\n        blockGraph.setEdge(uRoot, vRoot, Math.max(sepFn(g, v, u), prevMax || 0));\n      }\n      u = v;\n    });\n  });\n\n  return blockGraph;\n}\n\n/*\n * Returns the alignment that has the smallest width of the given alignments.\n */\nfunction findSmallestWidthAlignment(g, xss) {\n  return _.minBy(_.values(xss), function (xs) {\n    var max = Number.NEGATIVE_INFINITY;\n    var min = Number.POSITIVE_INFINITY;\n\n    _.forIn(xs, function (x, v) {\n      var halfWidth = width(g, v) / 2;\n\n      max = Math.max(x + halfWidth, max);\n      min = Math.min(x - halfWidth, min);\n    });\n\n    return max - min;\n  });\n}\n\n/*\n * Align the coordinates of each of the layout alignments such that\n * left-biased alignments have their minimum coordinate at the same point as\n * the minimum coordinate of the smallest width alignment and right-biased\n * alignments have their maximum coordinate at the same point as the maximum\n * coordinate of the smallest width alignment.\n */\nfunction alignCoordinates(xss, alignTo) {\n  var alignToVals = _.values(alignTo),\n    alignToMin = _.min(alignToVals),\n    alignToMax = _.max(alignToVals);\n\n  _.forEach(['u', 'd'], function (vert) {\n    _.forEach(['l', 'r'], function (horiz) {\n      var alignment = vert + horiz,\n        xs = xss[alignment],\n        delta;\n      if (xs === alignTo) return;\n\n      var xsVals = _.values(xs);\n      delta = horiz === 'l' ? alignToMin - _.min(xsVals) : alignToMax - _.max(xsVals);\n\n      if (delta) {\n        xss[alignment] = _.mapValues(xs, function (x) {\n          return x + delta;\n        });\n      }\n    });\n  });\n}\n\nfunction balance(xss, align) {\n  return _.mapValues(xss.ul, function (ignore, v) {\n    if (align) {\n      return xss[align.toLowerCase()][v];\n    } else {\n      var xs = _.sortBy(_.map(xss, v));\n      return (xs[1] + xs[2]) / 2;\n    }\n  });\n}\n\nfunction positionX(g) {\n  var layering = util.buildLayerMatrix(g);\n  var conflicts = _.merge(findType1Conflicts(g, layering), findType2Conflicts(g, layering));\n\n  var xss = {};\n  var adjustedLayering;\n  _.forEach(['u', 'd'], function (vert) {\n    adjustedLayering = vert === 'u' ? layering : _.values(layering).reverse();\n    _.forEach(['l', 'r'], function (horiz) {\n      if (horiz === 'r') {\n        adjustedLayering = _.map(adjustedLayering, function (inner) {\n          return _.values(inner).reverse();\n        });\n      }\n\n      var neighborFn = (vert === 'u' ? g.predecessors : g.successors).bind(g);\n      var align = verticalAlignment(g, adjustedLayering, conflicts, neighborFn);\n      var xs = horizontalCompaction(g, adjustedLayering, align.root, align.align, horiz === 'r');\n      if (horiz === 'r') {\n        xs = _.mapValues(xs, function (x) {\n          return -x;\n        });\n      }\n      xss[vert + horiz] = xs;\n    });\n  });\n\n  var smallestWidth = findSmallestWidthAlignment(g, xss);\n  alignCoordinates(xss, smallestWidth);\n  return balance(xss, g.graph().align);\n}\n\nfunction sep(nodeSep, edgeSep, reverseSep) {\n  return function (g, v, w) {\n    var vLabel = g.node(v);\n    var wLabel = g.node(w);\n    var sum = 0;\n    var delta;\n\n    sum += vLabel.width / 2;\n    if (_.has(vLabel, 'labelpos')) {\n      switch (vLabel.labelpos.toLowerCase()) {\n        case 'l':\n          delta = -vLabel.width / 2;\n          break;\n        case 'r':\n          delta = vLabel.width / 2;\n          break;\n      }\n    }\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n    delta = 0;\n\n    sum += (vLabel.dummy ? edgeSep : nodeSep) / 2;\n    sum += (wLabel.dummy ? edgeSep : nodeSep) / 2;\n\n    sum += wLabel.width / 2;\n    if (_.has(wLabel, 'labelpos')) {\n      switch (wLabel.labelpos.toLowerCase()) {\n        case 'l':\n          delta = wLabel.width / 2;\n          break;\n        case 'r':\n          delta = -wLabel.width / 2;\n          break;\n      }\n    }\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n    delta = 0;\n\n    return sum;\n  };\n}\n\nfunction width(g, v) {\n  return g.node(v).width;\n}\n","import * as _ from 'lodash-es';\nimport * as util from '../util.js';\nimport { positionX } from './bk.js';\n\nexport { position };\n\nfunction position(g) {\n  g = util.asNonCompoundGraph(g);\n\n  positionY(g);\n  _.forOwn(positionX(g), function (x, v) {\n    g.node(v).x = x;\n  });\n}\n\nfunction positionY(g) {\n  var layering = util.buildLayerMatrix(g);\n  var rankSep = g.graph().ranksep;\n  var prevY = 0;\n  _.forEach(layering, function (layer) {\n    var maxHeight = _.max(\n      _.map(layer, function (v) {\n        return g.node(v).height;\n      })\n    );\n    _.forEach(layer, function (v) {\n      g.node(v).y = prevY + maxHeight / 2;\n    });\n    prevY += maxHeight + rankSep;\n  });\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from '../graphlib/index.js';\nimport { addBorderSegments } from './add-border-segments.js';\nimport * as coordinateSystem from './coordinate-system.js';\nimport * as acyclic from './acyclic.js';\nimport * as normalize from './normalize.js';\nimport { rank } from './rank/index.js';\nimport * as nestingGraph from './nesting-graph.js';\nimport { order } from './order/index.js';\nimport { parentDummyChains } from './parent-dummy-chains.js';\nimport { position } from './position/index.js';\nimport * as util from './util.js';\n\nexport { layout };\n\nfunction layout(g, opts) {\n  var time = opts && opts.debugTiming ? util.time : util.notime;\n  time('layout', function () {\n    var layoutGraph = time('  buildLayoutGraph', function () {\n      return buildLayoutGraph(g);\n    });\n    time('  runLayout', function () {\n      runLayout(layoutGraph, time);\n    });\n    time('  updateInputGraph', function () {\n      updateInputGraph(g, layoutGraph);\n    });\n  });\n}\n\nfunction runLayout(g, time) {\n  time('    makeSpaceForEdgeLabels', function () {\n    makeSpaceForEdgeLabels(g);\n  });\n  time('    removeSelfEdges', function () {\n    removeSelfEdges(g);\n  });\n  time('    acyclic', function () {\n    acyclic.run(g);\n  });\n  time('    nestingGraph.run', function () {\n    nestingGraph.run(g);\n  });\n  time('    rank', function () {\n    rank(util.asNonCompoundGraph(g));\n  });\n  time('    injectEdgeLabelProxies', function () {\n    injectEdgeLabelProxies(g);\n  });\n  time('    removeEmptyRanks', function () {\n    util.removeEmptyRanks(g);\n  });\n  time('    nestingGraph.cleanup', function () {\n    nestingGraph.cleanup(g);\n  });\n  time('    normalizeRanks', function () {\n    util.normalizeRanks(g);\n  });\n  time('    assignRankMinMax', function () {\n    assignRankMinMax(g);\n  });\n  time('    removeEdgeLabelProxies', function () {\n    removeEdgeLabelProxies(g);\n  });\n  time('    normalize.run', function () {\n    normalize.run(g);\n  });\n  time('    parentDummyChains', function () {\n    parentDummyChains(g);\n  });\n  time('    addBorderSegments', function () {\n    addBorderSegments(g);\n  });\n  time('    order', function () {\n    order(g);\n  });\n  time('    insertSelfEdges', function () {\n    insertSelfEdges(g);\n  });\n  time('    adjustCoordinateSystem', function () {\n    coordinateSystem.adjust(g);\n  });\n  time('    position', function () {\n    position(g);\n  });\n  time('    positionSelfEdges', function () {\n    positionSelfEdges(g);\n  });\n  time('    removeBorderNodes', function () {\n    removeBorderNodes(g);\n  });\n  time('    normalize.undo', function () {\n    normalize.undo(g);\n  });\n  time('    fixupEdgeLabelCoords', function () {\n    fixupEdgeLabelCoords(g);\n  });\n  time('    undoCoordinateSystem', function () {\n    coordinateSystem.undo(g);\n  });\n  time('    translateGraph', function () {\n    translateGraph(g);\n  });\n  time('    assignNodeIntersects', function () {\n    assignNodeIntersects(g);\n  });\n  time('    reversePoints', function () {\n    reversePointsForReversedEdges(g);\n  });\n  time('    acyclic.undo', function () {\n    acyclic.undo(g);\n  });\n}\n\n/*\n * Copies final layout information from the layout graph back to the input\n * graph. This process only copies whitelisted attributes from the layout graph\n * to the input graph, so it serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction updateInputGraph(inputGraph, layoutGraph) {\n  _.forEach(inputGraph.nodes(), function (v) {\n    var inputLabel = inputGraph.node(v);\n    var layoutLabel = layoutGraph.node(v);\n\n    if (inputLabel) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n\n      if (layoutGraph.children(v).length) {\n        inputLabel.width = layoutLabel.width;\n        inputLabel.height = layoutLabel.height;\n      }\n    }\n  });\n\n  _.forEach(inputGraph.edges(), function (e) {\n    var inputLabel = inputGraph.edge(e);\n    var layoutLabel = layoutGraph.edge(e);\n\n    inputLabel.points = layoutLabel.points;\n    if (_.has(layoutLabel, 'x')) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n    }\n  });\n\n  inputGraph.graph().width = layoutGraph.graph().width;\n  inputGraph.graph().height = layoutGraph.graph().height;\n}\n\nvar graphNumAttrs = ['nodesep', 'edgesep', 'ranksep', 'marginx', 'marginy'];\nvar graphDefaults = { ranksep: 50, edgesep: 20, nodesep: 50, rankdir: 'tb' };\nvar graphAttrs = ['acyclicer', 'ranker', 'rankdir', 'align'];\nvar nodeNumAttrs = ['width', 'height'];\nvar nodeDefaults = { width: 0, height: 0 };\nvar edgeNumAttrs = ['minlen', 'weight', 'width', 'height', 'labeloffset'];\nvar edgeDefaults = {\n  minlen: 1,\n  weight: 1,\n  width: 0,\n  height: 0,\n  labeloffset: 10,\n  labelpos: 'r',\n};\nvar edgeAttrs = ['labelpos'];\n\n/*\n * Constructs a new graph from the input graph, which can be used for layout.\n * This process copies only whitelisted attributes from the input graph to the\n * layout graph. Thus this function serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction buildLayoutGraph(inputGraph) {\n  var g = new Graph({ multigraph: true, compound: true });\n  var graph = canonicalize(inputGraph.graph());\n\n  g.setGraph(\n    _.merge({}, graphDefaults, selectNumberAttrs(graph, graphNumAttrs), _.pick(graph, graphAttrs))\n  );\n\n  _.forEach(inputGraph.nodes(), function (v) {\n    var node = canonicalize(inputGraph.node(v));\n    g.setNode(v, _.defaults(selectNumberAttrs(node, nodeNumAttrs), nodeDefaults));\n    g.setParent(v, inputGraph.parent(v));\n  });\n\n  _.forEach(inputGraph.edges(), function (e) {\n    var edge = canonicalize(inputGraph.edge(e));\n    g.setEdge(\n      e,\n      _.merge({}, edgeDefaults, selectNumberAttrs(edge, edgeNumAttrs), _.pick(edge, edgeAttrs))\n    );\n  });\n\n  return g;\n}\n\n/*\n * This idea comes from the Gansner paper: to account for edge labels in our\n * layout we split each rank in half by doubling minlen and halving ranksep.\n * Then we can place labels at these mid-points between nodes.\n *\n * We also add some minimal padding to the width to push the label for the edge\n * away from the edge itself a bit.\n */\nfunction makeSpaceForEdgeLabels(g) {\n  var graph = g.graph();\n  graph.ranksep /= 2;\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    edge.minlen *= 2;\n    if (edge.labelpos.toLowerCase() !== 'c') {\n      if (graph.rankdir === 'TB' || graph.rankdir === 'BT') {\n        edge.width += edge.labeloffset;\n      } else {\n        edge.height += edge.labeloffset;\n      }\n    }\n  });\n}\n\n/*\n * Creates temporary dummy nodes that capture the rank in which each edge's\n * label is going to, if it has one of non-zero width and height. We do this\n * so that we can safely remove empty ranks while preserving balance for the\n * label's position.\n */\nfunction injectEdgeLabelProxies(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.width && edge.height) {\n      var v = g.node(e.v);\n      var w = g.node(e.w);\n      var label = { rank: (w.rank - v.rank) / 2 + v.rank, e: e };\n      util.addDummyNode(g, 'edge-proxy', label, '_ep');\n    }\n  });\n}\n\nfunction assignRankMinMax(g) {\n  var maxRank = 0;\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.borderTop) {\n      node.minRank = g.node(node.borderTop).rank;\n      node.maxRank = g.node(node.borderBottom).rank;\n      // @ts-expect-error\n      maxRank = _.max(maxRank, node.maxRank);\n    }\n  });\n  g.graph().maxRank = maxRank;\n}\n\nfunction removeEdgeLabelProxies(g) {\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.dummy === 'edge-proxy') {\n      g.edge(node.e).labelRank = node.rank;\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction translateGraph(g) {\n  var minX = Number.POSITIVE_INFINITY;\n  var maxX = 0;\n  var minY = Number.POSITIVE_INFINITY;\n  var maxY = 0;\n  var graphLabel = g.graph();\n  var marginX = graphLabel.marginx || 0;\n  var marginY = graphLabel.marginy || 0;\n\n  function getExtremes(attrs) {\n    var x = attrs.x;\n    var y = attrs.y;\n    var w = attrs.width;\n    var h = attrs.height;\n    minX = Math.min(minX, x - w / 2);\n    maxX = Math.max(maxX, x + w / 2);\n    minY = Math.min(minY, y - h / 2);\n    maxY = Math.max(maxY, y + h / 2);\n  }\n\n  _.forEach(g.nodes(), function (v) {\n    getExtremes(g.node(v));\n  });\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (_.has(edge, 'x')) {\n      getExtremes(edge);\n    }\n  });\n\n  minX -= marginX;\n  minY -= marginY;\n\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    node.x -= minX;\n    node.y -= minY;\n  });\n\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, function (p) {\n      p.x -= minX;\n      p.y -= minY;\n    });\n    if (_.has(edge, 'x')) {\n      edge.x -= minX;\n    }\n    if (_.has(edge, 'y')) {\n      edge.y -= minY;\n    }\n  });\n\n  graphLabel.width = maxX - minX + marginX;\n  graphLabel.height = maxY - minY + marginY;\n}\n\nfunction assignNodeIntersects(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    var nodeV = g.node(e.v);\n    var nodeW = g.node(e.w);\n    var p1, p2;\n    if (!edge.points) {\n      edge.points = [];\n      p1 = nodeW;\n      p2 = nodeV;\n    } else {\n      p1 = edge.points[0];\n      p2 = edge.points[edge.points.length - 1];\n    }\n    edge.points.unshift(util.intersectRect(nodeV, p1));\n    edge.points.push(util.intersectRect(nodeW, p2));\n  });\n}\n\nfunction fixupEdgeLabelCoords(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (_.has(edge, 'x')) {\n      if (edge.labelpos === 'l' || edge.labelpos === 'r') {\n        edge.width -= edge.labeloffset;\n      }\n      switch (edge.labelpos) {\n        case 'l':\n          edge.x -= edge.width / 2 + edge.labeloffset;\n          break;\n        case 'r':\n          edge.x += edge.width / 2 + edge.labeloffset;\n          break;\n      }\n    }\n  });\n}\n\nfunction reversePointsForReversedEdges(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.reversed) {\n      edge.points.reverse();\n    }\n  });\n}\n\nfunction removeBorderNodes(g) {\n  _.forEach(g.nodes(), function (v) {\n    if (g.children(v).length) {\n      var node = g.node(v);\n      var t = g.node(node.borderTop);\n      var b = g.node(node.borderBottom);\n      var l = g.node(_.last(node.borderLeft));\n      var r = g.node(_.last(node.borderRight));\n\n      node.width = Math.abs(r.x - l.x);\n      node.height = Math.abs(b.y - t.y);\n      node.x = l.x + node.width / 2;\n      node.y = t.y + node.height / 2;\n    }\n  });\n\n  _.forEach(g.nodes(), function (v) {\n    if (g.node(v).dummy === 'border') {\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction removeSelfEdges(g) {\n  _.forEach(g.edges(), function (e) {\n    if (e.v === e.w) {\n      var node = g.node(e.v);\n      if (!node.selfEdges) {\n        node.selfEdges = [];\n      }\n      node.selfEdges.push({ e: e, label: g.edge(e) });\n      g.removeEdge(e);\n    }\n  });\n}\n\nfunction insertSelfEdges(g) {\n  var layers = util.buildLayerMatrix(g);\n  _.forEach(layers, function (layer) {\n    var orderShift = 0;\n    _.forEach(layer, function (v, i) {\n      var node = g.node(v);\n      node.order = i + orderShift;\n      _.forEach(node.selfEdges, function (selfEdge) {\n        util.addDummyNode(\n          g,\n          'selfedge',\n          {\n            width: selfEdge.label.width,\n            height: selfEdge.label.height,\n            rank: node.rank,\n            order: i + ++orderShift,\n            e: selfEdge.e,\n            label: selfEdge.label,\n          },\n          '_se'\n        );\n      });\n      delete node.selfEdges;\n    });\n  });\n}\n\nfunction positionSelfEdges(g) {\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.dummy === 'selfedge') {\n      var selfNode = g.node(node.e.v);\n      var x = selfNode.x + selfNode.width / 2;\n      var y = selfNode.y;\n      var dx = node.x - x;\n      var dy = selfNode.height / 2;\n      g.setEdge(node.e, node.label);\n      g.removeNode(v);\n      node.label.points = [\n        { x: x + (2 * dx) / 3, y: y - dy },\n        { x: x + (5 * dx) / 6, y: y - dy },\n        { x: x + dx, y: y },\n        { x: x + (5 * dx) / 6, y: y + dy },\n        { x: x + (2 * dx) / 3, y: y + dy },\n      ];\n      node.label.x = node.x;\n      node.label.y = node.y;\n    }\n  });\n}\n\nfunction selectNumberAttrs(obj, attrs) {\n  return _.mapValues(_.pick(obj, attrs), Number);\n}\n\nfunction canonicalize(attrs) {\n  var newAttrs = {};\n  _.forEach(attrs, function (v, k) {\n    newAttrs[k.toLowerCase()] = v;\n  });\n  return newAttrs;\n}\n"],"names":["reWhitespace","trimmedEndIndex","string","index","reTrimStart","baseTrim","NAN","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","toNumber","value","isSymbol","isObject","other","isBinary","INFINITY","MAX_INTEGER","toFinite","sign","toInteger","result","remainder","flatten","array","length","baseFlatten","flatRest","func","setToString","overRest","CLONE_DEEP_FLAG","CLONE_SYMBOLS_FLAG","cloneDeep","baseClone","objectProto","hasOwnProperty","defaults","baseRest","object","sources","guard","isIterateeCall","source","props","keysIn","propsIndex","propsLength","key","eq","last","createFind","findIndexFunc","collection","predicate","fromIndex","iterable","isArrayLike","iteratee","baseIteratee","keys","nativeMax","findIndex","baseFindIndex","find","baseMap","baseEach","map","isArray","arrayMap","forIn","baseFor","castFunction","forOwn","baseForOwn","baseGt","baseLt","mapValues","baseAssignValue","baseExtremum","comparator","current","computed","max","identity","min","minBy","baseSet","path","customizer","castPath","lastIndex","nested","toKey","newValue","objValue","isIndex","assignValue","basePickBy","paths","baseGet","baseSortBy","comparer","compareAscending","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","compareMultiple","orders","objCriteria","othCriteria","ordersLength","order","baseOrderBy","iteratees","baseUnary","criteria","basePick","hasIn","pick","nativeCeil","baseRange","start","end","step","fromRight","createRange","range","sortBy","idCounter","uniqueId","prefix","id","toString","baseZipObject","values","assignFunc","valsLength","zipObject","List","sentinel","entry","unlink","strs","curr","filterOutLinks","k","v","DEFAULT_WEIGHT_FN","_.constant","greedyFAS","g","weightFn","state","buildState","results","doGreedyFAS","_.flatten","_.map","e","buckets","zeroIdx","sinks","removeNode","i","collectPredecessors","_.forEach","edge","weight","uEntry","assignBucket","w","wEntry","fasGraph","Graph","maxIn","maxOut","prevWeight","edgeWeight","_.range","run","fas","dfsFAS","label","_.uniqueId","stack","visited","dfs","_.has","undo","forwardName","addDummyNode","type","attrs","name","simplify","simplified","simpleLabel","asNonCompoundGraph","intersectRect","rect","point","x","y","dx","dy","h","sx","sy","buildLayerMatrix","layering","maxRank","node","rank","_.isUndefined","normalizeRanks","_.min","removeEmptyRanks","offset","layers","delta","nodeRankFactor","vs","addBorderNode","_.max","partition","fn","notime","addBorderSegments","children","prop","sg","sgNode","prev","util.addDummyNode","adjust","rankDir","swapWidthHeight","reverseY","swapXY","swapWidthHeightOne","reverseYOne","swapXYOne","normalizeEdge","vRank","wRank","edgeLabel","labelRank","dummy","origLabel","longestPath","slack","feasibleTree","t","size","tightTree","findMinSlackEdge","shiftRanks","edgeV","_.minBy","CycleException","_.isArray","navigation","acc","_.each","doDfs","postorder","preorder","networkSimplex","initLowLimValues","initCutValues","calcCutValue","leaveEdge","enterEdge","exchangeEdges","f","alg.postorder","assignCutValue","child","childLab","parent","childIsTail","graphEdge","cutValue","isOutEdge","pointsToHead","otherWeight","isTreeEdge","otherCutValue","tree","root","dfsAssignLowLim","nextLim","low","_.find","vLabel","wLabel","tailLabel","flip","candidates","_.filter","isDescendant","updateRanks","alg.preorder","flipped","u","rootLabel","networkSimplexRanker","tightTreeRanker","longestPathRanker","depths","treeDepths","height","_.values","nodeSep","sumWeights","top","util.addBorderNode","bottom","childNode","childTop","childBottom","thisWeight","minlen","depth","_.reduce","cleanup","graphLabel","addSubgraphConstraints","cg","rootPrev","prevChild","buildLayerGraph","relationship","createRootNode","crossCount","cc","twoLayerCrossCount","northLayer","southLayer","southPos","_.zipObject","southEntries","_.sortBy","firstIndex","treeSize","weightSum","initOrder","simpleNodes","orderedVs","barycenter","movable","inV","nodeU","resolveConflicts","entries","mappedEntries","tmp","entryV","entryW","sourceSet","doResolveConflicts","handleIn","vEntry","mergeEntries","handleOut","_.pick","target","sum","sort","biasRight","parts","util.partition","sortable","unsortable","vsIndex","compareWithBias","consumeUnsortable","_.last","bias","sortSubgraph","bl","br","subgraphs","barycenters","subgraphResult","mergeBarycenters","expandSubgraphs","blPred","brPred","util.maxRank","downLayerGraphs","buildLayerGraphs","upLayerGraphs","assignOrder","bestCC","best","lastBest","sweepLayerGraphs","util.buildLayerMatrix","_.cloneDeep","ranks","layerGraphs","lg","sorted","layer","parentDummyChains","postorderNums","edgeObj","pathData","findPath","lca","pathIdx","pathV","ascending","vPath","wPath","lim","findType1Conflicts","conflicts","visitLayer","prevLayer","k0","scanPos","prevLayerLength","lastNode","findOtherInnerSegmentNode","k1","scanNode","uLabel","uPos","addConflict","findType2Conflicts","scan","south","southEnd","prevNorthBorder","nextNorthBorder","uNode","north","prevNorthPos","nextNorthPos","southLookahead","predecessors","conflictsV","hasConflict","verticalAlignment","neighborFn","align","pos","prevIdx","ws","mp","il","horizontalCompaction","reverseSep","xs","blockG","buildBlockGraph","borderType","iterate","setXsFunc","nextNodesFunc","elem","pass1","pass2","blockGraph","sepFn","sep","vRoot","uRoot","prevMax","findSmallestWidthAlignment","xss","_.forIn","halfWidth","width","alignCoordinates","alignTo","alignToVals","alignToMin","alignToMax","vert","horiz","alignment","xsVals","_.mapValues","balance","ignore","positionX","_.merge","adjustedLayering","inner","smallestWidth","edgeSep","position","util.asNonCompoundGraph","positionY","_.forOwn","rankSep","prevY","maxHeight","layout","opts","time","util.notime","layoutGraph","buildLayoutGraph","runLayout","updateInputGraph","makeSpaceForEdgeLabels","removeSelfEdges","acyclic.run","nestingGraph.run","injectEdgeLabelProxies","util.removeEmptyRanks","nestingGraph.cleanup","util.normalizeRanks","assignRankMinMax","removeEdgeLabelProxies","normalize.run","insertSelfEdges","coordinateSystem.adjust","positionSelfEdges","removeBorderNodes","normalize.undo","fixupEdgeLabelCoords","coordinateSystem.undo","translateGraph","assignNodeIntersects","reversePointsForReversedEdges","acyclic.undo","inputGraph","inputLabel","layoutLabel","graphNumAttrs","graphDefaults","graphAttrs","nodeNumAttrs","nodeDefaults","edgeNumAttrs","edgeDefaults","edgeAttrs","graph","canonicalize","selectNumberAttrs","_.defaults","minX","maxX","minY","maxY","marginX","marginY","getExtremes","p","nodeV","nodeW","p1","p2","util.intersectRect","b","l","r","orderShift","selfEdge","selfNode","obj","newAttrs"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67]}