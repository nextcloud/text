{"version":3,"file":"wren-C-W4j1VX.chunk.mjs","sources":["../node_modules/highlight.js/lib/languages/wren.js"],"sourcesContent":["/*\nLanguage: Wren\nDescription: Think Smalltalk in a Lua-sized package with a dash of Erlang and wrapped up in a familiar, modern syntax.\nCategory: scripting\nAuthor: @joshgoebel\nMaintainer: @joshgoebel\nWebsite: https://wren.io/\n*/\n\n/** @type LanguageFn */\nfunction wren(hljs) {\n  const regex = hljs.regex;\n  const IDENT_RE = /[a-zA-Z]\\w*/;\n  const KEYWORDS = [\n    \"as\",\n    \"break\",\n    \"class\",\n    \"construct\",\n    \"continue\",\n    \"else\",\n    \"for\",\n    \"foreign\",\n    \"if\",\n    \"import\",\n    \"in\",\n    \"is\",\n    \"return\",\n    \"static\",\n    \"var\",\n    \"while\"\n  ];\n  const LITERALS = [\n    \"true\",\n    \"false\",\n    \"null\"\n  ];\n  const LANGUAGE_VARS = [\n    \"this\",\n    \"super\"\n  ];\n  const CORE_CLASSES = [\n    \"Bool\",\n    \"Class\",\n    \"Fiber\",\n    \"Fn\",\n    \"List\",\n    \"Map\",\n    \"Null\",\n    \"Num\",\n    \"Object\",\n    \"Range\",\n    \"Sequence\",\n    \"String\",\n    \"System\"\n  ];\n  const OPERATORS = [\n    \"-\",\n    \"~\",\n    /\\*/,\n    \"%\",\n    /\\.\\.\\./,\n    /\\.\\./,\n    /\\+/,\n    \"<<\",\n    \">>\",\n    \">=\",\n    \"<=\",\n    \"<\",\n    \">\",\n    /\\^/,\n    /!=/,\n    /!/,\n    /\\bis\\b/,\n    \"==\",\n    \"&&\",\n    \"&\",\n    /\\|\\|/,\n    /\\|/,\n    /\\?:/,\n    \"=\"\n  ];\n  const FUNCTION = {\n    relevance: 0,\n    match: regex.concat(/\\b(?!(if|while|for|else|super)\\b)/, IDENT_RE, /(?=\\s*[({])/),\n    className: \"title.function\"\n  };\n  const FUNCTION_DEFINITION = {\n    match: regex.concat(\n      regex.either(\n        regex.concat(/\\b(?!(if|while|for|else|super)\\b)/, IDENT_RE),\n        regex.either(...OPERATORS)\n      ),\n      /(?=\\s*\\([^)]+\\)\\s*\\{)/),\n    className: \"title.function\",\n    starts: { contains: [\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        contains: [\n          {\n            relevance: 0,\n            scope: \"params\",\n            match: IDENT_RE\n          }\n        ]\n      }\n    ] }\n  };\n  const CLASS_DEFINITION = {\n    variants: [\n      { match: [\n        /class\\s+/,\n        IDENT_RE,\n        /\\s+is\\s+/,\n        IDENT_RE\n      ] },\n      { match: [\n        /class\\s+/,\n        IDENT_RE\n      ] }\n    ],\n    scope: {\n      2: \"title.class\",\n      4: \"title.class.inherited\"\n    },\n    keywords: KEYWORDS\n  };\n\n  const OPERATOR = {\n    relevance: 0,\n    match: regex.either(...OPERATORS),\n    className: \"operator\"\n  };\n\n  const TRIPLE_STRING = {\n    className: \"string\",\n    begin: /\"\"\"/,\n    end: /\"\"\"/\n  };\n\n  const PROPERTY = {\n    className: \"property\",\n    begin: regex.concat(/\\./, regex.lookahead(IDENT_RE)),\n    end: IDENT_RE,\n    excludeBegin: true,\n    relevance: 0\n  };\n\n  const FIELD = {\n    relevance: 0,\n    match: regex.concat(/\\b_/, IDENT_RE),\n    scope: \"variable\"\n  };\n\n  // CamelCase\n  const CLASS_REFERENCE = {\n    relevance: 0,\n    match: /\\b[A-Z]+[a-z]+([A-Z]+[a-z]+)*/,\n    scope: \"title.class\",\n    keywords: { _: CORE_CLASSES }\n  };\n\n  // TODO: add custom number modes\n  const NUMBER = hljs.C_NUMBER_MODE;\n\n  const SETTER = {\n    match: [\n      IDENT_RE,\n      /\\s*/,\n      /=/,\n      /\\s*/,\n      /\\(/,\n      IDENT_RE,\n      /\\)\\s*\\{/\n    ],\n    scope: {\n      1: \"title.function\",\n      3: \"operator\",\n      6: \"params\"\n    }\n  };\n\n  const COMMENT_DOCS = hljs.COMMENT(\n    /\\/\\*\\*/,\n    /\\*\\//,\n    { contains: [\n      {\n        match: /@[a-z]+/,\n        scope: \"doctag\"\n      },\n      \"self\"\n    ] }\n  );\n  const SUBST = {\n    scope: \"subst\",\n    begin: /%\\(/,\n    end: /\\)/,\n    contains: [\n      NUMBER,\n      CLASS_REFERENCE,\n      FUNCTION,\n      FIELD,\n      OPERATOR\n    ]\n  };\n  const STRING = {\n    scope: \"string\",\n    begin: /\"/,\n    end: /\"/,\n    contains: [\n      SUBST,\n      {\n        scope: \"char.escape\",\n        variants: [\n          { match: /\\\\\\\\|\\\\[\"0%abefnrtv]/ },\n          { match: /\\\\x[0-9A-F]{2}/ },\n          { match: /\\\\u[0-9A-F]{4}/ },\n          { match: /\\\\U[0-9A-F]{8}/ }\n        ]\n      }\n    ]\n  };\n  SUBST.contains.push(STRING);\n\n  const ALL_KWS = [\n    ...KEYWORDS,\n    ...LANGUAGE_VARS,\n    ...LITERALS\n  ];\n  const VARIABLE = {\n    relevance: 0,\n    match: regex.concat(\n      \"\\\\b(?!\",\n      ALL_KWS.join(\"|\"),\n      \"\\\\b)\",\n      /[a-zA-Z_]\\w*(?:[?!]|\\b)/\n    ),\n    className: \"variable\"\n  };\n\n  // TODO: reconsider this in the future\n  const ATTRIBUTE = {\n    // scope: \"meta\",\n    scope: \"comment\",\n    variants: [\n      {\n        begin: [\n          /#!?/,\n          /[A-Za-z_]+(?=\\()/\n        ],\n        beginScope: {\n          // 2: \"attr\"\n        },\n        keywords: { literal: LITERALS },\n        contains: [\n          // NUMBER,\n          // VARIABLE\n        ],\n        end: /\\)/\n      },\n      {\n        begin: [\n          /#!?/,\n          /[A-Za-z_]+/\n        ],\n        beginScope: {\n          // 2: \"attr\"\n        },\n        end: /$/\n      }\n    ]\n  };\n\n  return {\n    name: \"Wren\",\n    keywords: {\n      keyword: KEYWORDS,\n      \"variable.language\": LANGUAGE_VARS,\n      literal: LITERALS\n    },\n    contains: [\n      ATTRIBUTE,\n      NUMBER,\n      STRING,\n      TRIPLE_STRING,\n      COMMENT_DOCS,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      CLASS_REFERENCE,\n      CLASS_DEFINITION,\n      SETTER,\n      FUNCTION_DEFINITION,\n      FUNCTION,\n      OPERATOR,\n      FIELD,\n      PROPERTY,\n      VARIABLE\n    ]\n  };\n}\n\nmodule.exports = wren;\n"],"names":["wren","hljs","regex","IDENT_RE","KEYWORDS","LITERALS","LANGUAGE_VARS","CORE_CLASSES","OPERATORS","FUNCTION","FUNCTION_DEFINITION","CLASS_DEFINITION","OPERATOR","TRIPLE_STRING","PROPERTY","FIELD","CLASS_REFERENCE","NUMBER","SETTER","COMMENT_DOCS","SUBST","STRING","ALL_KWS","VARIABLE","wren_1"],"mappings":"4YAUA,SAASA,EAAKC,EAAM,CAClB,MAAMC,EAAQD,EAAK,MACbE,EAAW,cACXC,EAAW,CACf,KACA,QACA,QACA,YACA,WACA,OACA,MACA,UACA,KACA,SACA,KACA,KACA,SACA,SACA,MACA,OACJ,EACQC,EAAW,CACf,OACA,QACA,MACJ,EACQC,EAAgB,CACpB,OACA,OACJ,EACQC,EAAe,CACnB,OACA,QACA,QACA,KACA,OACA,MACA,OACA,MACA,SACA,QACA,WACA,SACA,QACJ,EACQC,EAAY,CAChB,IACA,IACA,KACA,IACA,SACA,OACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,KACA,KACA,IACA,SACA,KACA,KACA,IACA,OACA,KACA,MACA,GACJ,EACQC,EAAW,CACf,UAAW,EACX,MAAOP,EAAM,OAAO,oCAAqCC,EAAU,aAAa,EAChF,UAAW,gBACf,EACQO,EAAsB,CAC1B,MAAOR,EAAM,OACXA,EAAM,OACJA,EAAM,OAAO,oCAAqCC,CAAQ,EAC1DD,EAAM,OAAO,GAAGM,CAAS,CAC1B,EACD,uBAAuB,EACzB,UAAW,iBACX,OAAQ,CAAE,SAAU,CAClB,CACE,MAAO,KACP,IAAK,KACL,SAAU,CACR,CACE,UAAW,EACX,MAAO,SACP,MAAOL,CACR,CACF,CACF,CACP,CAAO,CACP,EACQQ,EAAmB,CACvB,SAAU,CACR,CAAE,MAAO,CACP,WACAR,EACA,WACAA,CACR,CAAS,EACH,CAAE,MAAO,CACP,WACAA,CACR,CAAS,CACJ,EACD,MAAO,CACL,EAAG,cACH,EAAG,uBACJ,EACD,SAAUC,CACd,EAEQQ,EAAW,CACf,UAAW,EACX,MAAOV,EAAM,OAAO,GAAGM,CAAS,EAChC,UAAW,UACf,EAEQK,EAAgB,CACpB,UAAW,SACX,MAAO,MACP,IAAK,KACT,EAEQC,EAAW,CACf,UAAW,WACX,MAAOZ,EAAM,OAAO,KAAMA,EAAM,UAAUC,CAAQ,CAAC,EACnD,IAAKA,EACL,aAAc,GACd,UAAW,CACf,EAEQY,EAAQ,CACZ,UAAW,EACX,MAAOb,EAAM,OAAO,MAAOC,CAAQ,EACnC,MAAO,UACX,EAGQa,EAAkB,CACtB,UAAW,EACX,MAAO,gCACP,MAAO,cACP,SAAU,CAAE,EAAGT,CAAc,CACjC,EAGQU,EAAShB,EAAK,cAEdiB,EAAS,CACb,MAAO,CACLf,EACA,MACA,IACA,MACA,KACAA,EACA,SACD,EACD,MAAO,CACL,EAAG,iBACH,EAAG,WACH,EAAG,QACJ,CACL,EAEQgB,EAAelB,EAAK,QACxB,SACA,OACA,CAAE,SAAU,CACV,CACE,MAAO,UACP,MAAO,QACR,EACD,MACN,CAAO,CACP,EACQmB,EAAQ,CACZ,MAAO,QACP,MAAO,MACP,IAAK,KACL,SAAU,CACRH,EACAD,EACAP,EACAM,EACAH,CACD,CACL,EACQS,EAAS,CACb,MAAO,SACP,MAAO,IACP,IAAK,IACL,SAAU,CACRD,EACA,CACE,MAAO,cACP,SAAU,CACR,CAAE,MAAO,sBAAwB,EACjC,CAAE,MAAO,gBAAkB,EAC3B,CAAE,MAAO,gBAAkB,EAC3B,CAAE,MAAO,gBAAkB,CAC5B,CACF,CACF,CACL,EACEA,EAAM,SAAS,KAAKC,CAAM,EAE1B,MAAMC,EAAU,CACd,GAAGlB,EACH,GAAGE,EACH,GAAGD,CACP,EACQkB,EAAW,CACf,UAAW,EACX,MAAOrB,EAAM,OACX,SACAoB,EAAQ,KAAK,GAAG,EAChB,OACA,yBACD,EACD,UAAW,UACf,EAmCE,MAAO,CACL,KAAM,OACN,SAAU,CACR,QAASlB,EACT,oBAAqBE,EACrB,QAASD,CACV,EACD,SAAU,CAvCM,CAEhB,MAAO,UACP,SAAU,CACR,CACE,MAAO,CACL,MACA,kBACD,EACD,WAAY,CAEX,EACD,SAAU,CAAE,QAASA,CAAU,EAC/B,SAAU,CAGT,EACD,IAAK,IACN,EACD,CACE,MAAO,CACL,MACA,YACD,EACD,WAAY,CAEX,EACD,IAAK,GACN,CACF,CACL,EAWMY,EACAI,EACAR,EACAM,EACAlB,EAAK,oBACLA,EAAK,qBACLe,EACAL,EACAO,EACAR,EACAD,EACAG,EACAG,EACAD,EACAS,CACD,CACL,CACA,CAEA,IAAAC,EAAiBxB","x_google_ignoreList":[0]}