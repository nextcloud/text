{"version":3,"file":"index-3862675e-tbT_gb_H.chunk.mjs","sources":["../node_modules/dagre-d3-es/src/graphlib/json.js","../node_modules/mermaid/dist/index-3862675e.js"],"sourcesContent":["import * as _ from 'lodash-es';\nimport { Graph } from './graph.js';\n\nexport { write, read };\n\nfunction write(g) {\n  var json = {\n    options: {\n      directed: g.isDirected(),\n      multigraph: g.isMultigraph(),\n      compound: g.isCompound(),\n    },\n    nodes: writeNodes(g),\n    edges: writeEdges(g),\n  };\n  if (!_.isUndefined(g.graph())) {\n    json.value = _.clone(g.graph());\n  }\n  return json;\n}\n\nfunction writeNodes(g) {\n  return _.map(g.nodes(), function (v) {\n    var nodeValue = g.node(v);\n    var parent = g.parent(v);\n    var node = { v: v };\n    if (!_.isUndefined(nodeValue)) {\n      node.value = nodeValue;\n    }\n    if (!_.isUndefined(parent)) {\n      node.parent = parent;\n    }\n    return node;\n  });\n}\n\nfunction writeEdges(g) {\n  return _.map(g.edges(), function (e) {\n    var edgeValue = g.edge(e);\n    var edge = { v: e.v, w: e.w };\n    if (!_.isUndefined(e.name)) {\n      edge.name = e.name;\n    }\n    if (!_.isUndefined(edgeValue)) {\n      edge.value = edgeValue;\n    }\n    return edge;\n  });\n}\n\nfunction read(json) {\n  var g = new Graph(json.options).setGraph(json.value);\n  _.each(json.nodes, function (entry) {\n    g.setNode(entry.v, entry.value);\n    if (entry.parent) {\n      g.setParent(entry.v, entry.parent);\n    }\n  });\n  _.each(json.edges, function (entry) {\n    g.setEdge({ v: entry.v, w: entry.w, name: entry.name }, entry.value);\n  });\n  return g;\n}\n","import { layout } from \"dagre-d3-es/src/dagre/index.js\";\nimport * as graphlibJson from \"dagre-d3-es/src/graphlib/json.js\";\nimport { c as createLabel, g as getSubGraphTitleMargins, i as intersectRect, a as insertMarkers, b as clear$2, d as clear$3, u as updateNodeBounds, s as setNodeElem, e as insertNode, f as insertEdgeLabel, p as positionNode, h as insertEdge, j as positionEdgeLabel } from \"./edges-e0da2a9e.js\";\nimport { l as log, c as getConfig, m as evaluate } from \"./mermaid-b5860b54.js\";\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\nimport { a as createText } from \"./createText-2e5e7dd3.js\";\nimport { select } from \"d3\";\nlet clusterDb = {};\nlet descendants = {};\nlet parents = {};\nconst clear$1 = () => {\n  descendants = {};\n  parents = {};\n  clusterDb = {};\n};\nconst isDescendant = (id, ancestorId) => {\n  log.trace(\"In isDescendant\", ancestorId, \" \", id, \" = \", descendants[ancestorId].includes(id));\n  if (descendants[ancestorId].includes(id)) {\n    return true;\n  }\n  return false;\n};\nconst edgeInCluster = (edge, clusterId) => {\n  log.info(\"Descendants of \", clusterId, \" is \", descendants[clusterId]);\n  log.info(\"Edge is \", edge);\n  if (edge.v === clusterId) {\n    return false;\n  }\n  if (edge.w === clusterId) {\n    return false;\n  }\n  if (!descendants[clusterId]) {\n    log.debug(\"Tilt, \", clusterId, \",not in descendants\");\n    return false;\n  }\n  return descendants[clusterId].includes(edge.v) || isDescendant(edge.v, clusterId) || isDescendant(edge.w, clusterId) || descendants[clusterId].includes(edge.w);\n};\nconst copy = (clusterId, graph, newGraph, rootId) => {\n  log.warn(\n    \"Copying children of \",\n    clusterId,\n    \"root\",\n    rootId,\n    \"data\",\n    graph.node(clusterId),\n    rootId\n  );\n  const nodes = graph.children(clusterId) || [];\n  if (clusterId !== rootId) {\n    nodes.push(clusterId);\n  }\n  log.warn(\"Copying (nodes) clusterId\", clusterId, \"nodes\", nodes);\n  nodes.forEach((node) => {\n    if (graph.children(node).length > 0) {\n      copy(node, graph, newGraph, rootId);\n    } else {\n      const data = graph.node(node);\n      log.info(\"cp \", node, \" to \", rootId, \" with parent \", clusterId);\n      newGraph.setNode(node, data);\n      if (rootId !== graph.parent(node)) {\n        log.warn(\"Setting parent\", node, graph.parent(node));\n        newGraph.setParent(node, graph.parent(node));\n      }\n      if (clusterId !== rootId && node !== clusterId) {\n        log.debug(\"Setting parent\", node, clusterId);\n        newGraph.setParent(node, clusterId);\n      } else {\n        log.info(\"In copy \", clusterId, \"root\", rootId, \"data\", graph.node(clusterId), rootId);\n        log.debug(\n          \"Not Setting parent for node=\",\n          node,\n          \"cluster!==rootId\",\n          clusterId !== rootId,\n          \"node!==clusterId\",\n          node !== clusterId\n        );\n      }\n      const edges = graph.edges(node);\n      log.debug(\"Copying Edges\", edges);\n      edges.forEach((edge) => {\n        log.info(\"Edge\", edge);\n        const data2 = graph.edge(edge.v, edge.w, edge.name);\n        log.info(\"Edge data\", data2, rootId);\n        try {\n          if (edgeInCluster(edge, rootId)) {\n            log.info(\"Copying as \", edge.v, edge.w, data2, edge.name);\n            newGraph.setEdge(edge.v, edge.w, data2, edge.name);\n            log.info(\"newGraph edges \", newGraph.edges(), newGraph.edge(newGraph.edges()[0]));\n          } else {\n            log.info(\n              \"Skipping copy of edge \",\n              edge.v,\n              \"-->\",\n              edge.w,\n              \" rootId: \",\n              rootId,\n              \" clusterId:\",\n              clusterId\n            );\n          }\n        } catch (e) {\n          log.error(e);\n        }\n      });\n    }\n    log.debug(\"Removing node\", node);\n    graph.removeNode(node);\n  });\n};\nconst extractDescendants = (id, graph) => {\n  const children = graph.children(id);\n  let res = [...children];\n  for (const child of children) {\n    parents[child] = id;\n    res = [...res, ...extractDescendants(child, graph)];\n  }\n  return res;\n};\nconst findNonClusterChild = (id, graph) => {\n  log.trace(\"Searching\", id);\n  const children = graph.children(id);\n  log.trace(\"Searching children of id \", id, children);\n  if (children.length < 1) {\n    log.trace(\"This is a valid node\", id);\n    return id;\n  }\n  for (const child of children) {\n    const _id = findNonClusterChild(child, graph);\n    if (_id) {\n      log.trace(\"Found replacement for\", id, \" => \", _id);\n      return _id;\n    }\n  }\n};\nconst getAnchorId = (id) => {\n  if (!clusterDb[id]) {\n    return id;\n  }\n  if (!clusterDb[id].externalConnections) {\n    return id;\n  }\n  if (clusterDb[id]) {\n    return clusterDb[id].id;\n  }\n  return id;\n};\nconst adjustClustersAndEdges = (graph, depth) => {\n  if (!graph || depth > 10) {\n    log.debug(\"Opting out, no graph \");\n    return;\n  } else {\n    log.debug(\"Opting in, graph \");\n  }\n  graph.nodes().forEach(function(id) {\n    const children = graph.children(id);\n    if (children.length > 0) {\n      log.warn(\n        \"Cluster identified\",\n        id,\n        \" Replacement id in edges: \",\n        findNonClusterChild(id, graph)\n      );\n      descendants[id] = extractDescendants(id, graph);\n      clusterDb[id] = { id: findNonClusterChild(id, graph), clusterData: graph.node(id) };\n    }\n  });\n  graph.nodes().forEach(function(id) {\n    const children = graph.children(id);\n    const edges = graph.edges();\n    if (children.length > 0) {\n      log.debug(\"Cluster identified\", id, descendants);\n      edges.forEach((edge) => {\n        if (edge.v !== id && edge.w !== id) {\n          const d1 = isDescendant(edge.v, id);\n          const d2 = isDescendant(edge.w, id);\n          if (d1 ^ d2) {\n            log.warn(\"Edge: \", edge, \" leaves cluster \", id);\n            log.warn(\"Descendants of XXX \", id, \": \", descendants[id]);\n            clusterDb[id].externalConnections = true;\n          }\n        }\n      });\n    } else {\n      log.debug(\"Not a cluster \", id, descendants);\n    }\n  });\n  for (let id of Object.keys(clusterDb)) {\n    const nonClusterChild = clusterDb[id].id;\n    const parent = graph.parent(nonClusterChild);\n    if (parent !== id && clusterDb[parent] && !clusterDb[parent].externalConnections) {\n      clusterDb[id].id = parent;\n    }\n  }\n  graph.edges().forEach(function(e) {\n    const edge = graph.edge(e);\n    log.warn(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(e));\n    log.warn(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(graph.edge(e)));\n    let v = e.v;\n    let w = e.w;\n    log.warn(\n      \"Fix XXX\",\n      clusterDb,\n      \"ids:\",\n      e.v,\n      e.w,\n      \"Translating: \",\n      clusterDb[e.v],\n      \" --- \",\n      clusterDb[e.w]\n    );\n    if (clusterDb[e.v] && clusterDb[e.w] && clusterDb[e.v] === clusterDb[e.w]) {\n      log.warn(\"Fixing and trixing link to self - removing XXX\", e.v, e.w, e.name);\n      log.warn(\"Fixing and trixing - removing XXX\", e.v, e.w, e.name);\n      v = getAnchorId(e.v);\n      w = getAnchorId(e.w);\n      graph.removeEdge(e.v, e.w, e.name);\n      const specialId = e.w + \"---\" + e.v;\n      graph.setNode(specialId, {\n        domId: specialId,\n        id: specialId,\n        labelStyle: \"\",\n        labelText: edge.label,\n        padding: 0,\n        shape: \"labelRect\",\n        style: \"\"\n      });\n      const edge1 = structuredClone(edge);\n      const edge2 = structuredClone(edge);\n      edge1.label = \"\";\n      edge1.arrowTypeEnd = \"none\";\n      edge2.label = \"\";\n      edge1.fromCluster = e.v;\n      edge2.toCluster = e.v;\n      graph.setEdge(v, specialId, edge1, e.name + \"-cyclic-special\");\n      graph.setEdge(specialId, w, edge2, e.name + \"-cyclic-special\");\n    } else if (clusterDb[e.v] || clusterDb[e.w]) {\n      log.warn(\"Fixing and trixing - removing XXX\", e.v, e.w, e.name);\n      v = getAnchorId(e.v);\n      w = getAnchorId(e.w);\n      graph.removeEdge(e.v, e.w, e.name);\n      if (v !== e.v) {\n        const parent = graph.parent(v);\n        clusterDb[parent].externalConnections = true;\n        edge.fromCluster = e.v;\n      }\n      if (w !== e.w) {\n        const parent = graph.parent(w);\n        clusterDb[parent].externalConnections = true;\n        edge.toCluster = e.w;\n      }\n      log.warn(\"Fix Replacing with XXX\", v, w, e.name);\n      graph.setEdge(v, w, edge, e.name);\n    }\n  });\n  log.warn(\"Adjusted Graph\", graphlibJson.write(graph));\n  extractor(graph, 0);\n  log.trace(clusterDb);\n};\nconst extractor = (graph, depth) => {\n  log.warn(\"extractor - \", depth, graphlibJson.write(graph), graph.children(\"D\"));\n  if (depth > 10) {\n    log.error(\"Bailing out\");\n    return;\n  }\n  let nodes = graph.nodes();\n  let hasChildren = false;\n  for (const node of nodes) {\n    const children = graph.children(node);\n    hasChildren = hasChildren || children.length > 0;\n  }\n  if (!hasChildren) {\n    log.debug(\"Done, no node has children\", graph.nodes());\n    return;\n  }\n  log.debug(\"Nodes = \", nodes, depth);\n  for (const node of nodes) {\n    log.debug(\n      \"Extracting node\",\n      node,\n      clusterDb,\n      clusterDb[node] && !clusterDb[node].externalConnections,\n      !graph.parent(node),\n      graph.node(node),\n      graph.children(\"D\"),\n      \" Depth \",\n      depth\n    );\n    if (!clusterDb[node]) {\n      log.debug(\"Not a cluster\", node, depth);\n    } else if (!clusterDb[node].externalConnections && // !graph.parent(node) &&\n    graph.children(node) && graph.children(node).length > 0) {\n      log.warn(\n        \"Cluster without external connections, without a parent and with children\",\n        node,\n        depth\n      );\n      const graphSettings = graph.graph();\n      let dir = graphSettings.rankdir === \"TB\" ? \"LR\" : \"TB\";\n      if (clusterDb[node] && clusterDb[node].clusterData && clusterDb[node].clusterData.dir) {\n        dir = clusterDb[node].clusterData.dir;\n        log.warn(\"Fixing dir\", clusterDb[node].clusterData.dir, dir);\n      }\n      const clusterGraph = new graphlib.Graph({\n        multigraph: true,\n        compound: true\n      }).setGraph({\n        rankdir: dir,\n        // Todo: set proper spacing\n        nodesep: 50,\n        ranksep: 50,\n        marginx: 8,\n        marginy: 8\n      }).setDefaultEdgeLabel(function() {\n        return {};\n      });\n      log.warn(\"Old graph before copy\", graphlibJson.write(graph));\n      copy(node, graph, clusterGraph, node);\n      graph.setNode(node, {\n        clusterNode: true,\n        id: node,\n        clusterData: clusterDb[node].clusterData,\n        labelText: clusterDb[node].labelText,\n        graph: clusterGraph\n      });\n      log.warn(\"New graph after copy node: (\", node, \")\", graphlibJson.write(clusterGraph));\n      log.debug(\"Old graph after copy\", graphlibJson.write(graph));\n    } else {\n      log.warn(\n        \"Cluster ** \",\n        node,\n        \" **not meeting the criteria !externalConnections:\",\n        !clusterDb[node].externalConnections,\n        \" no parent: \",\n        !graph.parent(node),\n        \" children \",\n        graph.children(node) && graph.children(node).length > 0,\n        graph.children(\"D\"),\n        depth\n      );\n      log.debug(clusterDb);\n    }\n  }\n  nodes = graph.nodes();\n  log.warn(\"New list of nodes\", nodes);\n  for (const node of nodes) {\n    const data = graph.node(node);\n    log.warn(\" Now next level\", node, data);\n    if (data.clusterNode) {\n      extractor(data.graph, depth + 1);\n    }\n  }\n};\nconst sorter = (graph, nodes) => {\n  if (nodes.length === 0) {\n    return [];\n  }\n  let result = Object.assign(nodes);\n  nodes.forEach((node) => {\n    const children = graph.children(node);\n    const sorted = sorter(graph, children);\n    result = [...result, ...sorted];\n  });\n  return result;\n};\nconst sortNodesByHierarchy = (graph) => sorter(graph, graph.children());\nconst rect = (parent, node) => {\n  log.info(\"Creating subgraph rect for \", node.id, node);\n  const siteConfig = getConfig();\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", \"cluster\" + (node.class ? \" \" + node.class : \"\")).attr(\"id\", node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const useHtmlLabels = evaluate(siteConfig.flowchart.htmlLabels);\n  const label = shapeSvg.insert(\"g\").attr(\"class\", \"cluster-label\");\n  const text = node.labelType === \"markdown\" ? createText(label, node.labelText, { style: node.labelStyle, useHtmlLabels }) : label.node().appendChild(createLabel(node.labelText, node.labelStyle, void 0, true));\n  let bbox = text.getBBox();\n  if (evaluate(siteConfig.flowchart.htmlLabels)) {\n    const div = text.children[0];\n    const dv = select(text);\n    bbox = div.getBoundingClientRect();\n    dv.attr(\"width\", bbox.width);\n    dv.attr(\"height\", bbox.height);\n  }\n  const padding = 0 * node.padding;\n  const halfPadding = padding / 2;\n  const width = node.width <= bbox.width + padding ? bbox.width + padding : node.width;\n  if (node.width <= bbox.width + padding) {\n    node.diff = (bbox.width - node.width) / 2 - node.padding / 2;\n  } else {\n    node.diff = -node.padding / 2;\n  }\n  log.trace(\"Data \", node, JSON.stringify(node));\n  rect2.attr(\"style\", node.style).attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"x\", node.x - width / 2).attr(\"y\", node.y - node.height / 2 - halfPadding).attr(\"width\", width).attr(\"height\", node.height + padding);\n  const { subGraphTitleTopMargin } = getSubGraphTitleMargins(siteConfig);\n  if (useHtmlLabels) {\n    label.attr(\n      \"transform\",\n      // This puts the label on top of the box instead of inside it\n      `translate(${node.x - bbox.width / 2}, ${node.y - node.height / 2 + subGraphTitleTopMargin})`\n    );\n  } else {\n    label.attr(\n      \"transform\",\n      // This puts the label on top of the box instead of inside it\n      `translate(${node.x}, ${node.y - node.height / 2 + subGraphTitleTopMargin})`\n    );\n  }\n  const rectBox = rect2.node().getBBox();\n  node.width = rectBox.width;\n  node.height = rectBox.height;\n  node.intersect = function(point) {\n    return intersectRect(node, point);\n  };\n  return shapeSvg;\n};\nconst noteGroup = (parent, node) => {\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", \"note-cluster\").attr(\"id\", node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const padding = 0 * node.padding;\n  const halfPadding = padding / 2;\n  rect2.attr(\"rx\", node.rx).attr(\"ry\", node.ry).attr(\"x\", node.x - node.width / 2 - halfPadding).attr(\"y\", node.y - node.height / 2 - halfPadding).attr(\"width\", node.width + padding).attr(\"height\", node.height + padding).attr(\"fill\", \"none\");\n  const rectBox = rect2.node().getBBox();\n  node.width = rectBox.width;\n  node.height = rectBox.height;\n  node.intersect = function(point) {\n    return intersectRect(node, point);\n  };\n  return shapeSvg;\n};\nconst roundedWithTitle = (parent, node) => {\n  const siteConfig = getConfig();\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", node.classes).attr(\"id\", node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const label = shapeSvg.insert(\"g\").attr(\"class\", \"cluster-label\");\n  const innerRect = shapeSvg.append(\"rect\");\n  const text = label.node().appendChild(createLabel(node.labelText, node.labelStyle, void 0, true));\n  let bbox = text.getBBox();\n  if (evaluate(siteConfig.flowchart.htmlLabels)) {\n    const div = text.children[0];\n    const dv = select(text);\n    bbox = div.getBoundingClientRect();\n    dv.attr(\"width\", bbox.width);\n    dv.attr(\"height\", bbox.height);\n  }\n  bbox = text.getBBox();\n  const padding = 0 * node.padding;\n  const halfPadding = padding / 2;\n  const width = node.width <= bbox.width + node.padding ? bbox.width + node.padding : node.width;\n  if (node.width <= bbox.width + node.padding) {\n    node.diff = (bbox.width + node.padding * 0 - node.width) / 2;\n  } else {\n    node.diff = -node.padding / 2;\n  }\n  rect2.attr(\"class\", \"outer\").attr(\"x\", node.x - width / 2 - halfPadding).attr(\"y\", node.y - node.height / 2 - halfPadding).attr(\"width\", width + padding).attr(\"height\", node.height + padding);\n  innerRect.attr(\"class\", \"inner\").attr(\"x\", node.x - width / 2 - halfPadding).attr(\"y\", node.y - node.height / 2 - halfPadding + bbox.height - 1).attr(\"width\", width + padding).attr(\"height\", node.height + padding - bbox.height - 3);\n  const { subGraphTitleTopMargin } = getSubGraphTitleMargins(siteConfig);\n  label.attr(\n    \"transform\",\n    `translate(${node.x - bbox.width / 2}, ${node.y - node.height / 2 - node.padding / 3 + (evaluate(siteConfig.flowchart.htmlLabels) ? 5 : 3) + subGraphTitleTopMargin})`\n  );\n  const rectBox = rect2.node().getBBox();\n  node.height = rectBox.height;\n  node.intersect = function(point) {\n    return intersectRect(node, point);\n  };\n  return shapeSvg;\n};\nconst divider = (parent, node) => {\n  const shapeSvg = parent.insert(\"g\").attr(\"class\", node.classes).attr(\"id\", node.id);\n  const rect2 = shapeSvg.insert(\"rect\", \":first-child\");\n  const padding = 0 * node.padding;\n  const halfPadding = padding / 2;\n  rect2.attr(\"class\", \"divider\").attr(\"x\", node.x - node.width / 2 - halfPadding).attr(\"y\", node.y - node.height / 2).attr(\"width\", node.width + padding).attr(\"height\", node.height + padding);\n  const rectBox = rect2.node().getBBox();\n  node.width = rectBox.width;\n  node.height = rectBox.height;\n  node.diff = -node.padding / 2;\n  node.intersect = function(point) {\n    return intersectRect(node, point);\n  };\n  return shapeSvg;\n};\nconst shapes = { rect, roundedWithTitle, noteGroup, divider };\nlet clusterElems = {};\nconst insertCluster = (elem, node) => {\n  log.trace(\"Inserting cluster\");\n  const shape = node.shape || \"rect\";\n  clusterElems[node.id] = shapes[shape](elem, node);\n};\nconst clear = () => {\n  clusterElems = {};\n};\nconst recursiveRender = async (_elem, graph, diagramType, id, parentCluster, siteConfig) => {\n  log.info(\"Graph in recursive render: XXX\", graphlibJson.write(graph), parentCluster);\n  const dir = graph.graph().rankdir;\n  log.trace(\"Dir in recursive render - dir:\", dir);\n  const elem = _elem.insert(\"g\").attr(\"class\", \"root\");\n  if (!graph.nodes()) {\n    log.info(\"No nodes found for\", graph);\n  } else {\n    log.info(\"Recursive render XXX\", graph.nodes());\n  }\n  if (graph.edges().length > 0) {\n    log.trace(\"Recursive edges\", graph.edge(graph.edges()[0]));\n  }\n  const clusters = elem.insert(\"g\").attr(\"class\", \"clusters\");\n  const edgePaths = elem.insert(\"g\").attr(\"class\", \"edgePaths\");\n  const edgeLabels = elem.insert(\"g\").attr(\"class\", \"edgeLabels\");\n  const nodes = elem.insert(\"g\").attr(\"class\", \"nodes\");\n  await Promise.all(\n    graph.nodes().map(async function(v) {\n      const node = graph.node(v);\n      if (parentCluster !== void 0) {\n        const data = JSON.parse(JSON.stringify(parentCluster.clusterData));\n        log.info(\"Setting data for cluster XXX (\", v, \") \", data, parentCluster);\n        graph.setNode(parentCluster.id, data);\n        if (!graph.parent(v)) {\n          log.trace(\"Setting parent\", v, parentCluster.id);\n          graph.setParent(v, parentCluster.id, data);\n        }\n      }\n      log.info(\"(Insert) Node XXX\" + v + \": \" + JSON.stringify(graph.node(v)));\n      if (node && node.clusterNode) {\n        log.info(\"Cluster identified\", v, node.width, graph.node(v));\n        const o = await recursiveRender(\n          nodes,\n          node.graph,\n          diagramType,\n          id,\n          graph.node(v),\n          siteConfig\n        );\n        const newEl = o.elem;\n        updateNodeBounds(node, newEl);\n        node.diff = o.diff || 0;\n        log.info(\"Node bounds (abc123)\", v, node, node.width, node.x, node.y);\n        setNodeElem(newEl, node);\n        log.warn(\"Recursive render complete \", newEl, node);\n      } else {\n        if (graph.children(v).length > 0) {\n          log.info(\"Cluster - the non recursive path XXX\", v, node.id, node, graph);\n          log.info(findNonClusterChild(node.id, graph));\n          clusterDb[node.id] = { id: findNonClusterChild(node.id, graph), node };\n        } else {\n          log.info(\"Node - the non recursive path\", v, node.id, node);\n          await insertNode(nodes, graph.node(v), dir);\n        }\n      }\n    })\n  );\n  graph.edges().forEach(function(e) {\n    const edge = graph.edge(e.v, e.w, e.name);\n    log.info(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(e));\n    log.info(\"Edge \" + e.v + \" -> \" + e.w + \": \", e, \" \", JSON.stringify(graph.edge(e)));\n    log.info(\"Fix\", clusterDb, \"ids:\", e.v, e.w, \"Translating: \", clusterDb[e.v], clusterDb[e.w]);\n    insertEdgeLabel(edgeLabels, edge);\n  });\n  graph.edges().forEach(function(e) {\n    log.info(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(e));\n  });\n  log.info(\"#############################################\");\n  log.info(\"###                Layout                 ###\");\n  log.info(\"#############################################\");\n  log.info(graph);\n  layout(graph);\n  log.info(\"Graph after layout:\", graphlibJson.write(graph));\n  let diff = 0;\n  const { subGraphTitleTotalMargin } = getSubGraphTitleMargins(siteConfig);\n  sortNodesByHierarchy(graph).forEach(function(v) {\n    const node = graph.node(v);\n    log.info(\"Position \" + v + \": \" + JSON.stringify(graph.node(v)));\n    log.info(\n      \"Position \" + v + \": (\" + node.x,\n      \",\" + node.y,\n      \") width: \",\n      node.width,\n      \" height: \",\n      node.height\n    );\n    if (node && node.clusterNode) {\n      node.y += subGraphTitleTotalMargin;\n      positionNode(node);\n    } else {\n      if (graph.children(v).length > 0) {\n        node.height += subGraphTitleTotalMargin;\n        insertCluster(clusters, node);\n        clusterDb[node.id].node = node;\n      } else {\n        node.y += subGraphTitleTotalMargin / 2;\n        positionNode(node);\n      }\n    }\n  });\n  graph.edges().forEach(function(e) {\n    const edge = graph.edge(e);\n    log.info(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(edge), edge);\n    edge.points.forEach((point) => point.y += subGraphTitleTotalMargin / 2);\n    const paths = insertEdge(edgePaths, e, edge, clusterDb, diagramType, graph, id);\n    positionEdgeLabel(edge, paths);\n  });\n  graph.nodes().forEach(function(v) {\n    const n = graph.node(v);\n    log.info(v, n.type, n.diff);\n    if (n.type === \"group\") {\n      diff = n.diff;\n    }\n  });\n  return { elem, diff };\n};\nconst render = async (elem, graph, markers, diagramType, id) => {\n  insertMarkers(elem, markers, diagramType, id);\n  clear$2();\n  clear$3();\n  clear();\n  clear$1();\n  log.warn(\"Graph at first:\", JSON.stringify(graphlibJson.write(graph)));\n  adjustClustersAndEdges(graph);\n  log.warn(\"Graph after:\", JSON.stringify(graphlibJson.write(graph)));\n  const siteConfig = getConfig();\n  await recursiveRender(elem, graph, diagramType, id, void 0, siteConfig);\n};\nexport {\n  render as r\n};\n"],"names":["write","g","json","writeNodes","writeEdges","_.isUndefined","_.clone","_.map","v","nodeValue","parent","node","e","edgeValue","edge","clusterDb","descendants","parents","clear$1","isDescendant","id","ancestorId","log","edgeInCluster","clusterId","copy","graph","newGraph","rootId","nodes","data","edges","data2","extractDescendants","children","res","child","findNonClusterChild","_id","getAnchorId","adjustClustersAndEdges","depth","d1","d2","nonClusterChild","w","specialId","edge1","edge2","graphlibJson.write","extractor","hasChildren","dir","clusterGraph","graphlib.Graph","sorter","result","sorted","sortNodesByHierarchy","rect","siteConfig","getConfig","shapeSvg","rect2","useHtmlLabels","evaluate","label","text","createText","createLabel","bbox","div","dv","select","padding","halfPadding","width","subGraphTitleTopMargin","getSubGraphTitleMargins","rectBox","point","intersectRect","noteGroup","roundedWithTitle","innerRect","divider","shapes","clusterElems","insertCluster","elem","shape","clear","recursiveRender","_elem","diagramType","parentCluster","clusters","edgePaths","edgeLabels","o","newEl","updateNodeBounds","setNodeElem","insertNode","insertEdgeLabel","layout","diff","subGraphTitleTotalMargin","positionNode","paths","insertEdge","positionEdgeLabel","n","render","markers","insertMarkers","clear$2","clear$3"],"mappings":"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","x_google_ignoreList":[0,1]}