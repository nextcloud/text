{"version":3,"file":"haxe-ME8eFjla.chunk.mjs","sources":["../node_modules/highlight.js/lib/languages/haxe.js"],"sourcesContent":["/*\nLanguage: Haxe\nDescription: Haxe is an open source toolkit based on a modern, high level, strictly typed programming language.\nAuthor: Christopher Kaster <ikasoki@gmail.com> (Based on the actionscript.js language file by Alexander Myadzel)\nContributors: Kenton Hamaluik <kentonh@gmail.com>\nWebsite: https://haxe.org\nCategory: system\n*/\n\nfunction haxe(hljs) {\n  const IDENT_RE = '[a-zA-Z_$][a-zA-Z0-9_$]*';\n\n  // C_NUMBER_RE with underscores and literal suffixes\n  const HAXE_NUMBER_RE = /(-?)(\\b0[xX][a-fA-F0-9_]+|(\\b\\d+(\\.[\\d_]*)?|\\.[\\d_]+)(([eE][-+]?\\d+)|i32|u32|i64|f64)?)/;\n\n  const HAXE_BASIC_TYPES = 'Int Float String Bool Dynamic Void Array ';\n\n  return {\n    name: 'Haxe',\n    aliases: [ 'hx' ],\n    keywords: {\n      keyword: 'abstract break case cast catch continue default do dynamic else enum extern '\n               + 'final for function here if import in inline is macro never new override package private get set '\n               + 'public return static super switch this throw trace try typedef untyped using var while '\n               + HAXE_BASIC_TYPES,\n      built_in:\n        'trace this',\n      literal:\n        'true false null _'\n    },\n    contains: [\n      {\n        className: 'string', // interpolate-able strings\n        begin: '\\'',\n        end: '\\'',\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          {\n            className: 'subst', // interpolation\n            begin: /\\$\\{/,\n            end: /\\}/\n          },\n          {\n            className: 'subst', // interpolation\n            begin: /\\$/,\n            end: /\\W\\}/\n          }\n        ]\n      },\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'number',\n        begin: HAXE_NUMBER_RE,\n        relevance: 0\n      },\n      {\n        className: 'variable',\n        begin: \"\\\\$\" + IDENT_RE,\n      },\n      {\n        className: 'meta', // compiler meta\n        begin: /@:?/,\n        end: /\\(|$/,\n        excludeEnd: true,\n      },\n      {\n        className: 'meta', // compiler conditionals\n        begin: '#',\n        end: '$',\n        keywords: { keyword: 'if else elseif end error' }\n      },\n      {\n        className: 'type', // function types\n        begin: /:[ \\t]*/,\n        end: /[^A-Za-z0-9_ \\t\\->]/,\n        excludeBegin: true,\n        excludeEnd: true,\n        relevance: 0\n      },\n      {\n        className: 'type', // types\n        begin: /:[ \\t]*/,\n        end: /\\W/,\n        excludeBegin: true,\n        excludeEnd: true\n      },\n      {\n        className: 'type', // instantiation\n        beginKeywords: 'new',\n        end: /\\W/,\n        excludeBegin: true,\n        excludeEnd: true\n      },\n      {\n        className: 'title.class', // enums\n        beginKeywords: 'enum',\n        end: /\\{/,\n        contains: [ hljs.TITLE_MODE ]\n      },\n      {\n        className: 'title.class', // abstracts\n        begin: '\\\\babstract\\\\b(?=\\\\s*' + hljs.IDENT_RE + '\\\\s*\\\\()',\n        end: /[\\{$]/,\n        contains: [\n          {\n            className: 'type',\n            begin: /\\(/,\n            end: /\\)/,\n            excludeBegin: true,\n            excludeEnd: true\n          },\n          {\n            className: 'type',\n            begin: /from +/,\n            end: /\\W/,\n            excludeBegin: true,\n            excludeEnd: true\n          },\n          {\n            className: 'type',\n            begin: /to +/,\n            end: /\\W/,\n            excludeBegin: true,\n            excludeEnd: true\n          },\n          hljs.TITLE_MODE\n        ],\n        keywords: { keyword: 'abstract from to' }\n      },\n      {\n        className: 'title.class', // classes\n        begin: /\\b(class|interface) +/,\n        end: /[\\{$]/,\n        excludeEnd: true,\n        keywords: 'class interface',\n        contains: [\n          {\n            className: 'keyword',\n            begin: /\\b(extends|implements) +/,\n            keywords: 'extends implements',\n            contains: [\n              {\n                className: 'type',\n                begin: hljs.IDENT_RE,\n                relevance: 0\n              }\n            ]\n          },\n          hljs.TITLE_MODE\n        ]\n      },\n      {\n        className: 'title.function',\n        beginKeywords: 'function',\n        end: /\\(/,\n        excludeEnd: true,\n        illegal: /\\S/,\n        contains: [ hljs.TITLE_MODE ]\n      }\n    ],\n    illegal: /<\\//\n  };\n}\n\nmodule.exports = haxe;\n"],"names":["haxe","hljs","IDENT_RE","HAXE_NUMBER_RE","haxe_1"],"mappings":"4YASA,SAASA,EAAKC,EAAM,CAClB,MAAMC,EAAW,2BAGXC,EAAiB,0FAIvB,MAAO,CACL,KAAM,OACN,QAAS,CAAE,IAAM,EACjB,SAAU,CACR,QAAS,+SAIT,SACE,aACF,QACE,mBACH,EACD,SAAU,CACR,CACE,UAAW,SACX,MAAO,IACP,IAAK,IACL,SAAU,CACRF,EAAK,iBACL,CACE,UAAW,QACX,MAAO,OACP,IAAK,IACN,EACD,CACE,UAAW,QACX,MAAO,KACP,IAAK,MACN,CACF,CACF,EACDA,EAAK,kBACLA,EAAK,oBACLA,EAAK,qBACL,CACE,UAAW,SACX,MAAOE,EACP,UAAW,CACZ,EACD,CACE,UAAW,WACX,MAAO,MAAQD,CAChB,EACD,CACE,UAAW,OACX,MAAO,MACP,IAAK,OACL,WAAY,EACb,EACD,CACE,UAAW,OACX,MAAO,IACP,IAAK,IACL,SAAU,CAAE,QAAS,0BAA4B,CAClD,EACD,CACE,UAAW,OACX,MAAO,UACP,IAAK,sBACL,aAAc,GACd,WAAY,GACZ,UAAW,CACZ,EACD,CACE,UAAW,OACX,MAAO,UACP,IAAK,KACL,aAAc,GACd,WAAY,EACb,EACD,CACE,UAAW,OACX,cAAe,MACf,IAAK,KACL,aAAc,GACd,WAAY,EACb,EACD,CACE,UAAW,cACX,cAAe,OACf,IAAK,KACL,SAAU,CAAED,EAAK,UAAY,CAC9B,EACD,CACE,UAAW,cACX,MAAO,wBAA0BA,EAAK,SAAW,WACjD,IAAK,QACL,SAAU,CACR,CACE,UAAW,OACX,MAAO,KACP,IAAK,KACL,aAAc,GACd,WAAY,EACb,EACD,CACE,UAAW,OACX,MAAO,SACP,IAAK,KACL,aAAc,GACd,WAAY,EACb,EACD,CACE,UAAW,OACX,MAAO,OACP,IAAK,KACL,aAAc,GACd,WAAY,EACb,EACDA,EAAK,UACN,EACD,SAAU,CAAE,QAAS,kBAAoB,CAC1C,EACD,CACE,UAAW,cACX,MAAO,wBACP,IAAK,QACL,WAAY,GACZ,SAAU,kBACV,SAAU,CACR,CACE,UAAW,UACX,MAAO,2BACP,SAAU,qBACV,SAAU,CACR,CACE,UAAW,OACX,MAAOA,EAAK,SACZ,UAAW,CACZ,CACF,CACF,EACDA,EAAK,UACN,CACF,EACD,CACE,UAAW,iBACX,cAAe,WACf,IAAK,KACL,WAAY,GACZ,QAAS,KACT,SAAU,CAAEA,EAAK,UAAY,CAC9B,CACF,EACD,QAAS,KACb,CACA,CAEA,IAAAG,EAAiBJ","x_google_ignoreList":[0]}