{"version":3,"mappings":";2kBAAA,MAAAA,EAAe,+ICyBFC,EAAuB,IAAM,CACzC,MAAMC,EACLC,EAAE,OAAQ,QAAQ,EAAI,IAAMC,EAAU,OAAQ,wBAAwB,EACvEC,EAAoB,CACnB,GAAI,sBACJ,YAAaF,EAAE,OAAQ,wBAAwB,EAC/C,SAAUG,EAAqB,MAC/B,QAAQC,EAAS,CAChB,OAAI,OAAOA,EAAQ,WAAW,qBAAqB,CAAC,EAC5C,IAEAA,EAAQ,YAAcC,EAAW,UAAY,CACtD,EACA,cAAeR,EACf,MAAM,QAAQO,EAASE,EAAS,SAG/B,GAFqBA,EAAQ,IAAKC,GAASA,EAAK,QAAQ,EAEvC,SAASR,CAAe,EAAG,CAC3CS,EACCR,EAAE,OAAQ,0BAA2B,CAAE,KAAMD,CAAe,CAAE,CACnE,EACI,MACD,CAEA,MAAMU,EACLL,EAAQ,cAAgB,IAAM,mBAAmBL,CAAe,EAC3DW,EAAW,MAAMC,EAAM,CAC5B,OAAQ,MACR,IAAKF,EACL,QAAS,CACR,UAAW,GAChB,CACA,CAAI,EACKG,EAAS,SAASF,EAAS,QAAQ,WAAW,CAAC,EAC/CG,EAAO,IAAIC,EAAK,CACrB,OAAQV,EAAQ,OAAS,IAAML,EAC/B,GAAIa,EACJ,MAAO,IAAI,KACX,KAAM,gBACN,QAAOG,sBAAkB,MAAO,KAChC,YAAaV,EAAW,IACxB,MAAMD,iBAAS,OAAQ,YAAYW,IAAc,IAAdA,cAAkB,IACzD,CAAI,EAEDC,EAAYhB,EAAE,OAAQ,mBAAoB,CAAE,KAAMD,EAAiB,CAAC,EAEpEK,EAAQ,WAAW,qBAAqB,EAAIQ,EAC5CR,EAAQ,WAAW,gBAAgB,EAAI,GAEvCa,EAAK,qBAAsBJ,CAAI,EAC/BI,EAAK,qBAAsBb,CAAO,CACnC,CACF,CAAE,CACF,EAEA,IAAIc,EACAC,EACAC,EAEJ,MAAMC,EAAU,CAACC,EAAGC,IACZ,CAAC,QAAS,YAAa,cAAc,EAAE,SAASA,EAAK,EAAE,EAGlDC,EAAuB,IAAIC,EAAO,CAC9C,GAAI,YACJ,MAAO,GACP,QAAAJ,EAEA,OAAQ,MAAOK,EAAIC,IAAW,CAC7BP,EAAeO,EAEVT,IACJA,GACC,MAAKU,EAAA,IAAC,OAAO,oCAA4B,qGACxC,SAICT,IACHA,EAAiC,SAAQ,EACzC,QAAQ,MAAM,sDAAsD,GAGrE,MAAMU,EAAmB,CAAC,CAACT,EAAa,WAAW,qBAAqB,EAClEd,EAAUc,EAAa,WAAW,gBAAgB,GAAK,GACvDU,EAAOV,EAAa,MAAQ,GAGlCD,EAAmC,IAAIY,EAAI,CAC1C,QAASb,EACT,UAAW,CACV,QAAAZ,EACA,iBAAAuB,EACA,KAAAC,CACJ,CACA,CAAG,EAAE,OAAOJ,CAAE,EAEZ,OAAO,iCAAmCP,CAC3C,EAEA,QAAQQ,EAAQJ,EAAM,CAErB,GADAH,EAAeO,EACX,CAACR,EAAkC,CACtC,QAAQ,MAAM,gDAAgD,EAC9D,MACD,CAEA,MAAMU,EACL,CAAC,CAACF,EAAO,WAAW,qBAAqB,GAAKN,EAAQM,EAAQJ,CAAI,EACnEJ,EAAiC,iBAAmBU,EACpDV,EAAiC,QAChCQ,EAAO,WAAW,gBAAgB,GAAK,GACxCR,EAAiC,KAAOQ,EAAO,MAAQ,EACxD,CACD,CAAC,EC/HKK,EAAqB/B,EAAU,OAAQ,qBAAqB,EAElEgC,EAAoB,oBAAqB,CAAE,GAAI,yBAAyB,CAAE,EAC1EA,EAAoB,yBAA0B,CAAE,GAAI,yBAAyB,CAAE,EAE3ED,IACHlC,EAAoB,EACpBoC,EAAwBV,CAAoB","names":["TextSvg","addMenuRichWorkspace","descriptionFile","t","loadState","addNewFileMenuEntry","NewMenuEntryCategory","context","Permission","content","node","showError","source","response","axios","fileid","file","File","getCurrentUser","showSuccess","emit","FilesHeaderRichWorkspaceView","FilesHeaderRichWorkspaceInstance","latestFolder","enabled","_","view","FilesWorkspaceHeader","Header","el","folder","__vitePreload","hasRichWorkspace","path","Vue","workspaceAvailable","registerDavProperty","registerFileListHeaders"],"ignoreList":[0],"sources":["../node_modules/@mdi/svg/svg/text.svg?raw","../src/helpers/files.js","../src/init.js"],"sourcesContent":["export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"mdi-text\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M21,6V8H3V6H21M3,18H12V16H3V18M3,13H21V11H3V13Z\\\" /></svg>\"","/**\n * SPDX-FileCopyrightText: 2019 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { getCurrentUser } from '@nextcloud/auth'\nimport axios from '@nextcloud/axios'\nimport { showError, showSuccess } from '@nextcloud/dialogs'\nimport { emit } from '@nextcloud/event-bus'\nimport {\n\taddNewFileMenuEntry,\n\tFile,\n\tHeader,\n\tNewMenuEntryCategory,\n\tPermission,\n} from '@nextcloud/files'\nimport { loadState } from '@nextcloud/initial-state'\n\nimport TextSvg from '@mdi/svg/svg/text.svg?raw'\n\nimport { t } from '@nextcloud/l10n'\nimport Vue from 'vue'\n\nconst FILE_ACTION_IDENTIFIER = 'Edit with text app'\n\nexport const addMenuRichWorkspace = () => {\n\tconst descriptionFile =\n\t\tt('text', 'Readme') + '.' + loadState('text', 'default_file_extension')\n\taddNewFileMenuEntry({\n\t\tid: 'rich-workspace-init',\n\t\tdisplayName: t('text', 'Add folder description'),\n\t\tcategory: NewMenuEntryCategory.Other,\n\t\tenabled(context) {\n\t\t\tif (Number(context.attributes['rich-workspace-file'])) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\treturn (context.permissions & Permission.CREATE) !== 0\n\t\t},\n\t\ticonSvgInline: TextSvg,\n\t\tasync handler(context, content) {\n\t\t\tconst contentNames = content.map((node) => node.basename)\n\n\t\t\tif (contentNames.includes(descriptionFile)) {\n\t\t\t\tshowError(\n\t\t\t\t\tt('text', '\"{name}\" already exist!', { name: descriptionFile }),\n\t\t\t\t)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst source =\n\t\t\t\tcontext.encodedSource + '/' + encodeURIComponent(descriptionFile)\n\t\t\tconst response = await axios({\n\t\t\t\tmethod: 'PUT',\n\t\t\t\turl: source,\n\t\t\t\theaders: {\n\t\t\t\t\tOverwrite: 'F',\n\t\t\t\t},\n\t\t\t})\n\t\t\tconst fileid = parseInt(response.headers['oc-fileid'])\n\t\t\tconst file = new File({\n\t\t\t\tsource: context.source + '/' + descriptionFile,\n\t\t\t\tid: fileid,\n\t\t\t\tmtime: new Date(),\n\t\t\t\tmime: 'text/markdown',\n\t\t\t\towner: getCurrentUser()?.uid || null,\n\t\t\t\tpermissions: Permission.ALL,\n\t\t\t\troot: context?.root || '/files/' + getCurrentUser()?.uid,\n\t\t\t})\n\n\t\t\tshowSuccess(t('text', 'Created \"{name}\"', { name: descriptionFile }))\n\n\t\t\tcontext.attributes['rich-workspace-file'] = fileid\n\t\t\tcontext.attributes['rich-workspace'] = ''\n\n\t\t\temit('files:node:created', file)\n\t\t\temit('files:node:updated', context)\n\t\t},\n\t})\n}\n\nlet FilesHeaderRichWorkspaceView\nlet FilesHeaderRichWorkspaceInstance\nlet latestFolder\n\nconst enabled = (_, view) => {\n\treturn ['files', 'favorites', 'public-share'].includes(view.id)\n}\n\nexport const FilesWorkspaceHeader = new Header({\n\tid: 'workspace',\n\torder: 10,\n\tenabled,\n\n\trender: async (el, folder) => {\n\t\tlatestFolder = folder\n\t\t// Import the RichWorkspace component only when needed\n\t\tif (!FilesHeaderRichWorkspaceView) {\n\t\t\tFilesHeaderRichWorkspaceView = (\n\t\t\t\tawait import('../views/RichWorkspace.vue')\n\t\t\t).default\n\t\t}\n\n\t\t// If an instance already exists, destroy it before creating a new one\n\t\tif (FilesHeaderRichWorkspaceInstance) {\n\t\t\tFilesHeaderRichWorkspaceInstance.$destroy()\n\t\t\tconsole.debug('Destroying existing FilesHeaderRichWorkspaceInstance')\n\t\t}\n\n\t\tconst hasRichWorkspace = !!latestFolder.attributes['rich-workspace-file']\n\t\tconst content = latestFolder.attributes['rich-workspace'] || ''\n\t\tconst path = latestFolder.path || ''\n\n\t\t// Create a new instance of the RichWorkspace component\n\t\tFilesHeaderRichWorkspaceInstance = new Vue({\n\t\t\textends: FilesHeaderRichWorkspaceView,\n\t\t\tpropsData: {\n\t\t\t\tcontent,\n\t\t\t\thasRichWorkspace,\n\t\t\t\tpath,\n\t\t\t},\n\t\t}).$mount(el)\n\n\t\twindow.FilesHeaderRichWorkspaceInstance = FilesHeaderRichWorkspaceInstance\n\t},\n\n\tupdated(folder, view) {\n\t\tlatestFolder = folder\n\t\tif (!FilesHeaderRichWorkspaceInstance) {\n\t\t\tconsole.error('No vue instance found for FilesWorkspaceHeader')\n\t\t\treturn\n\t\t}\n\n\t\tconst hasRichWorkspace =\n\t\t\t!!folder.attributes['rich-workspace-file'] && enabled(folder, view)\n\t\tFilesHeaderRichWorkspaceInstance.hasRichWorkspace = hasRichWorkspace\n\t\tFilesHeaderRichWorkspaceInstance.content =\n\t\t\tfolder.attributes['rich-workspace'] || ''\n\t\tFilesHeaderRichWorkspaceInstance.path = folder.path || ''\n\t},\n})\n\nexport { FILE_ACTION_IDENTIFIER }\n","/**\n * SPDX-FileCopyrightText: 2022 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport { registerFileListHeaders } from '@nextcloud/files'\nimport { registerDavProperty } from '@nextcloud/files/dav'\nimport { loadState } from '@nextcloud/initial-state'\nimport { addMenuRichWorkspace, FilesWorkspaceHeader } from './helpers/files.js'\n// eslint-disable-next-line import/no-unresolved, n/no-missing-import\nimport 'vite/modulepreload-polyfill'\n\nconst workspaceAvailable = loadState('text', 'workspace_available')\n\nregisterDavProperty('nc:rich-workspace', { nc: 'http://nextcloud.org/ns' })\nregisterDavProperty('nc:rich-workspace-file', { nc: 'http://nextcloud.org/ns' })\n\nif (workspaceAvailable) {\n\taddMenuRichWorkspace()\n\tregisterFileListHeaders(FilesWorkspaceHeader)\n}\n"],"file":"js/text-init.mjs"}