{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/haxe.js"],"names":["module","exports","hljs","aliases","keywords","keyword","built_in","literal","contains","className","begin","end","BACKSLASH_ESCAPE","QUOTE_STRING_MODE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","C_NUMBER_MODE","excludeBegin","excludeEnd","relevance","beginKeywords","TITLE_MODE","IDENT_RE","illegal"],"mappings":"oFAAAA,EAAOC,QAAU,SAASC,GAMxB,MAAO,CACLC,QAAS,CAAC,MACVC,SAAU,CACRC,QAAS,uRAITC,SACE,aACFC,QACE,qBAEJC,SAAU,CACR,CAAEC,UAAW,SACXC,MAAO,IAAMC,IAAK,IAClBH,SAAU,CACRN,EAAKU,iBACL,CAAEH,UAAW,QACXC,MAAO,SAAUC,IAAK,OAExB,CAAEF,UAAW,QACXC,MAAO,MAAOC,IAAK,UAIzBT,EAAKW,kBACLX,EAAKY,oBACLZ,EAAKa,qBACLb,EAAKc,cACL,CAAEP,UAAW,OACXC,MAAO,KAAMC,IAAK,KAEpB,CAAEF,UAAW,OACXC,MAAO,IAAKC,IAAK,IACjBP,SAAU,CAAC,eAAgB,6BAE7B,CAAEK,UAAW,OACXC,MAAO,UAAWC,IAAK,uBACvBM,cAAc,EAAMC,YAAY,EAChCC,UAAW,GAEb,CAAEV,UAAW,OACXC,MAAO,UAAWC,IAAK,MACvBM,cAAc,EAAMC,YAAY,GAElC,CAAET,UAAW,OACXC,MAAO,QAASC,IAAK,MACrBM,cAAc,EAAMC,YAAY,GAElC,CAAET,UAAW,QACXW,cAAe,OAAQT,IAAK,MAC5BH,SAAU,CACRN,EAAKmB,aAGT,CAAEZ,UAAW,QACXW,cAAe,WAAYT,IAAK,SAChCH,SAAU,CACR,CAAEC,UAAW,OACXC,MAAO,MAAOC,IAAK,MACnBM,cAAc,EAAMC,YAAY,GAElC,CAAET,UAAW,OACXC,MAAO,SAAUC,IAAK,MACtBM,cAAc,EAAMC,YAAY,GAElC,CAAET,UAAW,OACXC,MAAO,OAAQC,IAAK,MACpBM,cAAc,EAAMC,YAAY,GAElChB,EAAKmB,YAEPjB,SAAU,CACRC,QAAS,qBAGb,CAAEI,UAAW,QACXC,MAAO,yBAA0BC,IAAK,SAAWO,YAAY,EAC7Dd,SAAU,kBACVI,SAAU,CACR,CAAEC,UAAW,UACXC,MAAO,4BACPN,SAAU,qBACVI,SAAU,CACR,CACEC,UAAW,OACXC,MAAOR,EAAKoB,SACZH,UAAW,KAIjBjB,EAAKmB,aAGT,CAAEZ,UAAW,WACXW,cAAe,WAAYT,IAAK,MAAOO,YAAY,EACnDK,QAAS,MACTf,SAAU,CACRN,EAAKmB,cAIXE,QAAS","file":"highlight/haxe.js?v=3e35f84e31180c392d5f","sourcesContent":["module.exports = function(hljs) {\n  var IDENT_RE = '[a-zA-Z_$][a-zA-Z0-9_$]*';\n  var IDENT_FUNC_RETURN_TYPE_RE = '([*]|[a-zA-Z_$][a-zA-Z0-9_$]*)';\n\n  var HAXE_BASIC_TYPES = 'Int Float String Bool Dynamic Void Array ';\n\n  return {\n    aliases: ['hx'],\n    keywords: {\n      keyword: 'break case cast catch continue default do dynamic else enum extern ' +\n               'for function here if import in inline never new override package private get set ' +\n               'public return static super switch this throw trace try typedef untyped using var while ' +\n               HAXE_BASIC_TYPES,\n      built_in:\n        'trace this',\n      literal:\n        'true false null _'\n    },\n    contains: [\n      { className: 'string', // interpolate-able strings\n        begin: '\\'', end: '\\'',\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          { className: 'subst', // interpolation\n            begin: '\\\\$\\\\{', end: '\\\\}'\n          },\n          { className: 'subst', // interpolation\n            begin: '\\\\$', end: '\\\\W}'\n          }\n        ]\n      },\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_NUMBER_MODE,\n      { className: 'meta', // compiler meta\n        begin: '@:', end: '$'\n      },\n      { className: 'meta', // compiler conditionals\n        begin: '#', end: '$',\n        keywords: {'meta-keyword': 'if else elseif end error'}\n      },\n      { className: 'type', // function types\n        begin: ':[ \\t]*', end: '[^A-Za-z0-9_ \\t\\\\->]',\n        excludeBegin: true, excludeEnd: true,\n        relevance: 0\n      },\n      { className: 'type', // types\n        begin: ':[ \\t]*', end: '\\\\W',\n        excludeBegin: true, excludeEnd: true\n      },\n      { className: 'type', // instantiation\n        begin: 'new *', end: '\\\\W',\n        excludeBegin: true, excludeEnd: true\n      },\n      { className: 'class', // enums\n        beginKeywords: 'enum', end: '\\\\{',\n        contains: [\n          hljs.TITLE_MODE\n        ]\n      },\n      { className: 'class', // abstracts\n        beginKeywords: 'abstract', end: '[\\\\{$]',\n        contains: [\n          { className: 'type',\n            begin: '\\\\(', end: '\\\\)',\n            excludeBegin: true, excludeEnd: true\n          },\n          { className: 'type',\n            begin: 'from +', end: '\\\\W',\n            excludeBegin: true, excludeEnd: true\n          },\n          { className: 'type',\n            begin: 'to +', end: '\\\\W',\n            excludeBegin: true, excludeEnd: true\n          },\n          hljs.TITLE_MODE\n        ],\n        keywords: {\n          keyword: 'abstract from to'\n        }\n      },\n      { className: 'class', // classes\n        begin: '\\\\b(class|interface) +', end: '[\\\\{$]',  excludeEnd: true,\n        keywords: 'class interface',\n        contains: [\n          { className: 'keyword',\n            begin: '\\\\b(extends|implements) +',\n            keywords: 'extends implements',\n            contains: [\n              {\n                className: 'type',\n                begin: hljs.IDENT_RE,\n                relevance: 0\n              }\n            ]\n          },\n          hljs.TITLE_MODE\n        ]\n      },\n      { className: 'function',\n        beginKeywords: 'function', end: '\\\\(', excludeEnd: true,\n        illegal: '\\\\S',\n        contains: [\n          hljs.TITLE_MODE\n        ]\n      }\n    ],\n    illegal: /<\\//\n  };\n};"],"sourceRoot":""}