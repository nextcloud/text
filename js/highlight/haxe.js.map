{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/haxe.js"],"names":["module","exports","hljs","name","aliases","keywords","keyword","built_in","literal","contains","className","begin","end","BACKSLASH_ESCAPE","QUOTE_STRING_MODE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","C_NUMBER_MODE","excludeBegin","excludeEnd","relevance","beginKeywords","TITLE_MODE","IDENT_RE","illegal"],"mappings":"mGA4JAA,EAAOC,QApJP,SAAcC,GAIZ,MAAO,CACLC,KAAM,OACNC,QAAS,CAAC,MACVC,SAAU,CACRC,QAAS,uRAITC,SACE,aACFC,QACE,qBAEJC,SAAU,CACR,CACEC,UAAW,SACXC,MAAO,IACPC,IAAK,IACLH,SAAU,CACRP,EAAKW,iBACL,CACEH,UAAW,QACXC,MAAO,SACPC,IAAK,OAEP,CACEF,UAAW,QACXC,MAAO,MACPC,IAAK,UAIXV,EAAKY,kBACLZ,EAAKa,oBACLb,EAAKc,qBACLd,EAAKe,cACL,CACEP,UAAW,OACXC,MAAO,KACPC,IAAK,KAEP,CACEF,UAAW,OACXC,MAAO,IACPC,IAAK,IACLP,SAAU,CACR,eAAgB,6BAGpB,CACEK,UAAW,OACXC,MAAO,UACPC,IAAK,uBACLM,cAAc,EACdC,YAAY,EACZC,UAAW,GAEb,CACEV,UAAW,OACXC,MAAO,UACPC,IAAK,MACLM,cAAc,EACdC,YAAY,GAEd,CACET,UAAW,OACXC,MAAO,QACPC,IAAK,MACLM,cAAc,EACdC,YAAY,GAEd,CACET,UAAW,QACXW,cAAe,OACfT,IAAK,MACLH,SAAU,CAACP,EAAKoB,aAElB,CACEZ,UAAW,QACXW,cAAe,WACfT,IAAK,SACLH,SAAU,CACR,CACEC,UAAW,OACXC,MAAO,MACPC,IAAK,MACLM,cAAc,EACdC,YAAY,GAEd,CACET,UAAW,OACXC,MAAO,SACPC,IAAK,MACLM,cAAc,EACdC,YAAY,GAEd,CACET,UAAW,OACXC,MAAO,OACPC,IAAK,MACLM,cAAc,EACdC,YAAY,GAEdjB,EAAKoB,YAEPjB,SAAU,CACRC,QAAS,qBAGb,CACEI,UAAW,QACXC,MAAO,yBACPC,IAAK,SACLO,YAAY,EACZd,SAAU,kBACVI,SAAU,CACR,CACEC,UAAW,UACXC,MAAO,4BACPN,SAAU,qBACVI,SAAU,CACR,CACEC,UAAW,OACXC,MAAOT,EAAKqB,SACZH,UAAW,KAIjBlB,EAAKoB,aAGT,CACEZ,UAAW,WACXW,cAAe,WACfT,IAAK,MACLO,YAAY,EACZK,QAAS,MACTf,SAAU,CAACP,EAAKoB,cAGpBE,QAAS","file":"highlight/haxe.js?v=c396b5f4bbbe66d6d87d","sourcesContent":["/*\nLanguage: Haxe\nDescription: Haxe is an open source toolkit based on a modern, high level, strictly typed programming language.\nAuthor: Christopher Kaster <ikasoki@gmail.com> (Based on the actionscript.js language file by Alexander Myadzel)\nContributors: Kenton Hamaluik <kentonh@gmail.com>\nWebsite: https://haxe.org\n*/\n\nfunction haxe(hljs) {\n\n  const HAXE_BASIC_TYPES = 'Int Float String Bool Dynamic Void Array ';\n\n  return {\n    name: 'Haxe',\n    aliases: ['hx'],\n    keywords: {\n      keyword: 'break case cast catch continue default do dynamic else enum extern ' +\n               'for function here if import in inline never new override package private get set ' +\n               'public return static super switch this throw trace try typedef untyped using var while ' +\n               HAXE_BASIC_TYPES,\n      built_in:\n        'trace this',\n      literal:\n        'true false null _'\n    },\n    contains: [\n      {\n        className: 'string', // interpolate-able strings\n        begin: '\\'',\n        end: '\\'',\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          {\n            className: 'subst', // interpolation\n            begin: '\\\\$\\\\{',\n            end: '\\\\}'\n          },\n          {\n            className: 'subst', // interpolation\n            begin: '\\\\$',\n            end: /\\W\\}/\n          }\n        ]\n      },\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'meta', // compiler meta\n        begin: '@:',\n        end: '$'\n      },\n      {\n        className: 'meta', // compiler conditionals\n        begin: '#',\n        end: '$',\n        keywords: {\n          'meta-keyword': 'if else elseif end error'\n        }\n      },\n      {\n        className: 'type', // function types\n        begin: ':[ \\t]*',\n        end: '[^A-Za-z0-9_ \\t\\\\->]',\n        excludeBegin: true,\n        excludeEnd: true,\n        relevance: 0\n      },\n      {\n        className: 'type', // types\n        begin: ':[ \\t]*',\n        end: '\\\\W',\n        excludeBegin: true,\n        excludeEnd: true\n      },\n      {\n        className: 'type', // instantiation\n        begin: 'new *',\n        end: '\\\\W',\n        excludeBegin: true,\n        excludeEnd: true\n      },\n      {\n        className: 'class', // enums\n        beginKeywords: 'enum',\n        end: '\\\\{',\n        contains: [hljs.TITLE_MODE]\n      },\n      {\n        className: 'class', // abstracts\n        beginKeywords: 'abstract',\n        end: '[\\\\{$]',\n        contains: [\n          {\n            className: 'type',\n            begin: '\\\\(',\n            end: '\\\\)',\n            excludeBegin: true,\n            excludeEnd: true\n          },\n          {\n            className: 'type',\n            begin: 'from +',\n            end: '\\\\W',\n            excludeBegin: true,\n            excludeEnd: true\n          },\n          {\n            className: 'type',\n            begin: 'to +',\n            end: '\\\\W',\n            excludeBegin: true,\n            excludeEnd: true\n          },\n          hljs.TITLE_MODE\n        ],\n        keywords: {\n          keyword: 'abstract from to'\n        }\n      },\n      {\n        className: 'class', // classes\n        begin: '\\\\b(class|interface) +',\n        end: '[\\\\{$]',\n        excludeEnd: true,\n        keywords: 'class interface',\n        contains: [\n          {\n            className: 'keyword',\n            begin: '\\\\b(extends|implements) +',\n            keywords: 'extends implements',\n            contains: [\n              {\n                className: 'type',\n                begin: hljs.IDENT_RE,\n                relevance: 0\n              }\n            ]\n          },\n          hljs.TITLE_MODE\n        ]\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function',\n        end: '\\\\(',\n        excludeEnd: true,\n        illegal: '\\\\S',\n        contains: [hljs.TITLE_MODE]\n      }\n    ],\n    illegal: /<\\//\n  };\n}\n\nmodule.exports = haxe;\n"],"sourceRoot":""}