{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/apache.js"],"names":["module","exports","hljs","IP_ADDRESS","className","begin","name","aliases","case_insensitive","contains","HASH_COMMENT_MODE","end","inherit","QUOTE_STRING_MODE","relevance","keywords","nomarkup","starts","literal","illegal"],"mappings":"kGAmFAA,EAAOC,QAzEP,SAAgBC,GACd,IAQMC,EAAa,CACjBC,UAAW,SACXC,MAAO,yDAMT,MAAO,CACLC,KAAM,gBACNC,QAAS,CAAC,cACVC,kBAAkB,EAClBC,SAAU,CACRP,EAAKQ,kBACL,CACEN,UAAW,UACXC,MAAO,MACPM,IAAK,IACLF,SAAU,CACRN,EAfY,CAClBC,UAAW,SACXC,MAAO,aAiBDH,EAAKU,QAAQV,EAAKW,kBAAmB,CAAEC,UAAW,MAGtD,CACEV,UAAW,YACXC,MAAO,MACPS,UAAW,EAGXC,SAAU,CAAEC,SACR,8JAGJC,OAAQ,CACNN,IAAK,IACLG,UAAW,EACXC,SAAU,CAAEG,QAAS,yBACrBT,SAAU,CACR,CACEL,UAAW,OACXC,MAAO,SACPM,IAAK,QAEP,CACEP,UAAW,WACXC,MAAO,YACPM,IAAK,MACLF,SAAU,CAAC,OA1DJ,CACjBL,UAAW,SACXC,MAAO,gBA2DCF,EAzDK,CACbC,UAAW,SACXC,MAAO,QAyDCH,EAAKW,sBAKbM,QAAS","file":"highlight/apache.js?v=2a00b711a97d6d2fa794","sourcesContent":["/*\nLanguage: Apache config\nAuthor: Ruslan Keba <rukeba@gmail.com>\nContributors: Ivan Sagalaev <maniac@softwaremaniacs.org>\nWebsite: https://httpd.apache.org\nDescription: language definition for Apache configuration files (httpd.conf & .htaccess)\nCategory: common, config\n*/\n\n/** @type LanguageFn */\nfunction apache(hljs) {\n  const NUMBER_REF = {\n    className: 'number',\n    begin: '[\\\\$%]\\\\d+'\n  };\n  const NUMBER = {\n    className: 'number',\n    begin: '\\\\d+'\n  };\n  const IP_ADDRESS = {\n    className: \"number\",\n    begin: '\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}(:\\\\d{1,5})?'\n  };\n  const PORT_NUMBER = {\n    className: \"number\",\n    begin: \":\\\\d{1,5}\"\n  };\n  return {\n    name: 'Apache config',\n    aliases: ['apacheconf'],\n    case_insensitive: true,\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      {\n        className: 'section',\n        begin: '</?',\n        end: '>',\n        contains: [\n          IP_ADDRESS,\n          PORT_NUMBER,\n          // low relevance prevents us from claming XML/HTML where this rule would\n          // match strings inside of XML tags\n          hljs.inherit(hljs.QUOTE_STRING_MODE, { relevance: 0 })\n        ]\n      },\n      {\n        className: 'attribute',\n        begin: /\\w+/,\n        relevance: 0,\n        // keywords arenâ€™t needed for highlighting per se, they only boost relevance\n        // for a very generally defined mode (starts with a word, ends with line-end\n        keywords: { nomarkup:\n            'order deny allow setenv rewriterule rewriteengine rewritecond documentroot ' +\n            'sethandler errordocument loadmodule options header listen serverroot ' +\n            'servername' },\n        starts: {\n          end: /$/,\n          relevance: 0,\n          keywords: { literal: 'on off all deny allow' },\n          contains: [\n            {\n              className: 'meta',\n              begin: '\\\\s\\\\[',\n              end: '\\\\]$'\n            },\n            {\n              className: 'variable',\n              begin: '[\\\\$%]\\\\{',\n              end: '\\\\}',\n              contains: ['self',\n                NUMBER_REF]\n            },\n            IP_ADDRESS,\n            NUMBER,\n            hljs.QUOTE_STRING_MODE\n          ]\n        }\n      }\n    ],\n    illegal: /\\S/\n  };\n}\n\nmodule.exports = apache;\n"],"sourceRoot":""}