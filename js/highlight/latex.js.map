{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/latex.js"],"names":["source","re","either","args","joined","map","x","join","module","exports","hljs","DOUBLE_CARET_VARIANTS","begin","EVERYTHING_BUT_VERBATIM","className","relevance","contains","endsParent","word","RegExp","pattern","variants","end","COMMENT","BRACE_GROUP_NO_VERBATIM","ARGUMENT_BRACES","inherit","ARGUMENT_BRACKETS","SPACE_GOBBLER","ARGUMENT_M","ARGUMENT_O","ARGUMENT_AND_THEN","arg","starts_mode","starts","CSNAME","csname","keywords","$pattern","keyword","BEGIN_ENV","envname","VERBATIM_DELIMITED_EQUAL","innerName","END_SAME_AS_BEGIN","excludeBegin","excludeEnd","VERBATIM_DELIMITED_ENV","VERBATIM_DELIMITED_BRACES","VERBATIM","concat","suffix","prefix","name","aliases"],"mappings":"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","file":"highlight/latex.js?v=4872f8d8ceb101731d71","sourcesContent":["/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] } args\n * @returns {string}\n */\nfunction either(...args) {\n  const joined = '(' + args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/*\nLanguage: LaTeX\nAuthor: Benedikt Wilde <bwilde@posteo.de>\nWebsite: https://www.latex-project.org\nCategory: markup\n*/\n\n/** @type LanguageFn */\nfunction latex(hljs) {\n  const KNOWN_CONTROL_WORDS = either(...[\n      '(?:NeedsTeXFormat|RequirePackage|GetIdInfo)',\n      'Provides(?:Expl)?(?:Package|Class|File)',\n      '(?:DeclareOption|ProcessOptions)',\n      '(?:documentclass|usepackage|input|include)',\n      'makeat(?:letter|other)',\n      'ExplSyntax(?:On|Off)',\n      '(?:new|renew|provide)?command',\n      '(?:re)newenvironment',\n      '(?:New|Renew|Provide|Declare)(?:Expandable)?DocumentCommand',\n      '(?:New|Renew|Provide|Declare)DocumentEnvironment',\n      '(?:(?:e|g|x)?def|let)',\n      '(?:begin|end)',\n      '(?:part|chapter|(?:sub){0,2}section|(?:sub)?paragraph)',\n      'caption',\n      '(?:label|(?:eq|page|name)?ref|(?:paren|foot|super)?cite)',\n      '(?:alpha|beta|[Gg]amma|[Dd]elta|(?:var)?epsilon|zeta|eta|[Tt]heta|vartheta)',\n      '(?:iota|(?:var)?kappa|[Ll]ambda|mu|nu|[Xx]i|[Pp]i|varpi|(?:var)rho)',\n      '(?:[Ss]igma|varsigma|tau|[Uu]psilon|[Pp]hi|varphi|chi|[Pp]si|[Oo]mega)',\n      '(?:frac|sum|prod|lim|infty|times|sqrt|leq|geq|left|right|middle|[bB]igg?)',\n      '(?:[lr]angle|q?quad|[lcvdi]?dots|d?dot|hat|tilde|bar)'\n    ].map(word => word + '(?![a-zA-Z@:_])'));\n  const L3_REGEX = new RegExp([\n      // A function \\module_function_name:signature or \\__module_function_name:signature,\n      // where both module and function_name need at least two characters and\n      // function_name may contain single underscores.\n      '(?:__)?[a-zA-Z]{2,}_[a-zA-Z](?:_?[a-zA-Z])+:[a-zA-Z]*',\n      // A variable \\scope_module_and_name_type or \\scope__module_ane_name_type,\n      // where scope is one of l, g or c, type needs at least two characters\n      // and module_and_name may contain single underscores.\n      '[lgc]__?[a-zA-Z](?:_?[a-zA-Z])*_[a-zA-Z]{2,}',\n      // A quark \\q_the_name or \\q__the_name or\n      // scan mark \\s_the_name or \\s__vthe_name,\n      // where variable_name needs at least two characters and\n      // may contain single underscores.\n      '[qs]__?[a-zA-Z](?:_?[a-zA-Z])+',\n      // Other LaTeX3 macro names that are not covered by the three rules above.\n      'use(?:_i)?:[a-zA-Z]*',\n      '(?:else|fi|or):',\n      '(?:if|cs|exp):w',\n      '(?:hbox|vbox):n',\n      '::[a-zA-Z]_unbraced',\n      '::[a-zA-Z:]'\n    ].map(pattern => pattern + '(?![a-zA-Z:_])').join('|'));\n  const L2_VARIANTS = [\n    {begin: /[a-zA-Z@]+/}, // control word\n    {begin: /[^a-zA-Z@]?/} // control symbol\n  ];\n  const DOUBLE_CARET_VARIANTS = [\n    {begin: /\\^{6}[0-9a-f]{6}/},\n    {begin: /\\^{5}[0-9a-f]{5}/},\n    {begin: /\\^{4}[0-9a-f]{4}/},\n    {begin: /\\^{3}[0-9a-f]{3}/},\n    {begin: /\\^{2}[0-9a-f]{2}/},\n    {begin: /\\^{2}[\\u0000-\\u007f]/}\n  ];\n  const CONTROL_SEQUENCE = {\n    className: 'keyword',\n    begin: /\\\\/,\n    relevance: 0,\n    contains: [\n      {\n        endsParent: true,\n        begin: KNOWN_CONTROL_WORDS\n      },\n      {\n        endsParent: true,\n        begin: L3_REGEX\n      },\n      {\n        endsParent: true,\n        variants: DOUBLE_CARET_VARIANTS\n      },\n      {\n        endsParent: true,\n        relevance: 0,\n        variants: L2_VARIANTS\n      }\n    ]\n  };\n  const MACRO_PARAM = {\n    className: 'params',\n    relevance: 0,\n    begin: /#+\\d?/\n  };\n  const DOUBLE_CARET_CHAR = {\n    // relevance: 1\n    variants: DOUBLE_CARET_VARIANTS\n  };\n  const SPECIAL_CATCODE = {\n    className: 'built_in',\n    relevance: 0,\n    begin: /[$&^_]/\n  };\n  const MAGIC_COMMENT = {\n    className: 'meta',\n    begin: '% !TeX',\n    end: '$',\n    relevance: 10\n  };\n  const COMMENT = hljs.COMMENT(\n    '%',\n    '$',\n    {\n      relevance: 0\n    }\n  );\n  const EVERYTHING_BUT_VERBATIM = [\n    CONTROL_SEQUENCE,\n    MACRO_PARAM,\n    DOUBLE_CARET_CHAR,\n    SPECIAL_CATCODE,\n    MAGIC_COMMENT,\n    COMMENT\n  ];\n  const BRACE_GROUP_NO_VERBATIM = {\n    begin: /\\{/, end: /\\}/,\n    relevance: 0,\n    contains: ['self', ...EVERYTHING_BUT_VERBATIM]\n  };\n  const ARGUMENT_BRACES = hljs.inherit(\n    BRACE_GROUP_NO_VERBATIM,\n    {\n      relevance: 0,\n      endsParent: true,\n      contains: [BRACE_GROUP_NO_VERBATIM, ...EVERYTHING_BUT_VERBATIM]\n    }\n  );\n  const ARGUMENT_BRACKETS = {\n    begin: /\\[/,\n      end: /\\]/,\n    endsParent: true,\n    relevance: 0,\n    contains: [BRACE_GROUP_NO_VERBATIM, ...EVERYTHING_BUT_VERBATIM]\n  };\n  const SPACE_GOBBLER = {\n    begin: /\\s+/,\n    relevance: 0\n  };\n  const ARGUMENT_M = [ARGUMENT_BRACES];\n  const ARGUMENT_O = [ARGUMENT_BRACKETS];\n  const ARGUMENT_AND_THEN = function(arg, starts_mode) {\n    return {\n      contains: [SPACE_GOBBLER],\n      starts: {\n        relevance: 0,\n        contains: arg,\n        starts: starts_mode\n      }\n    };\n  };\n  const CSNAME = function(csname, starts_mode) {\n    return {\n        begin: '\\\\\\\\' + csname + '(?![a-zA-Z@:_])',\n        keywords: {$pattern: /\\\\[a-zA-Z]+/, keyword: '\\\\' + csname},\n        relevance: 0,\n        contains: [SPACE_GOBBLER],\n        starts: starts_mode\n      };\n  };\n  const BEGIN_ENV = function(envname, starts_mode) {\n    return hljs.inherit(\n      {\n        begin: '\\\\\\\\begin(?=[ \\t]*(\\\\r?\\\\n[ \\t]*)?\\\\{' + envname + '\\\\})',\n        keywords: {$pattern: /\\\\[a-zA-Z]+/, keyword: '\\\\begin'},\n        relevance: 0,\n      },\n      ARGUMENT_AND_THEN(ARGUMENT_M, starts_mode)\n    );\n  };\n  const VERBATIM_DELIMITED_EQUAL = (innerName = \"string\") => {\n    return hljs.END_SAME_AS_BEGIN({\n      className: innerName,\n      begin: /(.|\\r?\\n)/,\n      end: /(.|\\r?\\n)/,\n      excludeBegin: true,\n      excludeEnd: true,\n      endsParent: true\n    });\n  };\n  const VERBATIM_DELIMITED_ENV = function(envname) {\n    return {\n      className: 'string',\n      end: '(?=\\\\\\\\end\\\\{' + envname + '\\\\})'\n    };\n  };\n\n  const VERBATIM_DELIMITED_BRACES = (innerName = \"string\") => {\n    return {\n      relevance: 0,\n      begin: /\\{/,\n      starts: {\n        endsParent: true,\n        contains: [\n          {\n            className: innerName,\n            end: /(?=\\})/,\n            endsParent:true,\n            contains: [\n              {\n                begin: /\\{/,\n                end: /\\}/,\n                relevance: 0,\n                contains: [\"self\"]\n              }\n            ],\n          }\n        ]\n      }\n    };\n  };\n  const VERBATIM = [\n    ...['verb', 'lstinline'].map(csname => CSNAME(csname, {contains: [VERBATIM_DELIMITED_EQUAL()]})),\n    CSNAME('mint', ARGUMENT_AND_THEN(ARGUMENT_M, {contains: [VERBATIM_DELIMITED_EQUAL()]})),\n    CSNAME('mintinline', ARGUMENT_AND_THEN(ARGUMENT_M, {contains: [VERBATIM_DELIMITED_BRACES(), VERBATIM_DELIMITED_EQUAL()]})),\n    CSNAME('url', {contains: [VERBATIM_DELIMITED_BRACES(\"link\"), VERBATIM_DELIMITED_BRACES(\"link\")]}),\n    CSNAME('hyperref', {contains: [VERBATIM_DELIMITED_BRACES(\"link\")]}),\n    CSNAME('href', ARGUMENT_AND_THEN(ARGUMENT_O, {contains: [VERBATIM_DELIMITED_BRACES(\"link\")]})),\n    ...[].concat(...['', '\\\\*'].map(suffix => [\n      BEGIN_ENV('verbatim' + suffix, VERBATIM_DELIMITED_ENV('verbatim' + suffix)),\n      BEGIN_ENV('filecontents' + suffix,  ARGUMENT_AND_THEN(ARGUMENT_M, VERBATIM_DELIMITED_ENV('filecontents' + suffix))),\n      ...['', 'B', 'L'].map(prefix =>\n        BEGIN_ENV(prefix + 'Verbatim' + suffix, ARGUMENT_AND_THEN(ARGUMENT_O, VERBATIM_DELIMITED_ENV(prefix + 'Verbatim' + suffix)))\n      )\n    ])),\n    BEGIN_ENV('minted', ARGUMENT_AND_THEN(ARGUMENT_O, ARGUMENT_AND_THEN(ARGUMENT_M, VERBATIM_DELIMITED_ENV('minted')))),\n  ];\n\n  return {\n    name: 'LaTeX',\n    aliases: ['TeX'],\n    contains: [\n      ...VERBATIM,\n      ...EVERYTHING_BUT_VERBATIM\n    ]\n  };\n}\n\nmodule.exports = latex;\n"],"sourceRoot":""}