{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/rust.js"],"names":["module","exports","hljs","NUM_SUFFIX","BUILTINS","name","aliases","keywords","$pattern","IDENT_RE","keyword","literal","built_in","illegal","contains","C_LINE_COMMENT_MODE","COMMENT","inherit","QUOTE_STRING_MODE","begin","className","variants","relevance","beginKeywords","end","excludeEnd","UNDERSCORE_TITLE_MODE","endsParent"],"mappings":"oGAiJAA,EAAOC,QAzIP,SAAcC,GACZ,IAAMC,EAAa,wCAMbC,EAEJ,upBAkBF,MAAO,CACLC,KAAM,OACNC,QAAS,CAAE,MACXC,SAAU,CACRC,SAAUN,EAAKO,SAAW,KAC1BC,QA7BF,2RA+BEC,QACE,8BACFC,SACER,GAEJS,QAAS,KACTC,SAAU,CACRZ,EAAKa,oBACLb,EAAKc,QAAQ,OAAQ,OAAQ,CAC3BF,SAAU,CAAE,UAEdZ,EAAKe,QAAQf,EAAKgB,kBAAmB,CACnCC,MAAO,MACPN,QAAS,OAEX,CACEO,UAAW,SACXC,SAAU,CACR,CACEF,MAAO,0BAET,CACEA,MAAO,qCAIb,CACEC,UAAW,SACXD,MAAO,2BAET,CACEC,UAAW,SACXC,SAAU,CACR,CACEF,MAAO,gBAAkBhB,GAE3B,CACEgB,MAAO,iBAAmBhB,GAE5B,CACEgB,MAAO,uBAAyBhB,GAElC,CACEgB,MAAO,kDACAhB,IAGXmB,UAAW,GAEb,CACEF,UAAW,WACXG,cAAe,KACfC,IAAK,UACLC,YAAY,EACZX,SAAU,CAAEZ,EAAKwB,wBAEnB,CACEN,UAAW,OACXD,MAAO,SACPK,IAAK,MACLV,SAAU,CACR,CACEM,UAAW,cACXD,MAAO,IACPK,IAAK,OAIX,CACEJ,UAAW,QACXG,cAAe,OACfC,IAAK,IACLV,SAAU,CACRZ,EAAKe,QAAQf,EAAKwB,sBAAuB,CACvCC,YAAY,KAGhBd,QAAS,OAEX,CACEO,UAAW,QACXG,cAAe,0BACfC,IAAK,KACLV,SAAU,CACRZ,EAAKe,QAAQf,EAAKwB,sBAAuB,CACvCC,YAAY,KAGhBd,QAAS,YAEX,CACEM,MAAOjB,EAAKO,SAAW,KACvBF,SAAU,CACRK,SAAUR,IAGd,CACEe,MAAO","file":"highlight/rust.js?v=286b08213707a11f1f31","sourcesContent":["/*\nLanguage: Rust\nAuthor: Andrey Vlasovskikh <andrey.vlasovskikh@gmail.com>\nContributors: Roman Shmatov <romanshmatov@gmail.com>, Kasper Andersen <kma_untrusted@protonmail.com>\nWebsite: https://www.rust-lang.org\nCategory: common, system\n*/\n\nfunction rust(hljs) {\n  const NUM_SUFFIX = '([ui](8|16|32|64|128|size)|f(32|64))\\?';\n  const KEYWORDS =\n    'abstract as async await become box break const continue crate do dyn ' +\n    'else enum extern false final fn for if impl in let loop macro match mod ' +\n    'move mut override priv pub ref return self Self static struct super ' +\n    'trait true try type typeof unsafe unsized use virtual where while yield';\n  const BUILTINS =\n    // functions\n    'drop ' +\n    // types\n    'i8 i16 i32 i64 i128 isize ' +\n    'u8 u16 u32 u64 u128 usize ' +\n    'f32 f64 ' +\n    'str char bool ' +\n    'Box Option Result String Vec ' +\n    // traits\n    'Copy Send Sized Sync Drop Fn FnMut FnOnce ToOwned Clone Debug ' +\n    'PartialEq PartialOrd Eq Ord AsRef AsMut Into From Default Iterator ' +\n    'Extend IntoIterator DoubleEndedIterator ExactSizeIterator ' +\n    'SliceConcatExt ToString ' +\n    // macros\n    'assert! assert_eq! bitflags! bytes! cfg! col! concat! concat_idents! ' +\n    'debug_assert! debug_assert_eq! env! panic! file! format! format_args! ' +\n    'include_bin! include_str! line! local_data_key! module_path! ' +\n    'option_env! print! println! select! stringify! try! unimplemented! ' +\n    'unreachable! vec! write! writeln! macro_rules! assert_ne! debug_assert_ne!';\n  return {\n    name: 'Rust',\n    aliases: [ 'rs' ],\n    keywords: {\n      $pattern: hljs.IDENT_RE + '!?',\n      keyword:\n        KEYWORDS,\n      literal:\n        'true false Some None Ok Err',\n      built_in:\n        BUILTINS\n    },\n    illegal: '</',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.COMMENT('/\\\\*', '\\\\*/', {\n        contains: [ 'self' ]\n      }),\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {\n        begin: /b?\"/,\n        illegal: null\n      }),\n      {\n        className: 'string',\n        variants: [\n          {\n            begin: /r(#*)\"(.|\\n)*?\"\\1(?!#)/\n          },\n          {\n            begin: /b?'\\\\?(x\\w{2}|u\\w{4}|U\\w{8}|.)'/\n          }\n        ]\n      },\n      {\n        className: 'symbol',\n        begin: /'[a-zA-Z_][a-zA-Z0-9_]*/\n      },\n      {\n        className: 'number',\n        variants: [\n          {\n            begin: '\\\\b0b([01_]+)' + NUM_SUFFIX\n          },\n          {\n            begin: '\\\\b0o([0-7_]+)' + NUM_SUFFIX\n          },\n          {\n            begin: '\\\\b0x([A-Fa-f0-9_]+)' + NUM_SUFFIX\n          },\n          {\n            begin: '\\\\b(\\\\d[\\\\d_]*(\\\\.[0-9_]+)?([eE][+-]?[0-9_]+)?)' +\n                   NUM_SUFFIX\n          }\n        ],\n        relevance: 0\n      },\n      {\n        className: 'function',\n        beginKeywords: 'fn',\n        end: '(\\\\(|<)',\n        excludeEnd: true,\n        contains: [ hljs.UNDERSCORE_TITLE_MODE ]\n      },\n      {\n        className: 'meta',\n        begin: '#!?\\\\[',\n        end: '\\\\]',\n        contains: [\n          {\n            className: 'meta-string',\n            begin: /\"/,\n            end: /\"/\n          }\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'type',\n        end: ';',\n        contains: [\n          hljs.inherit(hljs.UNDERSCORE_TITLE_MODE, {\n            endsParent: true\n          })\n        ],\n        illegal: '\\\\S'\n      },\n      {\n        className: 'class',\n        beginKeywords: 'trait enum struct union',\n        end: /\\{/,\n        contains: [\n          hljs.inherit(hljs.UNDERSCORE_TITLE_MODE, {\n            endsParent: true\n          })\n        ],\n        illegal: '[\\\\w\\\\d]'\n      },\n      {\n        begin: hljs.IDENT_RE + '::',\n        keywords: {\n          built_in: BUILTINS\n        }\n      },\n      {\n        begin: '->'\n      }\n    ]\n  };\n}\n\nmodule.exports = rust;\n"],"sourceRoot":""}