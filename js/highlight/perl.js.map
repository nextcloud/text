{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/perl.js"],"names":["source","re","concat","args","joined","map","x","join","module","exports","hljs","REGEX_MODIFIERS","PERL_KEYWORDS","$pattern","keyword","SUBST","className","begin","end","keywords","METHOD","VAR","variants","relevance","STRING_CONTAINS","BACKSLASH_ESCAPE","PERL_DEFAULT_CONTAINS","HASH_COMMENT_MODE","COMMENT","endsWithParent","contains","RE_STARTERS_RE","beginKeywords","excludeEnd","TITLE_MODE","subLanguage","name","aliases"],"mappings":"oGASA,SAASA,EAAOC,GACd,OAAKA,EACa,iBAAPA,EAAwBA,EAE5BA,EAAGD,OAHM,KAUlB,SAASE,IAAgB,2BAANC,EAAM,yBAANA,EAAM,gBACvB,IAAMC,EAASD,EAAKE,KAAI,SAACC,GAAD,OAAON,EAAOM,MAAIC,KAAK,IAC/C,OAAOH,EAyNTI,EAAOC,QA9MP,SAAcC,GAEZ,IAAMC,EAAkB,qBAClBC,EAAgB,CACpBC,SAAU,SACVC,QAAS,+iDAoBLC,EAAQ,CACZC,UAAW,QACXC,MAAO,UACPC,IAAK,MACLC,SAAUP,GAENQ,EAAS,CACbH,MAAO,OACPC,IAAK,MAGDG,EAAM,CACVC,SAAU,CACR,CACEL,MAAO,QAET,CACEA,MAAOf,EACL,iDADW,0BAOf,CACEe,MAAO,gBACPM,UAAW,KAIXC,EAAkB,CACtBd,EAAKe,iBACLV,EACAM,GAEIK,EAAwB,CAC5BL,EACAX,EAAKiB,kBACLjB,EAAKkB,QACH,OACA,OACA,CACEC,gBAAgB,IAGpBT,EACA,CACEJ,UAAW,SACXc,SAAUN,EACVF,SAAU,CACR,CACEL,MAAO,kBACPC,IAAK,MACLK,UAAW,GAEb,CACEN,MAAO,kBACPC,IAAK,MACLK,UAAW,GAEb,CACEN,MAAO,kBACPC,IAAK,MACLK,UAAW,GAEb,CACEN,MAAO,kBACPC,IAAK,MACLK,UAAW,GAEb,CACEN,MAAO,gBACPC,IAAK,IACLK,UAAW,GAEb,CACEN,MAAO,UACPC,IAAK,IACLK,UAAW,GAEb,CACEN,MAAO,IACPC,IAAK,IACLY,SAAU,CAAEpB,EAAKe,mBAEnB,CACER,MAAO,IACPC,IAAK,KAEP,CACED,MAAO,IACPC,IAAK,IACLY,SAAU,CAAEpB,EAAKe,mBAEnB,CACER,MAAO,UACPa,SAAU,GACVP,UAAW,GAEb,CACEN,MAAO,eACPa,SAAU,GACVP,UAAW,KAIjB,CACEP,UAAW,SACXC,MAAO,4EACPM,UAAW,GAEb,CACEN,MAAO,WAAaP,EAAKqB,eAAiB,gDAC1CZ,SAAU,kCACVI,UAAW,EACXO,SAAU,CACRpB,EAAKiB,kBACL,CACEX,UAAW,SACXC,MAAOf,EACL,WACA,KACA,iBACA,KACA,iBACA,KACAS,GAEFY,UAAW,IAEb,CACEP,UAAW,SACXC,MAAO,YACPC,IAAKhB,EACH,KACAS,GAEFmB,SAAU,CAAEpB,EAAKe,kBACjBF,UAAW,KAIjB,CACEP,UAAW,WACXgB,cAAe,MACfd,IAAK,uBACLe,YAAY,EACZV,UAAW,EACXO,SAAU,CAAEpB,EAAKwB,aAEnB,CACEjB,MAAO,UACPM,UAAW,GAEb,CACEN,MAAO,aACPC,IAAK,YACLiB,YAAa,cACbL,SAAU,CACR,CACEb,MAAO,QACPC,IAAK,IACLF,UAAW,cAQnB,OAHAD,EAAMe,SAAWJ,EACjBN,EAAOU,SAAWJ,EAEX,CACLU,KAAM,OACNC,QAAS,CACP,KACA,MAEFlB,SAAUP,EACVkB,SAAUJ","file":"highlight/perl.js?v=477486ef2c69788f97f6","sourcesContent":["/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: Perl\nAuthor: Peter Leonov <gojpeg@yandex.ru>\nWebsite: https://www.perl.org\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction perl(hljs) {\n  // https://perldoc.perl.org/perlre#Modifiers\n  const REGEX_MODIFIERS = /[dualxmsipn]{0,12}/; // aa and xx are valid, making max length 12\n  const PERL_KEYWORDS = {\n    $pattern: /[\\w.]+/,\n    keyword: 'getpwent getservent quotemeta msgrcv scalar kill dbmclose undef lc ' +\n    'ma syswrite tr send umask sysopen shmwrite vec qx utime local oct semctl localtime ' +\n    'readpipe do return format read sprintf dbmopen pop getpgrp not getpwnam rewinddir qq ' +\n    'fileno qw endprotoent wait sethostent bless s|0 opendir continue each sleep endgrent ' +\n    'shutdown dump chomp connect getsockname die socketpair close flock exists index shmget ' +\n    'sub for endpwent redo lstat msgctl setpgrp abs exit select print ref gethostbyaddr ' +\n    'unshift fcntl syscall goto getnetbyaddr join gmtime symlink semget splice x|0 ' +\n    'getpeername recv log setsockopt cos last reverse gethostbyname getgrnam study formline ' +\n    'endhostent times chop length gethostent getnetent pack getprotoent getservbyname rand ' +\n    'mkdir pos chmod y|0 substr endnetent printf next open msgsnd readdir use unlink ' +\n    'getsockopt getpriority rindex wantarray hex system getservbyport endservent int chr ' +\n    'untie rmdir prototype tell listen fork shmread ucfirst setprotoent else sysseek link ' +\n    'getgrgid shmctl waitpid unpack getnetbyname reset chdir grep split require caller ' +\n    'lcfirst until warn while values shift telldir getpwuid my getprotobynumber delete and ' +\n    'sort uc defined srand accept package seekdir getprotobyname semop our rename seek if q|0 ' +\n    'chroot sysread setpwent no crypt getc chown sqrt write setnetent setpriority foreach ' +\n    'tie sin msgget map stat getlogin unless elsif truncate exec keys glob tied closedir ' +\n    'ioctl socket readlink eval xor readline binmode setservent eof ord bind alarm pipe ' +\n    'atan2 getgrent exp time push setgrent gt lt or ne m|0 break given say state when'\n  };\n  const SUBST = {\n    className: 'subst',\n    begin: '[$@]\\\\{',\n    end: '\\\\}',\n    keywords: PERL_KEYWORDS\n  };\n  const METHOD = {\n    begin: /->\\{/,\n    end: /\\}/\n    // contains defined later\n  };\n  const VAR = {\n    variants: [\n      {\n        begin: /\\$\\d/\n      },\n      {\n        begin: concat(\n          /[$%@](\\^\\w\\b|#\\w+(::\\w+)*|\\{\\w+\\}|\\w+(::\\w*)*)/,\n          // negative look-ahead tries to avoid matching patterns that are not\n          // Perl at all like $ident$, @ident@, etc.\n          `(?![A-Za-z])(?![@$%])`\n        )\n      },\n      {\n        begin: /[$%@][^\\s\\w{]/,\n        relevance: 0\n      }\n    ]\n  };\n  const STRING_CONTAINS = [\n    hljs.BACKSLASH_ESCAPE,\n    SUBST,\n    VAR\n  ];\n  const PERL_DEFAULT_CONTAINS = [\n    VAR,\n    hljs.HASH_COMMENT_MODE,\n    hljs.COMMENT(\n      /^=\\w/,\n      /=cut/,\n      {\n        endsWithParent: true\n      }\n    ),\n    METHOD,\n    {\n      className: 'string',\n      contains: STRING_CONTAINS,\n      variants: [\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\(',\n          end: '\\\\)',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\[',\n          end: '\\\\]',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\{',\n          end: '\\\\}',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\|',\n          end: '\\\\|',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*<',\n          end: '>',\n          relevance: 5\n        },\n        {\n          begin: 'qw\\\\s+q',\n          end: 'q',\n          relevance: 5\n        },\n        {\n          begin: '\\'',\n          end: '\\'',\n          contains: [ hljs.BACKSLASH_ESCAPE ]\n        },\n        {\n          begin: '\"',\n          end: '\"'\n        },\n        {\n          begin: '`',\n          end: '`',\n          contains: [ hljs.BACKSLASH_ESCAPE ]\n        },\n        {\n          begin: /\\{\\w+\\}/,\n          contains: [],\n          relevance: 0\n        },\n        {\n          begin: '-?\\\\w+\\\\s*=>',\n          contains: [],\n          relevance: 0\n        }\n      ]\n    },\n    {\n      className: 'number',\n      begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n      relevance: 0\n    },\n    { // regexp container\n      begin: '(\\\\/\\\\/|' + hljs.RE_STARTERS_RE + '|\\\\b(split|return|print|reverse|grep)\\\\b)\\\\s*',\n      keywords: 'split return print reverse grep',\n      relevance: 0,\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        {\n          className: 'regexp',\n          begin: concat(\n            /(s|tr|y)/,\n            /\\//,\n            /(\\\\.|[^\\\\\\/])*/,\n            /\\//,\n            /(\\\\.|[^\\\\\\/])*/,\n            /\\//,\n            REGEX_MODIFIERS,\n          ),\n          relevance: 10\n        },\n        {\n          className: 'regexp',\n          begin: /(m|qr)?\\//,\n          end: concat(\n            /\\//,\n            REGEX_MODIFIERS\n          ),\n          contains: [ hljs.BACKSLASH_ESCAPE ],\n          relevance: 0 // allows empty \"//\" which is a common comment delimiter in other languages\n        }\n      ]\n    },\n    {\n      className: 'function',\n      beginKeywords: 'sub',\n      end: '(\\\\s*\\\\(.*?\\\\))?[;{]',\n      excludeEnd: true,\n      relevance: 5,\n      contains: [ hljs.TITLE_MODE ]\n    },\n    {\n      begin: '-\\\\w\\\\b',\n      relevance: 0\n    },\n    {\n      begin: \"^__DATA__$\",\n      end: \"^__END__$\",\n      subLanguage: 'mojolicious',\n      contains: [\n        {\n          begin: \"^@@.*\",\n          end: \"$\",\n          className: \"comment\"\n        }\n      ]\n    }\n  ];\n  SUBST.contains = PERL_DEFAULT_CONTAINS;\n  METHOD.contains = PERL_DEFAULT_CONTAINS;\n\n  return {\n    name: 'Perl',\n    aliases: [\n      'pl',\n      'pm'\n    ],\n    keywords: PERL_KEYWORDS,\n    contains: PERL_DEFAULT_CONTAINS\n  };\n}\n\nmodule.exports = perl;\n"],"sourceRoot":""}