{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/perl.js"],"names":["module","exports","hljs","PERL_KEYWORDS","SUBST","className","begin","end","keywords","METHOD","VAR","variants","relevance","STRING_CONTAINS","BACKSLASH_ESCAPE","PERL_DEFAULT_CONTAINS","HASH_COMMENT_MODE","COMMENT","endsWithParent","contains","RE_STARTERS_RE","beginKeywords","excludeEnd","TITLE_MODE","subLanguage","aliases","lexemes"],"mappings":"qFAAAA,EAAOC,QAAU,SAASC,GACxB,IAAIC,EAAgB,2iDAmBhBC,EAAQ,CACVC,UAAW,QACXC,MAAO,UAAWC,IAAK,MACvBC,SAAUL,GAERM,EAAS,CACXH,MAAO,MAAOC,IAAK,KAGjBG,EAAM,CACRC,SAAU,CACR,CAACL,MAAO,QACR,CAACA,MAAO,iDACR,CAACA,MAAO,iBAAkBM,UAAW,KAGrCC,EAAkB,CAACX,EAAKY,iBAAkBV,EAAOM,GACjDK,EAAwB,CAC1BL,EACAR,EAAKc,kBACLd,EAAKe,QACH,UACA,SACA,CACEC,gBAAgB,IAGpBT,EACA,CACEJ,UAAW,SACXc,SAAUN,EACVF,SAAU,CACR,CACEL,MAAO,kBAAmBC,IAAK,MAC/BK,UAAW,GAEb,CACEN,MAAO,kBAAmBC,IAAK,MAC/BK,UAAW,GAEb,CACEN,MAAO,kBAAmBC,IAAK,MAC/BK,UAAW,GAEb,CACEN,MAAO,kBAAmBC,IAAK,MAC/BK,UAAW,GAEb,CACEN,MAAO,kBAAmBC,IAAK,MAC/BK,UAAW,GAEb,CACEN,MAAO,UAAWC,IAAK,IACvBK,UAAW,GAEb,CACEN,MAAO,IAAMC,IAAK,IAClBY,SAAU,CAACjB,EAAKY,mBAElB,CACER,MAAO,IAAKC,IAAK,KAEnB,CACED,MAAO,IAAKC,IAAK,IACjBY,SAAU,CAACjB,EAAKY,mBAElB,CACER,MAAO,SACPa,SAAU,GACVP,UAAW,GAEb,CACEN,MAAO,mBACPa,SAAU,GACVP,UAAW,KAIjB,CACEP,UAAW,SACXC,MAAO,4EACPM,UAAW,GAEb,CACEN,MAAO,WAAaJ,EAAKkB,eAAiB,gDAC1CZ,SAAU,kCACVI,UAAW,EACXO,SAAU,CACRjB,EAAKc,kBACL,CACEX,UAAW,SACXC,MAAO,8CACPM,UAAW,IAEb,CACEP,UAAW,SACXC,MAAO,WAAYC,IAAK,UACxBY,SAAU,CAACjB,EAAKY,kBAChBF,UAAW,KAIjB,CACEP,UAAW,WACXgB,cAAe,MAAOd,IAAK,uBAAwBe,YAAY,EAC/DV,UAAW,EACXO,SAAU,CAACjB,EAAKqB,aAElB,CACEjB,MAAO,UACPM,UAAW,GAEb,CACEN,MAAO,aACPC,IAAK,YACLiB,YAAa,cACbL,SAAU,CACR,CACIb,MAAO,QACPC,IAAK,IACLF,UAAW,cAQrB,OAHAD,EAAMe,SAAWJ,EACjBN,EAAOU,SAAWJ,EAEX,CACLU,QAAS,CAAC,KAAM,MAChBC,QAAS,UACTlB,SAAUL,EACVgB,SAAUJ","file":"highlight/perl.js?v=b460eb32c9dbb66ec435","sourcesContent":["module.exports = function(hljs) {\n  var PERL_KEYWORDS = 'getpwent getservent quotemeta msgrcv scalar kill dbmclose undef lc ' +\n    'ma syswrite tr send umask sysopen shmwrite vec qx utime local oct semctl localtime ' +\n    'readpipe do return format read sprintf dbmopen pop getpgrp not getpwnam rewinddir qq' +\n    'fileno qw endprotoent wait sethostent bless s|0 opendir continue each sleep endgrent ' +\n    'shutdown dump chomp connect getsockname die socketpair close flock exists index shmget' +\n    'sub for endpwent redo lstat msgctl setpgrp abs exit select print ref gethostbyaddr ' +\n    'unshift fcntl syscall goto getnetbyaddr join gmtime symlink semget splice x|0 ' +\n    'getpeername recv log setsockopt cos last reverse gethostbyname getgrnam study formline ' +\n    'endhostent times chop length gethostent getnetent pack getprotoent getservbyname rand ' +\n    'mkdir pos chmod y|0 substr endnetent printf next open msgsnd readdir use unlink ' +\n    'getsockopt getpriority rindex wantarray hex system getservbyport endservent int chr ' +\n    'untie rmdir prototype tell listen fork shmread ucfirst setprotoent else sysseek link ' +\n    'getgrgid shmctl waitpid unpack getnetbyname reset chdir grep split require caller ' +\n    'lcfirst until warn while values shift telldir getpwuid my getprotobynumber delete and ' +\n    'sort uc defined srand accept package seekdir getprotobyname semop our rename seek if q|0 ' +\n    'chroot sysread setpwent no crypt getc chown sqrt write setnetent setpriority foreach ' +\n    'tie sin msgget map stat getlogin unless elsif truncate exec keys glob tied closedir' +\n    'ioctl socket readlink eval xor readline binmode setservent eof ord bind alarm pipe ' +\n    'atan2 getgrent exp time push setgrent gt lt or ne m|0 break given say state when';\n  var SUBST = {\n    className: 'subst',\n    begin: '[$@]\\\\{', end: '\\\\}',\n    keywords: PERL_KEYWORDS\n  };\n  var METHOD = {\n    begin: '->{', end: '}'\n    // contains defined later\n  };\n  var VAR = {\n    variants: [\n      {begin: /\\$\\d/},\n      {begin: /[\\$%@](\\^\\w\\b|#\\w+(::\\w+)*|{\\w+}|\\w+(::\\w*)*)/},\n      {begin: /[\\$%@][^\\s\\w{]/, relevance: 0}\n    ]\n  };\n  var STRING_CONTAINS = [hljs.BACKSLASH_ESCAPE, SUBST, VAR];\n  var PERL_DEFAULT_CONTAINS = [\n    VAR,\n    hljs.HASH_COMMENT_MODE,\n    hljs.COMMENT(\n      '^\\\\=\\\\w',\n      '\\\\=cut',\n      {\n        endsWithParent: true\n      }\n    ),\n    METHOD,\n    {\n      className: 'string',\n      contains: STRING_CONTAINS,\n      variants: [\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\(', end: '\\\\)',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\[', end: '\\\\]',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\{', end: '\\\\}',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\|', end: '\\\\|',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\<', end: '\\\\>',\n          relevance: 5\n        },\n        {\n          begin: 'qw\\\\s+q', end: 'q',\n          relevance: 5\n        },\n        {\n          begin: '\\'', end: '\\'',\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: '\"', end: '\"'\n        },\n        {\n          begin: '`', end: '`',\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: '{\\\\w+}',\n          contains: [],\n          relevance: 0\n        },\n        {\n          begin: '\\-?\\\\w+\\\\s*\\\\=\\\\>',\n          contains: [],\n          relevance: 0\n        }\n      ]\n    },\n    {\n      className: 'number',\n      begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n      relevance: 0\n    },\n    { // regexp container\n      begin: '(\\\\/\\\\/|' + hljs.RE_STARTERS_RE + '|\\\\b(split|return|print|reverse|grep)\\\\b)\\\\s*',\n      keywords: 'split return print reverse grep',\n      relevance: 0,\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        {\n          className: 'regexp',\n          begin: '(s|tr|y)/(\\\\\\\\.|[^/])*/(\\\\\\\\.|[^/])*/[a-z]*',\n          relevance: 10\n        },\n        {\n          className: 'regexp',\n          begin: '(m|qr)?/', end: '/[a-z]*',\n          contains: [hljs.BACKSLASH_ESCAPE],\n          relevance: 0 // allows empty \"//\" which is a common comment delimiter in other languages\n        }\n      ]\n    },\n    {\n      className: 'function',\n      beginKeywords: 'sub', end: '(\\\\s*\\\\(.*?\\\\))?[;{]', excludeEnd: true,\n      relevance: 5,\n      contains: [hljs.TITLE_MODE]\n    },\n    {\n      begin: '-\\\\w\\\\b',\n      relevance: 0\n    },\n    {\n      begin: \"^__DATA__$\",\n      end: \"^__END__$\",\n      subLanguage: 'mojolicious',\n      contains: [\n        {\n            begin: \"^@@.*\",\n            end: \"$\",\n            className: \"comment\"\n        }\n      ]\n    }\n  ];\n  SUBST.contains = PERL_DEFAULT_CONTAINS;\n  METHOD.contains = PERL_DEFAULT_CONTAINS;\n\n  return {\n    aliases: ['pl', 'pm'],\n    lexemes: /[\\w\\.]+/,\n    keywords: PERL_KEYWORDS,\n    contains: PERL_DEFAULT_CONTAINS\n  };\n};"],"sourceRoot":""}