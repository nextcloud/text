{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/livescript.js"],"names":["module","exports","hljs","KEYWORDS","keyword","literal","built_in","JS_IDENT_RE","TITLE","inherit","TITLE_MODE","begin","SUBST","className","end","keywords","SUBST_SIMPLE","EXPRESSIONS","BINARY_NUMBER_MODE","relevance","starts","variants","contains","BACKSLASH_ESCAPE","excludeEnd","HASH_COMMENT_MODE","excludeBegin","subLanguage","PARAMS","returnBegin","concat","aliases","illegal","COMMENT","beginKeywords","endsWithParent","returnEnd"],"mappings":"oFAAAA,EAAOC,QAAU,SAASC,GACxB,IAAIC,EAAW,CACbC,QAEE,8WAMFC,QAEE,uDAGFC,SACE,2DAEAC,EAAc,8CACdC,EAAQN,EAAKO,QAAQP,EAAKQ,WAAY,CAACC,MAAOJ,IAC9CK,EAAQ,CACVC,UAAW,QACXF,MAAO,MAAOG,IAAK,IACnBC,SAAUZ,GAERa,EAAe,CACjBH,UAAW,QACXF,MAAO,cAAeG,IAAK,qCAC3BC,SAAUZ,GAERc,EAAc,CAChBf,EAAKgB,mBACL,CACEL,UAAW,SACXF,MAAO,0GACPQ,UAAW,EACXC,OAAQ,CAACN,IAAK,WAAYK,UAAW,IAEvC,CACEN,UAAW,SACXQ,SAAU,CACR,CACEV,MAAO,MAAOG,IAAK,MACnBQ,SAAU,CAACpB,EAAKqB,mBAElB,CACEZ,MAAO,IAAKG,IAAK,IACjBQ,SAAU,CAACpB,EAAKqB,mBAElB,CACEZ,MAAO,MAAOG,IAAK,MACnBQ,SAAU,CAACpB,EAAKqB,iBAAkBX,EAAOI,IAE3C,CACEL,MAAO,IAAKG,IAAK,IACjBQ,SAAU,CAACpB,EAAKqB,iBAAkBX,EAAOI,IAE3C,CACEL,MAAO,KAAMG,IAAK,SAClBU,YAAY,KAIlB,CACEX,UAAW,SACXQ,SAAU,CACR,CACEV,MAAO,KAAMG,IAAK,WAClBQ,SAAU,CAACV,EAAOV,EAAKuB,oBAEzB,CAGEd,MAAO,0CAIb,CACEA,MAAO,IAAMJ,GAEf,CACEI,MAAO,KAAMG,IAAK,KAClBY,cAAc,EAAMF,YAAY,EAChCG,YAAa,eAGjBf,EAAMU,SAAWL,EAEjB,IAAIW,EAAS,CACXf,UAAW,SACXF,MAAO,MAAOkB,aAAa,EAG3BP,SAAU,CACR,CACEX,MAAO,KAAMG,IAAK,KAClBC,SAAUZ,EACVmB,SAAU,CAAC,QAAQQ,OAAOb,MAKhC,MAAO,CACLc,QAAS,CAAC,MACVhB,SAAUZ,EACV6B,QAAS,OACTV,SAAUL,EAAYa,OAAO,CAC3B5B,EAAK+B,QAAQ,SAAU,UACvB/B,EAAKuB,kBACL,CACEZ,UAAW,WACXS,SAAU,CAACd,EAAOoB,GAClBC,aAAa,EACbR,SAAU,CACR,CACEV,MAAO,IAAMJ,EAAc,+CAAgDO,IAAK,YAElF,CACEH,MAAO,IAAMJ,EAAc,uDAAwDO,IAAK,kBAE1F,CACEH,MAAO,IAAMJ,EAAc,uDAAwDO,IAAK,sBAI9F,CACED,UAAW,QACXqB,cAAe,QACfpB,IAAK,IACLkB,QAAS,YACTV,SAAU,CACR,CACEY,cAAe,UACfC,gBAAgB,EAChBH,QAAS,YACTV,SAAU,CAACd,IAEbA,IAGJ,CACEG,MAAOJ,EAAc,IAAKO,IAAK,IAC/Be,aAAa,EAAMO,WAAW,EAC9BjB,UAAW","file":"highlight/livescript.js?v=6ba15eba0ff93f9dfffa","sourcesContent":["module.exports = function(hljs) {\n  var KEYWORDS = {\n    keyword:\n      // JS keywords\n      'in if for while finally new do return else break catch instanceof throw try this ' +\n      'switch continue typeof delete debugger case default function var with ' +\n      // LiveScript keywords\n      'then unless until loop of by when and or is isnt not it that otherwise from to til fallthrough super ' +\n      'case default function var void const let enum export import native ' +\n      '__hasProp __extends __slice __bind __indexOf',\n    literal:\n      // JS literals\n      'true false null undefined ' +\n      // LiveScript literals\n      'yes no on off it that void',\n    built_in:\n      'npm require console print module global window document'\n  };\n  var JS_IDENT_RE = '[A-Za-z$_](?:\\-[0-9A-Za-z$_]|[0-9A-Za-z$_])*';\n  var TITLE = hljs.inherit(hljs.TITLE_MODE, {begin: JS_IDENT_RE});\n  var SUBST = {\n    className: 'subst',\n    begin: /#\\{/, end: /}/,\n    keywords: KEYWORDS\n  };\n  var SUBST_SIMPLE = {\n    className: 'subst',\n    begin: /#[A-Za-z$_]/, end: /(?:\\-[0-9A-Za-z$_]|[0-9A-Za-z$_])*/,\n    keywords: KEYWORDS\n  };\n  var EXPRESSIONS = [\n    hljs.BINARY_NUMBER_MODE,\n    {\n      className: 'number',\n      begin: '(\\\\b0[xX][a-fA-F0-9_]+)|(\\\\b\\\\d(\\\\d|_\\\\d)*(\\\\.(\\\\d(\\\\d|_\\\\d)*)?)?(_*[eE]([-+]\\\\d(_\\\\d|\\\\d)*)?)?[_a-z]*)',\n      relevance: 0,\n      starts: {end: '(\\\\s*/)?', relevance: 0} // a number tries to eat the following slash to prevent treating it as a regexp\n    },\n    {\n      className: 'string',\n      variants: [\n        {\n          begin: /'''/, end: /'''/,\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: /'/, end: /'/,\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: /\"\"\"/, end: /\"\"\"/,\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST, SUBST_SIMPLE]\n        },\n        {\n          begin: /\"/, end: /\"/,\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST, SUBST_SIMPLE]\n        },\n        {\n          begin: /\\\\/, end: /(\\s|$)/,\n          excludeEnd: true\n        }\n      ]\n    },\n    {\n      className: 'regexp',\n      variants: [\n        {\n          begin: '//', end: '//[gim]*',\n          contains: [SUBST, hljs.HASH_COMMENT_MODE]\n        },\n        {\n          // regex can't start with space to parse x / 2 / 3 as two divisions\n          // regex can't start with *, and it supports an \"illegal\" in the main mode\n          begin: /\\/(?![ *])(\\\\\\/|.)*?\\/[gim]*(?=\\W|$)/\n        }\n      ]\n    },\n    {\n      begin: '@' + JS_IDENT_RE\n    },\n    {\n      begin: '``', end: '``',\n      excludeBegin: true, excludeEnd: true,\n      subLanguage: 'javascript'\n    }\n  ];\n  SUBST.contains = EXPRESSIONS;\n\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\(', returnBegin: true,\n    /* We need another contained nameless mode to not have every nested\n    pair of parens to be called \"params\" */\n    contains: [\n      {\n        begin: /\\(/, end: /\\)/,\n        keywords: KEYWORDS,\n        contains: ['self'].concat(EXPRESSIONS)\n      }\n    ]\n  };\n\n  return {\n    aliases: ['ls'],\n    keywords: KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: EXPRESSIONS.concat([\n      hljs.COMMENT('\\\\/\\\\*', '\\\\*\\\\/'),\n      hljs.HASH_COMMENT_MODE,\n      {\n        className: 'function',\n        contains: [TITLE, PARAMS],\n        returnBegin: true,\n        variants: [\n          {\n            begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?(\\\\(.*\\\\))?\\\\s*\\\\B\\\\->\\\\*?', end: '\\\\->\\\\*?'\n          },\n          {\n            begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?!?(\\\\(.*\\\\))?\\\\s*\\\\B[-~]{1,2}>\\\\*?', end: '[-~]{1,2}>\\\\*?'\n          },\n          {\n            begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?(\\\\(.*\\\\))?\\\\s*\\\\B!?[-~]{1,2}>\\\\*?', end: '!?[-~]{1,2}>\\\\*?'\n          }\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class',\n        end: '$',\n        illegal: /[:=\"\\[\\]]/,\n        contains: [\n          {\n            beginKeywords: 'extends',\n            endsWithParent: true,\n            illegal: /[:=\"\\[\\]]/,\n            contains: [TITLE]\n          },\n          TITLE\n        ]\n      },\n      {\n        begin: JS_IDENT_RE + ':', end: ':',\n        returnBegin: true, returnEnd: true,\n        relevance: 0\n      }\n    ])\n  };\n};"],"sourceRoot":""}