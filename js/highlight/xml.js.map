{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/xml.js"],"names":["module","exports","hljs","TAG_INTERNALS","endsWithParent","illegal","relevance","contains","className","begin","endsParent","variants","end","aliases","case_insensitive","COMMENT","subLanguage","skip","inherit","APOS_STRING_MODE","QUOTE_STRING_MODE","keywords","name","starts","returnEnd"],"mappings":"qFAAAA,EAAOC,QAAU,SAASC,GACxB,IACIC,EAAgB,CAClBC,gBAAgB,EAChBC,QAAS,IACTC,UAAW,EACXC,SAAU,CACR,CACEC,UAAW,OACXC,MARa,qBASbH,UAAW,GAEb,CACEG,MAAO,OACPH,UAAW,EACXC,SAAU,CACR,CACEC,UAAW,SACXE,YAAY,EACZC,SAAU,CACR,CAACF,MAAO,IAAKG,IAAK,KAClB,CAACH,MAAO,IAAKG,IAAK,KAClB,CAACH,MAAO,sBAOpB,MAAO,CACLI,QAAS,CAAC,OAAQ,QAAS,MAAO,OAAQ,MAAO,MAAO,MAAO,QAAS,OACxEC,kBAAkB,EAClBP,SAAU,CACR,CACEC,UAAW,OACXC,MAAO,YAAaG,IAAK,IACzBN,UAAW,GACXC,SAAU,CAAC,CAACE,MAAO,MAAOG,IAAK,SAEjCV,EAAKa,QACH,UACA,SACA,CACET,UAAW,KAGf,CACEG,MAAO,kBAAmBG,IAAK,UAC/BN,UAAW,IAEb,CACEE,UAAW,OACXC,MAAO,SAAUG,IAAK,MAAON,UAAW,IAE1C,CACEG,MAAO,YAAaG,IAAK,MACzBI,YAAa,MACbT,SAAU,CAGR,CAACE,MAAO,OAAQG,IAAK,OAAQK,MAAM,GACnC,CAACR,MAAO,KAAMG,IAAK,IAAKK,MAAM,GAC9B,CAACR,MAAO,KAAOG,IAAK,IAAMK,MAAM,GAChCf,EAAKgB,QAAQhB,EAAKiB,iBAAkB,CAACd,QAAS,KAAMG,UAAW,KAAMD,SAAU,KAAMU,MAAM,IAC3Ff,EAAKgB,QAAQhB,EAAKkB,kBAAmB,CAACf,QAAS,KAAMG,UAAW,KAAMD,SAAU,KAAMU,MAAM,MAGhG,CACET,UAAW,MAOXC,MAAO,oBAAqBG,IAAK,IACjCS,SAAU,CAACC,KAAM,SACjBf,SAAU,CAACJ,GACXoB,OAAQ,CACNX,IAAK,WAAYY,WAAW,EAC5BR,YAAa,CAAC,MAAO,SAGzB,CACER,UAAW,MAEXC,MAAO,qBAAsBG,IAAK,IAClCS,SAAU,CAACC,KAAM,UACjBf,SAAU,CAACJ,GACXoB,OAAQ,CACNX,IAAK,aAAgBY,WAAW,EAChCR,YAAa,CAAC,eAAgB,aAAc,aAAc,MAAO,cAGrE,CACER,UAAW,MACXC,MAAO,MAAOG,IAAK,MACnBL,SAAU,CACR,CACEC,UAAW,OAAQC,MAAO,aAAcH,UAAW,GAErDH","file":"highlight/xml.js?v=8d6b613ca7839a66e3bd","sourcesContent":["module.exports = function(hljs) {\n  var XML_IDENT_RE = '[A-Za-z0-9\\\\._:-]+';\n  var TAG_INTERNALS = {\n    endsWithParent: true,\n    illegal: /</,\n    relevance: 0,\n    contains: [\n      {\n        className: 'attr',\n        begin: XML_IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: /=\\s*/,\n        relevance: 0,\n        contains: [\n          {\n            className: 'string',\n            endsParent: true,\n            variants: [\n              {begin: /\"/, end: /\"/},\n              {begin: /'/, end: /'/},\n              {begin: /[^\\s\"'=<>`]+/}\n            ]\n          }\n        ]\n      }\n    ]\n  };\n  return {\n    aliases: ['html', 'xhtml', 'rss', 'atom', 'xjb', 'xsd', 'xsl', 'plist', 'wsf'],\n    case_insensitive: true,\n    contains: [\n      {\n        className: 'meta',\n        begin: '<!DOCTYPE', end: '>',\n        relevance: 10,\n        contains: [{begin: '\\\\[', end: '\\\\]'}]\n      },\n      hljs.COMMENT(\n        '<!--',\n        '-->',\n        {\n          relevance: 10\n        }\n      ),\n      {\n        begin: '<\\\\!\\\\[CDATA\\\\[', end: '\\\\]\\\\]>',\n        relevance: 10\n      },\n      {\n        className: 'meta',\n        begin: /<\\?xml/, end: /\\?>/, relevance: 10\n      },\n      {\n        begin: /<\\?(php)?/, end: /\\?>/,\n        subLanguage: 'php',\n        contains: [\n          // We don't want the php closing tag ?> to close the PHP block when\n          // inside any of the following blocks:\n          {begin: '/\\\\*', end: '\\\\*/', skip: true},\n          {begin: 'b\"', end: '\"', skip: true},\n          {begin: 'b\\'', end: '\\'', skip: true},\n          hljs.inherit(hljs.APOS_STRING_MODE, {illegal: null, className: null, contains: null, skip: true}),\n          hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null, className: null, contains: null, skip: true})\n        ]\n      },\n      {\n        className: 'tag',\n        /*\n        The lookahead pattern (?=...) ensures that 'begin' only matches\n        '<style' as a single word, followed by a whitespace or an\n        ending braket. The '$' is needed for the lexeme to be recognized\n        by hljs.subMode() that tests lexemes outside the stream.\n        */\n        begin: '<style(?=\\\\s|>|$)', end: '>',\n        keywords: {name: 'style'},\n        contains: [TAG_INTERNALS],\n        starts: {\n          end: '</style>', returnEnd: true,\n          subLanguage: ['css', 'xml']\n        }\n      },\n      {\n        className: 'tag',\n        // See the comment in the <style tag about the lookahead pattern\n        begin: '<script(?=\\\\s|>|$)', end: '>',\n        keywords: {name: 'script'},\n        contains: [TAG_INTERNALS],\n        starts: {\n          end: '\\<\\/script\\>', returnEnd: true,\n          subLanguage: ['actionscript', 'javascript', 'handlebars', 'xml', 'vbscript']\n        }\n      },\n      {\n        className: 'tag',\n        begin: '</?', end: '/?>',\n        contains: [\n          {\n            className: 'name', begin: /[^\\/><\\s]+/, relevance: 0\n          },\n          TAG_INTERNALS\n        ]\n      }\n    ]\n  };\n};"],"sourceRoot":""}