{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/arcade.js"],"names":["module","exports","hljs","IDENT_RE","KEYWORDS","keyword","literal","built_in","NUMBER","className","variants","begin","C_NUMBER_RE","relevance","SUBST","end","keywords","contains","TEMPLATE_STRING","BACKSLASH_ESCAPE","APOS_STRING_MODE","QUOTE_STRING_MODE","REGEXP_MODE","PARAMS_CONTAINS","concat","C_BLOCK_COMMENT_MODE","C_LINE_COMMENT_MODE","aliases","returnBegin","RE_STARTERS_RE","excludeBegin","excludeEnd","beginKeywords","inherit","TITLE_MODE","illegal"],"mappings":"mFAAAA,EAAOC,QAAU,SAASC,GACxB,IAAIC,EAAW,yBACXC,EAAW,CACbC,QACE,0DACFC,QACE,uGACFC,SACE,oyBAgBAC,EAAS,CACXC,UAAW,SACXC,SAAU,CACR,CAAEC,MAAO,mBACT,CAAEA,MAAO,oBACT,CAAEA,MAAOT,EAAKU,cAEhBC,UAAW,GAETC,EAAQ,CACVL,UAAW,QACXE,MAAO,SAAUI,IAAK,MACtBC,SAAUZ,EACVa,SAAU,IAERC,EAAkB,CACpBT,UAAW,SACXE,MAAO,IAAKI,IAAK,IACjBE,SAAU,CACRf,EAAKiB,iBACLL,IAGJA,EAAMG,SAAW,CACff,EAAKkB,iBACLlB,EAAKmB,kBACLH,EACAV,EACAN,EAAKoB,aAEP,IAAIC,EAAkBT,EAAMG,SAASO,OAAO,CAC1CtB,EAAKuB,qBACLvB,EAAKwB,sBAGP,MAAO,CACLC,QAAS,CAAC,UACVX,SAAUZ,EACVa,SAAU,CACRf,EAAKkB,iBACLlB,EAAKmB,kBACLH,EACAhB,EAAKwB,oBACLxB,EAAKuB,qBA/CI,CACXhB,UAAW,SACXE,MAAO,sCA+CLH,EACA,CACEG,MAAO,UAAWE,UAAW,EAC7BI,SAAU,CACR,CACEN,MAAOR,EAAW,QAASyB,aAAa,EACxCf,UAAW,EACXI,SAAU,CAAC,CAACR,UAAW,OAAQE,MAAOR,EAAUU,UAAW,OAIjE,CACEF,MAAO,IAAMT,EAAK2B,eAAiB,uBACnCb,SAAU,SACVC,SAAU,CACRf,EAAKwB,oBACLxB,EAAKuB,qBACLvB,EAAKoB,YACL,CACEb,UAAW,WACXE,MAAO,cAAgBR,EAAW,UAAWyB,aAAa,EAC1Db,IAAK,SACLE,SAAU,CACR,CACER,UAAW,SACXC,SAAU,CACR,CACEC,MAAOR,GAET,CACEQ,MAAO,WAET,CACEA,MAAO,KAAMI,IAAK,KAClBe,cAAc,EAAMC,YAAY,EAChCf,SAAUZ,EACVa,SAAUM,QAOtBV,UAAW,GAEb,CACEJ,UAAW,WACXuB,cAAe,WAAYjB,IAAK,KAAMgB,YAAY,EAClDd,SAAU,CACRf,EAAK+B,QAAQ/B,EAAKgC,WAAY,CAACvB,MAAOR,IACtC,CACEM,UAAW,SACXE,MAAO,KAAMI,IAAK,KAClBe,cAAc,EACdC,YAAY,EACZd,SAAUM,IAGdY,QAAS,QAEX,CACExB,MAAO,WAGXwB,QAAS","file":"highlight/arcade.js?v=f7ae4471b957c7feda2a","sourcesContent":["module.exports = function(hljs) {\n  var IDENT_RE = '[A-Za-z_][0-9A-Za-z_]*';\n  var KEYWORDS = {\n    keyword:\n      'if for while var new function do return void else break',\n    literal:\n      'true false null undefined NaN Infinity PI BackSlash DoubleQuote ForwardSlash NewLine SingleQuote Tab',\n    built_in:\n      'Abs Acos Area AreaGeodetic Asin Atan Atan2 Average Boolean Buffer BufferGeodetic ' +\n      'Ceil Centroid Clip Console Constrain Contains Cos Count Crosses Cut Date DateAdd ' +\n      'DateDiff Day Decode DefaultValue Dictionary Difference Disjoint Distance Distinct ' +\n      'DomainCode DomainName Equals Exp Extent Feature FeatureSet FeatureSetById FeatureSetByTitle ' +\n      'FeatureSetByUrl Filter First Floor Geometry Guid HasKey Hour IIf IndexOf Intersection ' +\n      'Intersects IsEmpty Length LengthGeodetic Log Max Mean Millisecond Min Minute Month ' +\n      'MultiPartToSinglePart Multipoint NextSequenceValue Now Number OrderBy Overlaps Point Polygon ' +\n      'Polyline Pow Random Relate Reverse Round Second SetGeometry Sin Sort Sqrt Stdev Sum ' +\n      'SymmetricDifference Tan Text Timestamp Today ToLocal Top Touches ToUTC TypeOf Union Variance ' +\n      'Weekday When Within Year '\n  };\n  var EXPRESSIONS;\n  var SYMBOL = {\n    className: 'symbol',\n    begin: '\\\\$[feature|layer|map|value|view]+'\n  };\n  var NUMBER = {\n    className: 'number',\n    variants: [\n      { begin: '\\\\b(0[bB][01]+)' },\n      { begin: '\\\\b(0[oO][0-7]+)' },\n      { begin: hljs.C_NUMBER_RE }\n    ],\n    relevance: 0\n  };\n  var SUBST = {\n    className: 'subst',\n    begin: '\\\\$\\\\{', end: '\\\\}',\n    keywords: KEYWORDS,\n    contains: []  // defined later\n  };\n  var TEMPLATE_STRING = {\n    className: 'string',\n    begin: '`', end: '`',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ]\n  };\n  SUBST.contains = [\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    TEMPLATE_STRING,\n    NUMBER,\n    hljs.REGEXP_MODE\n  ];\n  var PARAMS_CONTAINS = SUBST.contains.concat([\n    hljs.C_BLOCK_COMMENT_MODE,\n    hljs.C_LINE_COMMENT_MODE\n  ]);\n\n  return {\n    aliases: ['arcade'],\n    keywords: KEYWORDS,\n    contains: [\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      TEMPLATE_STRING,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      SYMBOL,\n      NUMBER,\n      { // object attr container\n        begin: /[{,]\\s*/, relevance: 0,\n        contains: [\n          {\n            begin: IDENT_RE + '\\\\s*:', returnBegin: true,\n            relevance: 0,\n            contains: [{className: 'attr', begin: IDENT_RE, relevance: 0}]\n          }\n        ]\n      },\n      { // \"value\" container\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(return)\\\\b)\\\\s*',\n        keywords: 'return',\n        contains: [\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          hljs.REGEXP_MODE,\n          {\n            className: 'function',\n            begin: '(\\\\(.*?\\\\)|' + IDENT_RE + ')\\\\s*=>', returnBegin: true,\n            end: '\\\\s*=>',\n            contains: [\n              {\n                className: 'params',\n                variants: [\n                  {\n                    begin: IDENT_RE\n                  },\n                  {\n                    begin: /\\(\\s*\\)/,\n                  },\n                  {\n                    begin: /\\(/, end: /\\)/,\n                    excludeBegin: true, excludeEnd: true,\n                    keywords: KEYWORDS,\n                    contains: PARAMS_CONTAINS\n                  }\n                ]\n              }\n            ]\n          }\n        ],\n        relevance: 0\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function', end: /\\{/, excludeEnd: true,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {begin: IDENT_RE}),\n          {\n            className: 'params',\n            begin: /\\(/, end: /\\)/,\n            excludeBegin: true,\n            excludeEnd: true,\n            contains: PARAMS_CONTAINS\n          }\n        ],\n        illegal: /\\[|%/\n      },\n      {\n        begin: /\\$[(.]/\n      }\n    ],\n    illegal: /#(?!!)/\n  };\n};"],"sourceRoot":""}