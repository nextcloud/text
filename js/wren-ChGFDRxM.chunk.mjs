var n,g;function C(){if(g)return n;g=1;function d(t){const a=t.regex,e=/[a-zA-Z]\w*/,s=["as","break","class","construct","continue","else","for","foreign","if","import","in","is","return","static","var","while"],c=["true","false","null"],i=["this","super"],f=["Bool","Class","Fiber","Fn","List","Map","Null","Num","Object","Range","Sequence","String","System"],r=["-","~",/\*/,"%",/\.\.\./,/\.\./,/\+/,"<<",">>",">=","<=","<",">",/\^/,/!=/,/!/,/\bis\b/,"==","&&","&",/\|\|/,/\|/,/\?:/,"="],o={relevance:0,match:a.concat(/\b(?!(if|while|for|else|super)\b)/,e,/(?=\s*[({])/),className:"title.function"},v={match:a.concat(a.either(a.concat(/\b(?!(if|while|for|else|super)\b)/,e),a.either(...r)),/(?=\s*\([^)]+\)\s*\{)/),className:"title.function",starts:{contains:[{begin:/\(/,end:/\)/,contains:[{relevance:0,scope:"params",match:e}]}]}},N={variants:[{match:[/class\s+/,e,/\s+is\s+/,e]},{match:[/class\s+/,e]}],scope:{2:"title.class",4:"title.class.inherited"},keywords:s},l={relevance:0,match:a.either(...r),className:"operator"},_={className:"string",begin:/"""/,end:/"""/},M={className:"property",begin:a.concat(/\./,a.lookahead(e)),end:e,excludeBegin:!0,relevance:0},m={relevance:0,match:a.concat(/\b_/,e),scope:"variable"},b={relevance:0,match:/\b[A-Z]+[a-z]+([A-Z]+[a-z]+)*/,scope:"title.class",keywords:{_:f}},h=t.C_NUMBER_MODE,w={match:[e,/\s*/,/=/,/\s*/,/\(/,e,/\)\s*\{/],scope:{1:"title.function",3:"operator",6:"params"}},A=t.COMMENT(/\/\*\*/,/\*\//,{contains:[{match:/@[a-z]+/,scope:"doctag"},"self"]}),p={scope:"subst",begin:/%\(/,end:/\)/,contains:[h,b,o,m,l]},u={scope:"string",begin:/"/,end:/"/,contains:[p,{scope:"char.escape",variants:[{match:/\\\\|\\["0%abefnrtv]/},{match:/\\x[0-9A-F]{2}/},{match:/\\u[0-9A-F]{4}/},{match:/\\U[0-9A-F]{8}/}]}]};p.contains.push(u);const E=[...s,...i,...c],O={relevance:0,match:a.concat("\\b(?!",E.join("|"),"\\b)",/[a-zA-Z_]\w*(?:[?!]|\b)/),className:"variable"};return{name:"Wren",keywords:{keyword:s,"variable.language":i,literal:c},contains:[{scope:"comment",variants:[{begin:[/#!?/,/[A-Za-z_]+(?=\()/],beginScope:{},keywords:{literal:c},contains:[],end:/\)/},{begin:[/#!?/,/[A-Za-z_]+/],beginScope:{},end:/$/}]},h,u,_,A,t.C_LINE_COMMENT_MODE,t.C_BLOCK_COMMENT_MODE,b,N,w,v,o,l,m,M,O]}}return n=d,n}export{C as r};
//# sourceMappingURL=wren-ChGFDRxM.chunk.mjs.map
